<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在Ubuntu系統底下建立Bitwarden</title>
      <link href="/posts/3d41a36f/"/>
      <url>/posts/3d41a36f/</url>
      
        <content type="html"><![CDATA[<h2 id="前言與起源"><a href="#前言與起源" class="headerlink" title="前言與起源"></a>前言與起源</h2><p>網路上相關文章非常多，但寫錯寫不清楚的占比大約90%<br>這就是為什麼我寫這篇文章來教學Bitwarden。</p><p>還有，<a href="https://www.facebook.com/SUNOFMORNING" target="_blank" rel="noopener">樂團</a>成員總是問來問去某個服務的帳號密碼，但在通訊軟體交換密碼又是一件危險的事情<br>成員本身也沒有使用密碼管理器的習慣，所以乾脆在原本的Server上建立一個管理器服務<br>如此一來主管理員控制整個密碼資料存取，成員各自也可以建立自己的密碼資訊。</p><h2 id="什麼是Bitwarden"><a href="#什麼是Bitwarden" class="headerlink" title="什麼是Bitwarden"></a>什麼是Bitwarden</h2><p><a href="https://bitwarden.com/" target="_blank" rel="noopener">Bitwarden</a></p><p><strong>一款密碼管理工具</strong>，顧名思義就是一個管理你所有密碼的平台</p><p>類似的平台有很多，例如：<a href="https://1password.com/zh-tw/" target="_blank" rel="noopener">1password</a>、<a href="https://www.lastpass.com/" target="_blank" rel="noopener">lastpass</a></p><h2 id="為什麼需要密碼管理器"><a href="#為什麼需要密碼管理器" class="headerlink" title="為什麼需要密碼管理器"></a>為什麼需要密碼管理器</h2><blockquote><p>想像你有三棟房子在台北、台中、高雄，三個家門的鑰匙會用同一把嗎?<br>這個答案非常肯定是「不會」，因為危險。</p></blockquote><blockquote><p>所以你的臉書、IG、信箱都不算資產囉?<br>既然三棟房子使用不同的鑰匙，為什麼三個不同平台的密碼要用同一組?<br>一組密碼打天下的的優點就是「便利」，但是便利的背後隱藏的卻是嚴重的資安問題<br>有的人會說：我只是個賣茶葉的，又不是工程師，幹嘛學這個?<br>「資訊安全，人人有責」，因為自己不注意資安被竊取資料然後再去請朋友、警察協助<br>「預防勝於治療」希望各位都理解。</p></blockquote><blockquote><p>如果使用的網路平台有一百個，不就要記一百組不同的密碼?<br>所以你現在看到這篇文章，教你怎麼使用密碼管理器與搭建。</p></blockquote><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul><li>一台伺服器，請移步 <a href="https://ios.league2eb.me/posts/af9bcccd/">申請每月10T流量的免費伺服器</a></li><li>Ubuntu 18.04以上</li><li>網域名稱，推薦 <a href="https://www.gandi.net/zh-Hant" target="_blank" rel="noopener">Gandi</a></li><li>SSL簽名，請移步 <a href="https://ios.league2eb.me/posts/27a8063c/">利用Let’s Encrypt自動簽署網域SSL憑證</a></li></ul><h2 id="更新一下"><a href="#更新一下" class="headerlink" title="更新一下"></a>更新一下</h2><ul><li><p>更新軟體資訊列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure></li><li><p>更新軟體</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure></li></ul><h2 id="安裝Nginx"><a href="#安裝Nginx" class="headerlink" title="安裝Nginx"></a>安裝Nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx -y</span><br></pre></td></tr></table></figure><h2 id="安裝Docker"><a href="#安裝Docker" class="headerlink" title="安裝Docker"></a>安裝Docker</h2><ul><li>安裝</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install docker.io</span><br></pre></td></tr></table></figure><ul><li>啟動Dcoekr</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><ul><li>設定伺服器重啟後，自動運行Docker</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><h2 id="安裝Docker-compose"><a href="#安裝Docker-compose" class="headerlink" title="安裝Docker-compose"></a>安裝Docker-compose</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h2 id="安裝Bitwarden"><a href="#安裝Bitwarden" class="headerlink" title="安裝Bitwarden"></a>安裝Bitwarden</h2><ul><li>建立儲存資料夾</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/bitwarden &amp;&amp; cd /data/bitwarden</span><br></pre></td></tr></table></figure><ul><li>建立docker-compose設定文件<ul><li>建議複製到筆記本修改好後，再貼到伺服器的終端機內執行</li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; docker-compose.yml &lt;&lt;EOF</span><br><span class="line">version: <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  bitwarden:</span><br><span class="line">    image: bitwardenrs/server:latest</span><br><span class="line">    container_name: bitwarden</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - /data/docker/bitwarden/data:/data</span><br><span class="line">    environment:</span><br><span class="line">      WEB_VAULT_ENABLED: <span class="string">'true'</span></span><br><span class="line">      SIGNUPS_ALLOWED: <span class="string">'true'</span></span><br><span class="line">      WEBSOCKET_ENABLED: <span class="string">'true'</span></span><br><span class="line">      LOG_FILE: /data/bitwarden.log</span><br><span class="line">      <span class="comment"># 郵件SMTP這段不是必須，爽用再用</span></span><br><span class="line">      SMTP_HOST: <span class="string">'mail.gandi.net'</span> <span class="comment"># 郵件伺服器</span></span><br><span class="line">      SMTP_FROM: <span class="string">'service@league2eb.me'</span> <span class="comment"># 寄件者</span></span><br><span class="line">      SMTP_PORT: <span class="string">'465'</span></span><br><span class="line">      SMTP_SSL: <span class="string">'true'</span></span><br><span class="line">      SMTP_USERNAME: <span class="string">'service@league2eb.me'</span></span><br><span class="line">      SMTP_PASSWORD: <span class="string">'password'</span></span><br><span class="line">      SMTP_EXPLICIT_TLS: <span class="string">'true'</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">7006</span>:<span class="number">80</span></span><br><span class="line">      - <span class="number">7007</span>:<span class="number">3012</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="設定Nginx反向代理"><a href="#設定Nginx反向代理" class="headerlink" title="設定Nginx反向代理"></a>設定Nginx反向代理</h2><ul><li>移動到nginx設定檔案的位置，並新增設定檔案</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/sites-available &amp;&amp; vi bitwarden.conf</span><br></pre></td></tr></table></figure><ul><li>建議先使用筆記本編輯好下面的內容後，在貼到bitwarden.conf中</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">upstream bitwardenrs-<span class="keyword">default</span> &#123; server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7006</span>; &#125;</span><br><span class="line">upstream bitwardenrs-ws &#123; server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">7007</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Redirect HTTP to HTTPS</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    server_name pass.league2eb.me; <span class="comment"># 改成你自己的網域</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">301</span> https:<span class="comment">//$host$request_uri;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">443</span> ssl http2;</span><br><span class="line">    server_name pass.league2eb.me;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#SSL</span></span><br><span class="line">    <span class="comment"># 這裡的SSL憑證請改成自己的路徑</span></span><br><span class="line">    ssl_certificate /etc/nginx/ssl/league2eb.me/fullchain.cer;</span><br><span class="line">    <span class="comment"># 這裡的SSL憑證請改成自己的路徑</span></span><br><span class="line">    ssl_certificate_key /etc/nginx/ssl/league2eb.me/keyfile.pem;</span><br><span class="line">    ssl_protocols TLSv1<span class="number">.2</span> TLSv1<span class="number">.3</span>;</span><br><span class="line">    ssl_prefer_server_ciphers off;</span><br><span class="line">    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;</span><br><span class="line">    add_header Content-Security-Policy upgrade-insecure-requests;</span><br><span class="line">    add_header X-XSS-Protection <span class="string">"1; mode=block"</span>;</span><br><span class="line">    add_header X-Content-Type-Options nosniff;</span><br><span class="line">    add_header Referrer-Policy <span class="string">"no-referrer-when-downgrade"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#Location</span></span><br><span class="line">    location / &#123;</span><br><span class="line">      proxy_set_header Host $host;</span><br><span class="line">      proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">      proxy_set_header X-Forwarded-<span class="keyword">For</span> $proxy_add_x_forwarded_for;</span><br><span class="line">      proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line"></span><br><span class="line">      proxy_pass http:<span class="comment">//bitwardenrs-default;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /notifications/hub/negotiate &#123;</span><br><span class="line">      proxy_set_header Host $host;</span><br><span class="line">      proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">      proxy_set_header X-Forwarded-<span class="keyword">For</span> $proxy_add_x_forwarded_for;</span><br><span class="line">      proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line"></span><br><span class="line">      proxy_pass http:<span class="comment">//bitwardenrs-default;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /notifications/hub &#123;</span><br><span class="line">      proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">      proxy_set_header Connection $http_connection;</span><br><span class="line">      proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line"></span><br><span class="line">      proxy_pass http:<span class="comment">//bitwardenrs-ws;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="連結設定檔案符號表"><a href="#連結設定檔案符號表" class="headerlink" title="連結設定檔案符號表"></a>連結設定檔案符號表</h2><ul><li>連結檔案並刷新nginx服務</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/sites-enabled &amp;&amp; ln -s ../sites-available/bitwarden.conf . &amp;&amp; systemctl reload nginx</span><br></pre></td></tr></table></figure><h2 id="正式啟用Bitwarden"><a href="#正式啟用Bitwarden" class="headerlink" title="正式啟用Bitwarden"></a>正式啟用Bitwarden</h2><ul><li>移動到bitwarden資料夾</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /data/bitwarden</span><br></pre></td></tr></table></figure><ul><li>啟動</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><ul><li>建立成功</li></ul><p><img src="https://i.imgur.com/DbH131q.png" alt></p><h2 id="使用、建立帳號"><a href="#使用、建立帳號" class="headerlink" title="使用、建立帳號"></a>使用、建立帳號</h2><ul><li>訪問自己的網域名稱將會看到這個畫面</li><li>選擇「建立帳戶」</li></ul><p><img src="https://i.imgur.com/13or5Vf.png" alt></p><ul><li>填寫資料送出</li></ul><p><img src="https://i.imgur.com/gUKJ6Ye.png" alt></p><h2 id="禁止建立帳號"><a href="#禁止建立帳號" class="headerlink" title="禁止建立帳號"></a>禁止建立帳號</h2><blockquote><p>當家人、團隊組織成員或者自己建立好帳號後，必須關閉該註冊功能<br>否則就是開大門。</p></blockquote><ul><li>回到伺服器內終端機操作移動到bitwarden資料夾</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /data/bitwarden</span><br></pre></td></tr></table></figure><ul><li>編輯docker-compose.yml</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi docker-compose.yml</span><br></pre></td></tr></table></figure><ul><li>將SIGNUPS_ALLOWED改為false</li><li>如果不打算用網頁版本管理，WEB_VAULT_ENABLED改為false</li></ul><p><img src="https://i.imgur.com/XKTFVkG.jpg" alt></p><h2 id="重啟容器"><a href="#重啟容器" class="headerlink" title="重啟容器"></a>重啟容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down &amp;&amp; docker-compose up -d</span><br></pre></td></tr></table></figure><ul><li>成功</li></ul><p><img src="https://i.imgur.com/t2uz09T.png" alt></p><h2 id="手機端使用-iOS"><a href="#手機端使用-iOS" class="headerlink" title="手機端使用(iOS)"></a>手機端使用(iOS)</h2><ul><li>前往蘋果商店<a href="https://apps.apple.com/tw/app/bitwarden-password-manager/id1137397744?l=en" target="_blank" rel="noopener">下載</a>bitwarden手機版本</li><li>打開應用開點擊左上角齒輪</li><li>伺服器 URL輸入自己的網域名稱後儲存，其餘可忽略</li><li><a href="https://bitwarden.com/download/" target="_blank" rel="noopener">手機、mac、windows都有提供，當然也少不了瀏覽器外掛</a></li></ul><hr><p><img src="https://i.imgur.com/IufoZz1.png" alt></p><hr><ul><li>應用首頁後，使用方才網頁建立的帳號密碼登入</li></ul><h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><blockquote><p>整理一下「我覺得」密碼外洩、被盜用、重複登入警告的原因</p></blockquote><ul><li>將密碼儲存在Google瀏覽器或者Safari瀏覽器。<ul><li>就是為了便利所以勾選「記住我」導致</li></ul></li><li>同一組密碼使用所有平台。</li><li>使用通訊軟體直接交換密碼，如果你硬要，那我推薦 <a href="https://telegram.org/" target="_blank" rel="noopener">Telegram</a>。</li></ul><h2 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h2><ul><li>如果要自己架設，需要有相對應管理Server的能力或者阻擋被攻擊的能力。</li><li>只要密碼儲存在「網路」就是不可能永遠安全。</li><li>這則教學文章建立在你沒有能力買NAS的前提下，如果有能力還是建議買NAS來架設Bitwarden。</li></ul><h2 id="好文推薦"><a href="#好文推薦" class="headerlink" title="好文推薦 !"></a>好文推薦 !</h2><p><a href="https://www.jkg.tw/p1984/" target="_blank" rel="noopener">在群暉 Docker 搭建免費開源密碼管理器 Bitwarden</a></p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>建構Server常用指令與工具</title>
      <link href="/posts/ae3603d5/"/>
      <url>/posts/ae3603d5/</url>
      
        <content type="html"><![CDATA[<h1 id="建構Server常用指令與工具"><a href="#建構Server常用指令與工具" class="headerlink" title="建構Server常用指令與工具"></a>建構Server常用指令與工具</h1><h2 id="先檢查一下"><a href="#先檢查一下" class="headerlink" title="先檢查一下"></a>先檢查一下</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure><h2 id="安裝-Nginx"><a href="#安裝-Nginx" class="headerlink" title="安裝 Nginx"></a>安裝 Nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx -y</span><br></pre></td></tr></table></figure><h2 id="安裝-MariaDB"><a href="#安裝-MariaDB" class="headerlink" title="安裝 MariaDB"></a>安裝 MariaDB</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mariadb-server -y</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable mariadb.service</span><br></pre></td></tr></table></figure><h2 id="安装-PHP-7-4"><a href="#安装-PHP-7-4" class="headerlink" title="安装 PHP 7.4"></a>安装 PHP 7.4</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install software-properties-common -y</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add-apt-repository ppa:ondrej/php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install php7.4 php7.4-cli php7.4-fpm php7.4-mysql php7.4-json php7.4-opcache php7.4-mbstring php7.4-xml php7.4-gd php7.4-curl -y</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -verson</span><br></pre></td></tr></table></figure><h2 id="建立WordPressDB"><a href="#建立WordPressDB" class="headerlink" title="建立WordPressDB"></a>建立WordPressDB</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE wordpress_db;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL ON wordpress_db.* TO &apos;wpuser&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;Password&apos; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h2 id="nginx相關"><a href="#nginx相關" class="headerlink" title="nginx相關"></a>nginx相關</h2><p><strong>建立WP目錄</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/www/html/wordpress</span><br></pre></td></tr></table></figure><p><strong>為 WordPress 創建 Nginx 服務器文件。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/nginx/sites-available/wordpress.conf</span><br></pre></td></tr></table></figure><p><strong>連接符號文件，順便重新載入設定</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/sites-enabled &amp;&amp; ln -s ../sites-available/wordpress.conf . &amp;&amp; systemctl reload nginx</span><br></pre></td></tr></table></figure><p><strong>刷新，通常配置有變動後使用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx</span><br></pre></td></tr></table></figure><p><strong>強制重啟nginx</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p><strong>檢查狀態</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx</span><br></pre></td></tr></table></figure><p><strong>檢查設定檔案語法有無錯誤</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><h2 id="WordPress下載與安裝"><a href="#WordPress下載與安裝" class="headerlink" title="WordPress下載與安裝"></a>WordPress下載與安裝</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/html/wordpress</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://tw.wordpress.org/latest-zh_TW.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf latest-zh_TW.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv wordpress/* .</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf wordpress latest-zh_TW.tar.gz</span><br></pre></td></tr></table></figure><h2 id="權限變更"><a href="#權限變更" class="headerlink" title="權限變更"></a>權限變更</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/html &amp;&amp; chown -R www-data:www-data *</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 755 *</span><br></pre></td></tr></table></figure><h2 id="設定WP文件"><a href="#設定WP文件" class="headerlink" title="設定WP文件"></a>設定WP文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/html/wordpress &amp;&amp; mv wp-config-sample.php wp-config.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi wp-config.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">define(&apos;DB_NAME&apos;, &apos;wordpress_db&apos;); </span><br><span class="line">define(&apos;DB_USER&apos;, &apos;wpuser&apos;); </span><br><span class="line">define(&apos;DB_PASSWORD&apos;, &apos;Passw0rd!&apos;);</span><br></pre></td></tr></table></figure><p><strong>點擊產生安全鑰匙</strong><br><a href="https://api.wordpress.org/secret-key/1.1/salt/" target="_blank" rel="noopener">https://api.wordpress.org/secret-key/1.1/salt/</a></p><h2 id="修改上傳檔案大小的位置"><a href="#修改上傳檔案大小的位置" class="headerlink" title="修改上傳檔案大小的位置"></a>修改上傳檔案大小的位置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/php/7.4/fpm/php.ini</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload_max_filesize = 32M</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_max_size = 32M</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">memory_limit = 64M</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max_execution_time = 300</span><br></pre></td></tr></table></figure><p><strong>重新啟動fpm</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart php7.4-fpm.service</span><br></pre></td></tr></table></figure><p><strong>nginx.conf的http括號內添加上限</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client_max_body_size 0;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx reload</span><br></pre></td></tr></table></figure><h2 id="80配置"><a href="#80配置" class="headerlink" title="80配置"></a>80配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">server &#123; </span><br><span class="line">           listen 80; </span><br><span class="line">           root /var/www/html/wordpress; </span><br><span class="line">           index index.php index.html; </span><br><span class="line">           server_name XXXX; </span><br><span class="line"></span><br><span class="line">           access_log /var/log/nginx/www.access.log; </span><br><span class="line">           error_log /var/log/nginx/www.error.log;  </span><br><span class="line"></span><br><span class="line">           location / &#123; </span><br><span class="line">                          try_files $uri $uri/ =404;  </span><br><span class="line">           &#125; </span><br><span class="line"></span><br><span class="line">           location ~ \.php$ &#123; </span><br><span class="line">                          include snippets/fastcgi-php.conf; </span><br><span class="line">                          fastcgi_pass unix:/run/php/php7.4-fpm.sock; </span><br><span class="line">           &#125;</span><br><span class="line"> </span><br><span class="line">           location ~ /\.ht &#123; </span><br><span class="line">                          deny all; </span><br><span class="line">           &#125; </span><br><span class="line"></span><br><span class="line">           location = /favicon.ico &#123; </span><br><span class="line">                          log_not_found off; </span><br><span class="line">                          access_log off; </span><br><span class="line">           &#125; </span><br><span class="line"></span><br><span class="line">           location = /robots.txt &#123; </span><br><span class="line">                          allow all; </span><br><span class="line">                          log_not_found off; </span><br><span class="line">                          access_log off; </span><br><span class="line">           &#125; </span><br><span class="line"></span><br><span class="line">           location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ &#123; </span><br><span class="line">                          expires max; </span><br><span class="line">                          log_not_found off; </span><br><span class="line">           &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="443配置"><a href="#443配置" class="headerlink" title="443配置"></a>443配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    listen [::]:443 ssl;</span><br><span class="line"></span><br><span class="line">    server_name demo1.xuanci.tw;</span><br><span class="line">    root /var/www/html/wordpress/;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">    access_log /var/log/nginx/access.log;</span><br><span class="line">    error_log /var/log/nginx/error.log;</span><br><span class="line"></span><br><span class="line">    ssl_certificate /etc/nginx/ssl/demo1.xuanci.tw/fullchain.cer;</span><br><span class="line">    ssl_certificate_key /etc/nginx/ssl/demo1.xuanci.tw/keyfile.pem;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;</span><br><span class="line">   </span><br><span class="line">    add_header Content-Security-Policy upgrade-insecure-requests;</span><br><span class="line">    add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class="line">    add_header X-Content-Type-Options nosniff;</span><br><span class="line">    add_header Referrer-Policy &quot;no-referrer-when-downgrade&quot;; </span><br><span class="line">    </span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ /index.php?$query_string;</span><br><span class="line">        #try_files $uri $uri/ =404;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        include snippets/fastcgi-php.conf;</span><br><span class="line">        fastcgi_pass unix:/run/php/php7.4-fpm.sock;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ /\.ht &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location = /favicon.ico &#123;</span><br><span class="line">        log_not_found off;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location = /robots.txt &#123;</span><br><span class="line">        allow all;</span><br><span class="line">        log_not_found off;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ &#123;</span><br><span class="line">        expires max;</span><br><span class="line">        log_not_found off;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name demo1.xuanci.tw;</span><br><span class="line">    rewrite ^/(.*) https://demo1.xuanci.tw/$1 permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重新導向"><a href="#重新導向" class="headerlink" title="重新導向"></a>重新導向</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    listen [::]:443 ssl;</span><br><span class="line">    server_name www.sunofmorning.com sunofmorning.com;</span><br><span class="line">    rewrite ^/(.*) https://shop.sunofmorning.com/ permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name www.sunofmorning.com sunofmorning.com;</span><br><span class="line">    rewrite ^/(.*) https://shop.sunofmorning.com/ permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="nginx-conf"><a href="#nginx-conf" class="headerlink" title="nginx.conf"></a>nginx.conf</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">user  www-data;</span><br><span class="line">worker_processes  auto;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">    accept_mutex on;</span><br><span class="line">    use epoll; # The method used in linux 2.6+</span><br><span class="line">    accept_mutex_delay 100ms;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    gzip  on;</span><br><span class="line">    client_max_body_size 0;</span><br><span class="line"></span><br><span class="line">    # Server Configuration</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    include /etc/nginx/sites-enabled/*;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker啟動WP</title>
      <link href="/posts/405aca44/"/>
      <url>/posts/405aca44/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker啟動WP"><a href="#Docker啟動WP" class="headerlink" title="Docker啟動WP"></a>Docker啟動WP</h1><h2 id="安裝Docker"><a href="#安裝Docker" class="headerlink" title="安裝Docker"></a>安裝Docker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh get-docker.sh</span><br></pre></td></tr></table></figure><h2 id="確認有安裝好Docker"><a href="#確認有安裝好Docker" class="headerlink" title="確認有安裝好Docker"></a>確認有安裝好Docker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -version</span><br></pre></td></tr></table></figure><h2 id="安裝Docker-Comopose"><a href="#安裝Docker-Comopose" class="headerlink" title="安裝Docker Comopose"></a>安裝Docker Comopose</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install docker-compose</span><br></pre></td></tr></table></figure><h2 id="確認有安裝好docker-compose"><a href="#確認有安裝好docker-compose" class="headerlink" title="確認有安裝好docker compose"></a>確認有安裝好docker compose</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose</span><br></pre></td></tr></table></figure><h2 id="利用docker-compose把yml檔案中的描述做啟動"><a href="#利用docker-compose把yml檔案中的描述做啟動" class="headerlink" title="利用docker compose把yml檔案中的描述做啟動"></a>利用docker compose把yml檔案中的描述做啟動</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h2 id="yml"><a href="#yml" class="headerlink" title="yml"></a>yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3.3&apos;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  wordpress:</span><br><span class="line">    image: wordpress</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">    environment:</span><br><span class="line">      WORDPRESS_DB_HOST: db</span><br><span class="line">      WORDPRESS_DB_USER: exampleuser</span><br><span class="line">      WORDPRESS_DB_PASSWORD: examplepass</span><br><span class="line">      WORDPRESS_DB_NAME: exampledb</span><br><span class="line">    volumes:</span><br><span class="line">      - ./wordpress:/var/www/html</span><br><span class="line"></span><br><span class="line">  db:</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_DATABASE: exampledb</span><br><span class="line">      MYSQL_USER: exampleuser</span><br><span class="line">      MYSQL_PASSWORD: examplepass</span><br><span class="line">      MYSQL_RANDOM_ROOT_PASSWORD: &apos;1&apos;</span><br><span class="line">    volumes:</span><br><span class="line">      - ./db:/var/lib/mysql</span><br><span class="line"></span><br><span class="line">docker-compose.yml (END)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Chrome找回下架或被誤判惡意的套件</title>
      <link href="/posts/3fd5bfe1/"/>
      <url>/posts/3fd5bfe1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>喜歡使用的Google Chrome 套件被下架或者被誤判為惡意軟體無法使用時，快速解決方式就是下載原始檔案並且放在本地端執行</p></blockquote><h2 id="找出該套件的資料夾"><a href="#找出該套件的資料夾" class="headerlink" title="找出該套件的資料夾"></a>找出該套件的資料夾</h2><h3 id="打開擴充套件頁面"><a href="#打開擴充套件頁面" class="headerlink" title="打開擴充套件頁面"></a>打開擴充套件頁面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chrome://extensions/</span><br></pre></td></tr></table></figure><h3 id="複製應用ID，這邊舉例One-Click-URL-Shortener，因為今天發現他被判定為惡意程式"><a href="#複製應用ID，這邊舉例One-Click-URL-Shortener，因為今天發現他被判定為惡意程式" class="headerlink" title="複製應用ID，這邊舉例One Click URL Shortener，因為今天發現他被判定為惡意程式"></a>複製應用ID，這邊舉例One Click URL Shortener，因為今天發現他被判定為惡意程式</h3><p><img src="https://i.loli.net/2020/11/12/Urm5DbtugjKqiAE.png" alt></p><h3 id="開啟終端機，並移動到下面的路徑"><a href="#開啟終端機，並移動到下面的路徑" class="headerlink" title="開啟終端機，並移動到下面的路徑"></a>開啟終端機，並移動到下面的路徑</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /Users/你的用戶名/Library/Application Support/Google/Chrome/Default/Extensions</span><br></pre></td></tr></table></figure><h3 id="搜尋該資料夾"><a href="#搜尋該資料夾" class="headerlink" title="搜尋該資料夾"></a>搜尋該資料夾</h3><p><img src="https://i.loli.net/2020/11/12/MtNRpnFjIOxqSrL.png" alt></p><p><strong>所以，完整路徑就是</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/你的用戶名/Library/Application Support/Google/Chrome/Default/Extensions/fjnodoodcohggdkacpmiidjikhlihcdk</span><br></pre></td></tr></table></figure><h2 id="確認搜尋到該資料夾後，回到Google-Chrome「封裝擴充功能」"><a href="#確認搜尋到該資料夾後，回到Google-Chrome「封裝擴充功能」" class="headerlink" title="確認搜尋到該資料夾後，回到Google Chrome「封裝擴充功能」"></a>確認搜尋到該資料夾後，回到Google Chrome「封裝擴充功能」</h2><p><img src="https://i.loli.net/2020/11/12/ubYAKeQ1WFGpCN3.png" alt></p><ul><li>目錄請填寫剛剛找到的資料夾並且加入版本號</li><li>私密金鑰檔案留空</li><li>點擊封裝擴充功能</li></ul><p><img src="https://i.loli.net/2020/11/12/XVfJqkarOQDcH8g.png" alt></p><h2 id="完成後會出現該對話視窗，並且於擴充路經中找到附檔名為crx的檔案"><a href="#完成後會出現該對話視窗，並且於擴充路經中找到附檔名為crx的檔案" class="headerlink" title="完成後會出現該對話視窗，並且於擴充路經中找到附檔名為crx的檔案"></a>完成後會出現該對話視窗，並且於擴充路經中找到附檔名為<code>crx</code>的檔案</h2><p><img src="https://i.loli.net/2020/11/12/nehz5CtuZdks34m.png" alt><br><img src="https://i.loli.net/2020/11/12/stzpHBi8byoGCZU.png" alt></p><h2 id="使用壞壞工具把程式碼給尻出來"><a href="#使用壞壞工具把程式碼給尻出來" class="headerlink" title="使用壞壞工具把程式碼給尻出來"></a>使用壞壞工具把程式碼給尻出來</h2><p><a href="https://crxextractor.com/" target="_blank" rel="noopener">壞壞工具</a></p><ul><li>選擇剛剛的crx檔案</li></ul><p><img src="https://i.loli.net/2020/11/12/2nzMvaBdHxD5iYK.png" alt></p><ul><li>下載原始碼到你自己想要放的資料夾</li></ul><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p><a href="https://tinyurl.com/yxfzhzh3" target="_blank" rel="noopener">快速安裝</a></p>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift於字串中插入指定文字</title>
      <link href="/posts/8e0ec638/"/>
      <url>/posts/8e0ec638/</url>
      
        <content type="html"><![CDATA[<h2 id="舉個例子"><a href="#舉個例子" class="headerlink" title="舉個例子"></a>舉個例子</h2><p><strong>信用卡</strong>輸入後，UI有可能會是這樣顯示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0000-0000-0000-0000</span><br></pre></td></tr></table></figure><p>假設這個應用的UI不是設定四個TextField<br>那這時，就有必要在指定的範圍內加入指定字串</p><h2 id="extension"><a href="#extension" class="headerlink" title="extension"></a>extension</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">StringProtocol</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">RangeReplaceableCollection</span> </span>&#123;</span><br><span class="line">    <span class="keyword">mutating</span> <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(separator: <span class="keyword">Self</span>, every <span class="built_in">count</span>: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">indices</span>.reversed() <span class="keyword">where</span> i != startIndex &amp;&amp;</span><br><span class="line">            <span class="built_in">distance</span>(from: startIndex, to: i) % <span class="built_in">count</span> == <span class="number">0</span> &#123;</span><br><span class="line">                insert(contentsOf: separator, at: i)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> creditcard: <span class="type">String</span> = <span class="string">"1111222233334444"</span></span><br><span class="line">creditcard.insert(separator: <span class="string">"-"</span>, every: <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(creditcard)</span><br><span class="line"><span class="comment">//1111-2222-3333-4444</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> String </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS13中，statusBar訪問寫法</title>
      <link href="/posts/216bbda6/"/>
      <url>/posts/216bbda6/</url>
      
        <content type="html"><![CDATA[<h2 id="原本是這樣寫，但訪問的時候會有機率性閃退"><a href="#原本是這樣寫，但訪問的時候會有機率性閃退" class="headerlink" title="原本是這樣寫，但訪問的時候會有機率性閃退"></a>原本是這樣寫，但訪問的時候會有機率性閃退</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> statusBarView: <span class="type">UIView?</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> responds(to: <span class="type">Selector</span>((<span class="string">"statusBar"</span>))) &#123;</span><br><span class="line">        <span class="keyword">return</span> value(forKey: <span class="string">"statusBar"</span>) <span class="keyword">as</span>? <span class="type">UIView</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>並且給出下面這段Error</p><p><fancybox><img src="https://i.loli.net/2020/06/03/LDsgopByXZIW7hm.png" alt></fancybox></p><h2 id="新寫法"><a href="#新寫法" class="headerlink" title="新寫法"></a>新寫法</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> statusBarView: <span class="type">UIView?</span> &#123;</span><br><span class="line">     <span class="keyword">if</span> #available(iOS <span class="number">13.0</span>, *) &#123;</span><br><span class="line">         <span class="keyword">let</span> statusBarView = <span class="type">UIView</span>(frame: <span class="type">UIApplication</span>.shared.statusBarFrame)</span><br><span class="line">         <span class="keyword">return</span> statusBarView</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">guard</span> <span class="keyword">let</span> statusBarView = <span class="type">UIApplication</span>.shared.value(forKeyPath: <span class="string">"statusBarWindow.statusBar"</span>) <span class="keyword">as</span>? <span class="type">UIView</span> <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> statusBarView</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>特別感謝<a href="https://www.marksu.idv.tw/" target="_blank" rel="noopener">MARK SU</a>用心記錄</strong><br>此篇特別感謝，並筆記</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> iOS </tag>
            
            <tag> UIView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Let’s Encrypt自動簽署網域SSL憑證</title>
      <link href="/posts/27a8063c/"/>
      <url>/posts/27a8063c/</url>
      
        <content type="html"><![CDATA[<h2 id="Let’s-Encrypt自動簽署"><a href="#Let’s-Encrypt自動簽署" class="headerlink" title="Let’s Encrypt自動簽署"></a>Let’s Encrypt自動簽署</h2><p>斗大的標題<br><strong>「Let’s Encrypt 是免費、自動化和開放的憑證頒發機構」</strong></p><p><a href="https://letsencrypt.org/zh-tw/" target="_blank" rel="noopener">基本上就是免費的SSL憑證簽署的服務</a></p><h2 id="acme-sh"><a href="#acme-sh" class="headerlink" title="acme.sh"></a>acme.sh</h2><p><a href="https://github.com/acmesh-official/acme.sh" target="_blank" rel="noopener">一個自動從letsencrypt簽署免費證書的腳本</a></p><h2 id="條件、環境"><a href="#條件、環境" class="headerlink" title="條件、環境"></a>條件、環境</h2><ol><li>已經<a href="www.gandi.net">購買</a>了網域名稱</li><li>已經從<a href="https://dash.cloudflare.com/" target="_blank" rel="noopener">Cloudflare</a>指定了IP</li><li>伺服器已經安裝nginx，如果沒有<a href="https://tinyurl.com/yda7dhnd" target="_blank" rel="noopener">點這裡</a></li></ol><h2 id="安裝acme-sh"><a href="#安裝acme-sh" class="headerlink" title="安裝acme.sh"></a>安裝acme.sh</h2><p><strong>以下兩個指令在Server端執行，不是本機</strong></p><p><code>在伺服器安裝acme.sh</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh</span><br></pre></td></tr></table></figure><p><strong>安裝完畢會這樣</strong></p><p><img src="https://i.loli.net/2020/05/29/wRzeXA9rPdLukjf.png" alt></p><p><strong>移動到root底下的acme資料夾</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ./.acme.sh/</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/05/29/aqQkfVjW3N97LBC.png" alt></p><p><code>安裝完畢打開acme.sh 的自動更新</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./acme.sh  --upgrade  --auto-upgrade</span><br></pre></td></tr></table></figure><p><strong>確認成功</strong></p><p><img src="https://i.loli.net/2020/05/29/O4Gwp52STWy1chX.png" alt></p><h2 id="從CloudFlare先記錄一下必要資訊"><a href="#從CloudFlare先記錄一下必要資訊" class="headerlink" title="從CloudFlare先記錄一下必要資訊"></a>從CloudFlare先記錄一下必要資訊</h2><p><code>選擇你已經建立好的網域</code></p><p><img src="https://i.loli.net/2020/05/29/2KXEYJvgxMAS7tu.png" alt></p><p><strong>網頁滾動到在下方</strong></p><p><code>打開一個記事本然後把這兩個複製貼上到記事本先記著，記事本不要關閉</code></p><ul><li>區域ID</li><li>帳戶ID</li></ul><p><img src="https://i.loli.net/2020/05/29/23LrDMT5AuveRgl.png" alt></p><h2 id="申請令牌"><a href="#申請令牌" class="headerlink" title="申請令牌"></a>申請令牌</h2><p><code>點擊剛剛記錄區域ID、帳戶ID區塊最下方的獲取您的API令牌</code></p><p><img src="https://i.loli.net/2020/05/29/7z4GCoyk5p9itWO.png" alt></p><p><code>點擊創建令牌</code></p><p><strong>令牌不可共用，所以獨立再創一個這個畫面只是表示我曾經創立過的樣子</strong></p><p><img src="https://i.loli.net/2020/05/29/Nzu5oZdhk6X7FIO.png" alt></p><p><code>找到編輯區域DNS併點擊使用模版</code></p><p><img src="https://i.loli.net/2020/05/29/SqzOX3T7fpuAiJb.png" alt></p><p><code>選擇你想指定的網域</code></p><p><img src="https://i.loli.net/2020/05/29/XgPzLB5KqVkHvYx.png" alt></p><p><code>滾動到最下方，繼續以顯示摘要</code></p><p><img src="https://i.loli.net/2020/05/29/E9WRztgDe1mMFXY.png" alt></p><p><code>點擊創建令牌</code></p><p><img src="https://i.loli.net/2020/05/29/WmkHCxP9lon73iy.png" alt></p><p><strong>複製專屬該網域的令牌到剛剛的記事本</strong></p><p><img src="https://i.loli.net/2020/05/29/BPbGE9pKZdS6Owy.png" alt></p><h2 id="確認一下記事本"><a href="#確認一下記事本" class="headerlink" title="確認一下記事本"></a>確認一下記事本</h2><p><code>應該會像是這樣子，前面的文字是我標示的讓讀者清楚</code><br><code>反正會有三組東西，但最好自己標記哪一個是什麼</code></p><p><img src="https://i.loli.net/2020/05/29/WJOeycj4mPslaRx.png" alt></p><h2 id="回到伺服器做令牌、區域、帳戶設定"><a href="#回到伺服器做令牌、區域、帳戶設定" class="headerlink" title="回到伺服器做令牌、區域、帳戶設定"></a>回到伺服器做令牌、區域、帳戶設定</h2><p><strong>這小標題寫很清楚，現在要去下指令的地方是伺服器噢！</strong></p><p><code>指定令牌、帳號、區域</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CF_Token=剛剛複製的另牌</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CF_Account_ID=剛剛複製的帳戶ID</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CF_Zone_ID=剛剛複製的區域ID</span><br></pre></td></tr></table></figure><h2 id="簽名證書"><a href="#簽名證書" class="headerlink" title="簽名證書"></a>簽名證書</h2><p><strong>一樣是在伺服器下指令</strong></p><p><strong>先移動到/root/.acme.sh</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /root/.acme.sh</span><br></pre></td></tr></table></figure><p><strong>簽</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./acme.sh --issue --dns dns_cf -d 這文字替換成你的網域 -d &apos;*.這文字替換成你的網域&apos;</span><br></pre></td></tr></table></figure><p><strong>範例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./acme.sh --issue --dns dns_cf -d fuckyou.com -d &apos;*.fuckyou.com&apos;</span><br></pre></td></tr></table></figure><p><code>因為這裡會跑一大堆，直接看重點</code></p><p><img src="https://i.loli.net/2020/05/29/AyJYOXglifxmjkw.png" alt></p><ol><li>會自動在/root/.acme.sh底下生成跟你的網域名稱一樣的資料夾</li><li>證書會放在這裡面</li></ol><p><img src="https://i.loli.net/2020/05/29/BI8goPKrbMpY7q5.png" alt></p><h2 id="去nginx底下建立跟域名同樣的資料夾"><a href="#去nginx底下建立跟域名同樣的資料夾" class="headerlink" title="去nginx底下建立跟域名同樣的資料夾"></a>去nginx底下建立跟域名同樣的資料夾</h2><p><code>移動到nginx底下併建立ssl資料夾</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx/ &amp;&amp; mkdir ssl</span><br></pre></td></tr></table></figure><p><code>移動到 ssl 資料夾並且建立與同域名相同的資料夾</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ssl &amp;&amp; mkdir 同域名資料夾名稱</span><br></pre></td></tr></table></figure><p><strong>建議這麼做是因為如果伺服器有多個域名，Key的檔案名稱會一樣，如果丟在同一個目錄底下會導致覆蓋，用域名來區分資料夾最好管理</strong></p><h2 id="安裝證書到指定資料夾"><a href="#安裝證書到指定資料夾" class="headerlink" title="安裝證書到指定資料夾"></a>安裝證書到指定資料夾</h2><p><code>回到acme資料夾</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /root/.acme.sh</span><br></pre></td></tr></table></figure><p><strong>替換指令中的文字，不要整個貼上去結果那邊苦惱…</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./acme.sh --installcert -d 網域名稱 --key-file /etc/nginx/ssl/同網域之資料夾名稱/keyfile.pem  --fullchain-file /etc/nginx/ssl/同網域之資料夾名稱/fullchain.cer --reloadcmd &quot;sudo service nginx force-reload&quot;</span><br></pre></td></tr></table></figure><p><strong>成功</strong></p><p><img src="https://i.loli.net/2020/05/29/sy3ewVQocEIAmKf.png" alt></p><h2 id="Nginx寫好設定檔案"><a href="#Nginx寫好設定檔案" class="headerlink" title="Nginx寫好設定檔案"></a>Nginx寫好設定檔案</h2><p><strong>這裡的行為一樣是在Server端操作</strong></p><p><code>移動到nginx資料夾內</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/</span><br></pre></td></tr></table></figure><p><strong>這裡說一個坑，必須讀</strong></p><p>系統預設吃的443Port設定檔案會根據版本還有作業系統不同有差異<br>寫到這裡的時候我本來要請讀者直接在conf.d裡面新增一個default.conf的檔案，但根據學習經驗…有可能預設讀取的位置卻是<br>/etc/nginx/sites-enabled/資料夾底下<br>套句我師父的話：「伺服器好難」</p><h3 id="如果你的Nginx預設就有sites-enabled資料夾"><a href="#如果你的Nginx預設就有sites-enabled資料夾" class="headerlink" title="如果你的Nginx預設就有sites-enabled資料夾"></a>如果你的Nginx預設就有sites-enabled資料夾</h3><p><code>編輯nginx.conf，並指定設定檔案資料夾</code><br><code>寫在http的括號內</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">        include /etc/nginx/sites-enabled/*;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>移動到sites-enabled 並且新增一個與你的網域同名的設定檔</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> sites-enabled &amp;&amp; vi 網域.conf</span><br></pre></td></tr></table></figure><p><strong>把底下的程式碼直接貼上，但請修改好其中的網域</strong> </p><script src="https://gist.github.com/League2EB/a5d4c5f627fabf817b09da3c15973c25.js"></script><p><code>儲存寫入</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><h3 id="如果你的Nginx預設「沒有」sites-enabled資料夾"><a href="#如果你的Nginx預設「沒有」sites-enabled資料夾" class="headerlink" title="如果你的Nginx預設「沒有」sites-enabled資料夾"></a>如果你的Nginx預設「沒有」sites-enabled資料夾</h3><p><code>移動並且編輯cond.d資料夾中的default.conf</code></p><p>修改好<a href="https://gist.github.com/League2EB/a5d4c5f627fabf817b09da3c15973c25" target="_blank" rel="noopener">這個</a>裡面的網域後貼上</p><p><code>儲存寫入</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><h2 id="Cloudflare中SSL設定"><a href="#Cloudflare中SSL設定" class="headerlink" title="Cloudflare中SSL設定"></a>Cloudflare中SSL設定</h2><p><code>網域中類型A的代理切換為關閉</code></p><p><img src="https://i.loli.net/2020/06/01/VJQTrIvOicLYENq.png" alt></p><p><code>加密模式改為完全嚴格</code></p><p><img src="https://i.loli.net/2020/06/01/NZD8oJI4dVpKQEU.png" alt></p><h2 id="重刷新網頁，查看憑證是否成功"><a href="#重刷新網頁，查看憑證是否成功" class="headerlink" title="重刷新網頁，查看憑證是否成功"></a>重刷新網頁，查看憑證是否成功</h2><p><code>範例</code></p><p><img src="https://i.loli.net/2020/06/01/tGUnOmZAT9NdJoy.png" alt></p><p><strong>如果以上有寫錯，或者不懂歡迎提出討論</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>用指令殺死卡住的程式</title>
      <link href="/posts/9a823c6d/"/>
      <url>/posts/9a823c6d/</url>
      
        <content type="html"><![CDATA[<h2 id="程式卡住了而且無法停止"><a href="#程式卡住了而且無法停止" class="headerlink" title="程式卡住了而且無法停止"></a>程式卡住了而且無法停止</h2><p>有時候一次開太多東西會導致某個軟體卡住<br>此時我們想要關閉重新開啟大多都使用<br><code>command + option + esc</code><br>但就算打了強制結束應用程式的視窗仍會發生</p><ul><li>沒看到該應用程式</li><li>怎麼強制關閉就是關不了</li></ul><h2 id="終端機可以搞定"><a href="#終端機可以搞定" class="headerlink" title="終端機可以搞定"></a>終端機可以搞定</h2><p>打開終端機</p><p>替換xxx為卡死的軟體名稱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(ps -ceo pid=,comm= | awk '/xxx/ &#123; print $1; exit &#125;')</span>"</span></span><br></pre></td></tr></table></figure><p>該指令成功的話會打印出一組數字<br>例如 42454</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 42454</span><br></pre></td></tr></table></figure><h2 id="這篇很短"><a href="#這篇很短" class="headerlink" title="這篇很短"></a>這篇很短</h2><p>看看就好</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Command </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac + OBS + GoPro + instagram直播</title>
      <link href="/posts/1ea94c7e/"/>
      <url>/posts/1ea94c7e/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>現在要直播似乎是一件容易的事情，尤其臉書、油管這兩個平台<br>但若是要在「Mac」上進行instagram的直播似乎就是一件麻煩的事情</p><h2 id="探索"><a href="#探索" class="headerlink" title="探索"></a>探索</h2><p>尋找答案的過程中發現了<a href="https://github.com/yuripe-murmur" target="_blank" rel="noopener">yuripe</a>這位大神所撰寫的<a href="https://yuripe-murmur.github.io/posts/2019-11-09-ig/" target="_blank" rel="noopener">文章</a><br>感謝yuripe！<br>但在其中發現了一些小問題，是yuripe沒有特別撰寫到了，所以開了這篇來記錄一下</p><h2 id="條件、必要軟體"><a href="#條件、必要軟體" class="headerlink" title="條件、必要軟體"></a>條件、必要軟體</h2><ul><li>GoPro</li><li>macOS</li><li><a href="https://obsproject.com/" target="_blank" rel="noopener">OBS</a></li><li><a href="https://github.com/mattingalls/Soundflower/releases" target="_blank" rel="noopener">Soundflower</a></li><li><a href="https://www.camerasuite.org/download" target="_blank" rel="noopener">CameraSuite</a></li></ul><h2 id="環境配置"><a href="#環境配置" class="headerlink" title="環境配置"></a>環境配置</h2><p><code>安裝php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install php</span><br></pre></td></tr></table></figure><h2 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h2><p><a href="https://tinyurl.com/ya26nvh7" target="_blank" rel="noopener">連線教學</a></p><p><a href="https://github.com/zProAle/InstaLive-PHP" target="_blank" rel="noopener">PHP</a></p><p><a href="https://github.com/platformio/platform-lattice_ice40/issues/7" target="_blank" rel="noopener">問題解決</a></p>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> ffmpeg </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何將推送通知發送到iOS模擬器</title>
      <link href="/posts/258f1e09/"/>
      <url>/posts/258f1e09/</url>
      
        <content type="html"><![CDATA[<h2 id="過去"><a href="#過去" class="headerlink" title="過去"></a>過去</h2><p>Xcode一直以來都不支援模擬器接收推播<br>當要測試的時候，僅能使用實機來做驗證<br>相當麻煩！</p><h2 id="條件"><a href="#條件" class="headerlink" title="條件"></a>條件</h2><ul><li>Xcode 11.4 beta +</li></ul><h2 id="註冊通知並請求權限"><a href="#註冊通知並請求權限" class="headerlink" title="註冊通知並請求權限"></a>註冊通知並請求權限</h2><p><code>AppDelegate.swift</code></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> UserNotifications</span><br><span class="line"></span><br><span class="line"><span class="meta">@UIApplicationMain</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppDelegate</span>: <span class="title">UIResponder</span>, <span class="title">UIApplicationDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: <span class="keyword">Any</span>]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        registerForPushNotifications()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">registerNotification</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="type">UNUserNotificationCenter</span>.current().requestAuthorization(options: [.alert, .sound, .badge]) &#123; (granted, error) <span class="keyword">in</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"\(granted)"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="寫一個模擬的通知內容並儲存附檔名為-apns的檔案"><a href="#寫一個模擬的通知內容並儲存附檔名為-apns的檔案" class="headerlink" title="寫一個模擬的通知內容並儲存附檔名為.apns的檔案"></a>寫一個模擬的通知內容並儲存附檔名為.apns的檔案</h2><p><code>Simulator Target Bundle必須要修改為對應的BundleId</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Simulator Target Bundle&quot;: &quot;對應的軟體BundleID&quot;,</span><br><span class="line">    &quot;aps&quot;: &#123;</span><br><span class="line">        &quot;alert&quot;: &quot;測試&quot;,</span><br><span class="line">        &quot;sound&quot;: &quot;default&quot;,</span><br><span class="line">        &quot;badge&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>寫好之後儲存在桌面命名ExamplePush.apns</code></p><h2 id="複製模擬器的UDID"><a href="#複製模擬器的UDID" class="headerlink" title="複製模擬器的UDID"></a>複製模擬器的UDID</h2><p><img src="https://i.loli.net/2020/05/12/Iujqeb398DS71lZ.png" alt></p><h2 id="方法1-終端機輸入"><a href="#方法1-終端機輸入" class="headerlink" title="方法1 - 終端機輸入"></a>方法1 - 終端機輸入</h2><p><code>設備id替換為模擬器的UDID</code><br><code>應用id替換為bundleid</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcrun simctl push 設備id 應用id ExamplePush.apns</span><br></pre></td></tr></table></figure><h2 id="方法2-直接拖拉"><a href="#方法2-直接拖拉" class="headerlink" title="方法2 - 直接拖拉"></a>方法2 - 直接拖拉</h2><p><img src="https://i.loli.net/2020/05/12/MQa9bDhfstLo64N.png" alt></p><h2 id="幹，誰再跟我說Xcode難用"><a href="#幹，誰再跟我說Xcode難用" class="headerlink" title="幹，誰再跟我說Xcode難用"></a>幹，誰再跟我說Xcode難用</h2><p>你他媽人家有在進步啦！</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Simulator </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用v2ray連線vpn</title>
      <link href="/posts/4deff9b2/"/>
      <url>/posts/4deff9b2/</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><ol><li>我們公司不知道為什麼阻擋了我使用系統的vpn連線</li><li>電信商LTE都是走IPV6 ，而<a href="https://www.oracle.com/tw/cloud/free/" target="_blank" rel="noopener">甲古文</a>就是不允許….</li><li>或者有其他原因….幹你xxxxxx</li></ol><h2 id="本篇注意事項"><a href="#本篇注意事項" class="headerlink" title="本篇注意事項"></a>本篇注意事項</h2><ul><li><a href="https://ios.league2eb.me/posts/af9bcccd/">已經申請了伺服器</a></li><li><a href="https://tinyurl.com/ybb5ze7u" target="_blank" rel="noopener">伺服器裡頭已經安裝Docker</a></li><li><a href="https://tinyurl.com/yd73qc3w" target="_blank" rel="noopener">沒跑過這個流程，但至少會開防火牆</a></li><li>[Server] - 表示指令都是在伺服器中操作</li><li>[Web] - 表示在某個網站上面操作</li><li>[Local] - 表示在你當前的電腦操作</li><li>[Client] - 表示在Mac桌面版本的v2ray操作</li></ul><h2 id="Web-去Server後台開一組防火牆"><a href="#Web-去Server後台開一組防火牆" class="headerlink" title="[Web] 去Server後台開一組防火牆"></a>[Web] 去Server後台開一組防火牆</h2><p><img src="https://i.loli.net/2020/05/03/hBuTtOpPDejMa5c.png" alt></p><p>「目的地連接埠範圍」填寫 2020，你要寫1234也可以</p><h2 id="Server-在Server裡頭安裝v2ray"><a href="#Server-在Server裡頭安裝v2ray" class="headerlink" title="[Server] - 在Server裡頭安裝v2ray"></a>[Server] - 在Server裡頭安裝v2ray</h2><p><code>獲取v2ray檔案</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull v2ray/official</span><br></pre></td></tr></table></figure><p><code>建立資料夾、建立設定檔案、設定權限</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/v2ray</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/v2ray/config.json</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 /etc/v2ray/</span><br></pre></td></tr></table></figure><h2 id="Web-先製造一組專用識別號碼"><a href="#Web-先製造一組專用識別號碼" class="headerlink" title="[Web] 先製造一組專用識別號碼"></a>[Web] 先製造一組專用識別號碼</h2><p><a href="https://www.uuidgenerator.net/" target="_blank" rel="noopener">從這裡</a> 先製造一組號碼貼到你的記事本，等等會用到</p><h2 id="Server-編輯設定檔案"><a href="#Server-編輯設定檔案" class="headerlink" title="[Server] 編輯設定檔案"></a>[Server] 編輯設定檔案</h2><p><code>進入編輯模式</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/v2ray/config.json</span><br></pre></td></tr></table></figure><p><code>把下面的內容貼上</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;log&quot;: &#123;</span><br><span class="line">        &quot;access&quot;: &quot;/var/log/v2ray/access.log&quot;,</span><br><span class="line">        &quot;error&quot;: &quot;/var/log/v2ray/error.log&quot;,</span><br><span class="line">        &quot;loglevel&quot;: &quot;warning&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;inbound&quot;: &#123;</span><br><span class="line">        &quot;port&quot;: 9487,</span><br><span class="line">        &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">        &quot;settings&quot;: &#123;</span><br><span class="line">            &quot;clients&quot;: [&#123;</span><br><span class="line">                &quot;id&quot;: &quot;f476e5d9-62d6-4197-8c66-36f6e305fd80&quot;,</span><br><span class="line">                &quot;level&quot;: 1,</span><br><span class="line">                &quot;alterId&quot;: 64</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;streamSettings&quot;: &#123;</span><br><span class="line">            &quot;network&quot;: &quot;tcp&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;outbound&quot;: &#123;</span><br><span class="line">        &quot;protocol&quot;: &quot;freedom&quot;,</span><br><span class="line">        &quot;settings&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;outboundDetour&quot;: [&#123;</span><br><span class="line">        &quot;tag&quot;: &quot;blocked&quot;,</span><br><span class="line">        &quot;protocol&quot;: &quot;blackhole&quot;,</span><br><span class="line">        &quot;settings&quot;: &#123;&#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    &quot;routing&quot;: &#123;</span><br><span class="line">        &quot;strategy&quot;: &quot;rules&quot;,</span><br><span class="line">        &quot;settings&quot;: &#123;</span><br><span class="line">            &quot;rules&quot;: [&#123;</span><br><span class="line">                &quot;outboundTag&quot;: &quot;blocked&quot;,</span><br><span class="line">                &quot;type&quot;: &quot;field&quot;,</span><br><span class="line">                &quot;ip&quot;: [&quot;geoip:private&quot;]</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UUID-把剛剛在網站上的那組號碼更換"><a href="#UUID-把剛剛在網站上的那組號碼更換" class="headerlink" title="UUID 把剛剛在網站上的那組號碼更換"></a>UUID 把剛剛在網站上的那組號碼更換</h4><p><img src="https://i.loli.net/2020/05/03/ICE1yY76RkWe3O2.png" alt></p><h4 id="把一開始去後台設定的防火牆連接埠號碼替換"><a href="#把一開始去後台設定的防火牆連接埠號碼替換" class="headerlink" title="把一開始去後台設定的防火牆連接埠號碼替換"></a>把一開始去後台設定的防火牆連接埠號碼替換</h4><p><img src="https://i.loli.net/2020/05/03/LAvXdc3Gqa2l4zK.png" alt></p><h2 id="Server-存檔"><a href="#Server-存檔" class="headerlink" title="[Server] 存檔"></a>[Server] 存檔</h2><p><a href="https://lmgtfy.com/?q=vi+%E5%AD%98%E6%AA%94" target="_blank" rel="noopener">如果不知道怎麼存檔，看這裡</a></p><h2 id="server-開啟v2ray映像檔"><a href="#server-開啟v2ray映像檔" class="headerlink" title="[server] 開啟v2ray映像檔"></a>[server] 開啟v2ray映像檔</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name v2ray --cap-add=NET_ADMIN --restart=always -p 9487:9487/tcp  -v /etc/v2ray:/etc/v2ray -v /var/log/v2ray:/var/log/v2ray v2fly/v2fly-core</span><br></pre></td></tr></table></figure><p><code>檢查一下</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h2 id="Client-下載v2ray並設定好通道"><a href="#Client-下載v2ray並設定好通道" class="headerlink" title="[Client] 下載v2ray並設定好通道"></a>[Client] 下載v2ray並設定好通道</h2><p><a href="https://github.com/v2ray/v2ray-core/releases" target="_blank" rel="noopener">下載點</a></p><p><code>它長這樣子，我覺得很醜</code></p><p><img src="https://i.loli.net/2020/05/03/1leUmtcLkwXKD9q.png" alt></p><p><code>打開之後，會運行在Mac的上方工作列，接進入設定</code></p><p><img src="https://i.imgur.com/rywISPi.png" alt></p><p><code>跟著圖片設定，完成後點擊右下角OK</code></p><p><img src="https://i.loli.net/2020/05/03/EwlYLp76ODAHJsu.png" alt></p><ol><li>伺服器IP位置</li><li>連接埠號</li><li>一開始建立的UDID</li><li>輸入1</li><li>給一個你自己看得懂的名字</li></ol><p><code>點擊載入</code></p><p><img src="https://i.loli.net/2020/05/03/cX8aWi2kE6nsxZI.png" alt></p><h2 id="查看IP位置，確定是否已經跳轉"><a href="#查看IP位置，確定是否已經跳轉" class="headerlink" title="查看IP位置，確定是否已經跳轉"></a>查看IP位置，確定是否已經跳轉</h2><p><a href="https://www.iplocation.net/" target="_blank" rel="noopener">查看</a></p><h2 id="特別感謝"><a href="#特別感謝" class="headerlink" title="特別感謝"></a>特別感謝</h2><p><a href="https://hiraku.tw/2020/03/6093/" target="_blank" rel="noopener">皮樂姊真的有夠正</a></p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次移除本地垃圾分支</title>
      <link href="/posts/352ce7b8/"/>
      <url>/posts/352ce7b8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch | grep -v <span class="string">"develop"</span> | xargs git branch -D</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>製作VPN的描述檔</title>
      <link href="/posts/5f22c5f9/"/>
      <url>/posts/5f22c5f9/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>需要VPN有很多種理由</p><ol><li>做點壞事(?)</li><li>看其他國家的Netflix</li><li>就是想用免費流量的國外IP來訪問所有網路內容</li></ol><hr><h2 id="本篇注意事項"><a href="#本篇注意事項" class="headerlink" title="本篇注意事項"></a>本篇注意事項</h2><ol><li>標題有[Server] 表示指令在伺服器裡頭執行</li><li>標題有[Local] 表示該指令在當前的電腦裡頭的終端機執行</li><li>標題有[Web] 表示這個動作會在Oracle的Dashboard操作</li></ol><h2 id="Local-SSH連線到你已經戳到的Oracle-Serve"><a href="#Local-SSH連線到你已經戳到的Oracle-Serve" class="headerlink" title="[Local] SSH連線到你已經戳到的Oracle Serve"></a>[Local] SSH連線到你已經戳到的Oracle Serve</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa ubuntu@你的Oracle伺服器IP</span><br></pre></td></tr></table></figure><h2 id="Local-同意連線，輸入yes並點按下enter"><a href="#Local-同意連線，輸入yes並點按下enter" class="headerlink" title="[Local] 同意連線，輸入yes並點按下enter"></a>[Local] 同意連線，輸入yes並點按下enter</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Warning: Identity file id_rsa not accessible: No such file or directory.</span><br><span class="line">The authenticity of host <span class="string">'127.0.0.1 (127.0.0.1)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:UhUdslpLpVGkuwdT6VodmB3L4LkjStjXrxydr9b9NMs.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])?</span></span><br></pre></td></tr></table></figure><p><strong>這是成功連線畫面</strong></p><p><fancybox><img src="https://i.imgur.com/L0zexWg.png" alt></fancybox></p><h2 id="Server-進入Root權限模式"><a href="#Server-進入Root權限模式" class="headerlink" title="[Server] 進入Root權限模式"></a>[Server] 進入Root權限模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><h2 id="Server-修改密碼"><a href="#Server-修改密碼" class="headerlink" title="[Server] 修改密碼"></a>[Server] 修改密碼</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p><strong>輸入的時候不會顯示密碼</strong></p><p><fancybox><img src="https://i.imgur.com/O5MN6tK.png" alt></fancybox></p><h2 id="Server-修改authorized-keys內容"><a href="#Server-修改authorized-keys內容" class="headerlink" title="[Server] 修改authorized_keys內容"></a>[Server] 修改authorized_keys內容</h2><p><code>編輯authorized_keys</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~ &amp;&amp;  vi ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p><code>瘋狂按鍵盤上的d直到內容空白</code></p><p><code>點擊鍵盤上的「i」進入編輯模式，左下角應該會出現insert</code></p><p><fancybox><img src="https://i.imgur.com/iRU3rC2.png" alt></fancybox></p><h2 id="再開一個終端機，一個畫面是Server一個畫面是Local"><a href="#再開一個終端機，一個畫面是Server一個畫面是Local" class="headerlink" title="再開一個終端機，一個畫面是Server一個畫面是Local"></a>再開一個終端機，一個畫面是Server一個畫面是Local</h2><h2 id="Local-回到電腦的終端機尋找id-rsa-pub裡頭的鑰匙並複製起來"><a href="#Local-回到電腦的終端機尋找id-rsa-pub裡頭的鑰匙並複製起來" class="headerlink" title="[Local] 回到電腦的終端機尋找id_rsa.pub裡頭的鑰匙並複製起來"></a>[Local] 回到電腦的終端機尋找id_rsa.pub裡頭的鑰匙並複製起來</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h2 id="Server-把剛剛複製的Key貼到進入編輯模式的authorized-keys底下"><a href="#Server-把剛剛複製的Key貼到進入編輯模式的authorized-keys底下" class="headerlink" title="[Server] 把剛剛複製的Key貼到進入編輯模式的authorized_keys底下"></a>[Server] 把剛剛複製的Key貼到進入編輯模式的authorized_keys底下</h2><p><fancybox><img src="https://i.imgur.com/0Q7nZTF.png" alt></fancybox></p><p><code>完成後先按一下鍵盤的ESC，然後下指令</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><p>然後Enter<br><strong>這裡的作法是為了讓你本機電腦可以直接進入root的權限模式</strong></p><h2 id="Web-開防火牆"><a href="#Web-開防火牆" class="headerlink" title="[Web] 開防火牆"></a>[Web] 開防火牆</h2><ul><li>80Port = 只是為了測試使用，不爽開可以略過</li><li>443Port = 未來如果有使用SSL，這裡就一起開吧</li></ul><p><code>運算</code> -&gt; <code>執行處理</code></p><p><fancybox><img src="https://i.loli.net/2020/04/28/PzxeKYZRTQB4bfd.png" alt></fancybox></p><p><code>點擊你的機器</code></p><p><fancybox><img src="https://i.imgur.com/TXCgeqJ.png" alt></fancybox></p><p><code>點擊公用子網路</code></p><p><fancybox><img src="https://i.imgur.com/7sKtPYN.png" alt></fancybox></p><p><code>點擊安全清單下的安全資訊</code></p><p><fancybox><img src="https://i.imgur.com/r5H8txf.png" alt></fancybox></p><p><code>點擊新增傳入規則按鈕，並新增三組，仔細看下面圖片</code></p><p><fancybox><img src="https://i.imgur.com/QVHqxxx.png" alt></fancybox></p><p><code>新增80Port</code></p><p><fancybox><img src="https://i.imgur.com/WhO3cXJ.png" alt></fancybox></p><p><code>新增4500Port</code></p><p><fancybox><img src="https://i.imgur.com/KDU3Ss0.png" alt></fancybox></p><p><code>新增500Port</code></p><p><fancybox><img src="https://i.imgur.com/motwTKy.png" alt></fancybox></p><h2 id="Server-移除-iptables、安裝ufw"><a href="#Server-移除-iptables、安裝ufw" class="headerlink" title="[Server] 移除 iptables、安裝ufw"></a>[Server] 移除 iptables、安裝ufw</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt remove iptables</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ufw</span><br></pre></td></tr></table></figure><h2 id="Server-使用ufw允許22、500、4500、80、443port，並且打開防火牆"><a href="#Server-使用ufw允許22、500、4500、80、443port，並且打開防火牆" class="headerlink" title="[Server] 使用ufw允許22、500、4500、80、443port，並且打開防火牆"></a>[Server] 使用ufw允許22、500、4500、80、443port，並且打開防火牆</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 22</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 500</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 4500</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 80</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 443</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><h2 id="Server-順手安裝nginx，然後重新啟動機器-重要"><a href="#Server-順手安裝nginx，然後重新啟動機器-重要" class="headerlink" title="[Server] 順手安裝nginx，然後重新啟動機器(重要)"></a>[Server] 順手安裝nginx，然後重新啟動機器(重要)</h2><p><strong>若沒有先安裝nginx，機器內則沒有listen 80 的程式，在local端測試時會變成closed</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="Local-嘗試戳一下你的Server的80port"><a href="#Local-嘗試戳一下你的Server的80port" class="headerlink" title="[Local] 嘗試戳一下你的Server的80port"></a>[Local] 嘗試戳一下你的Server的80port</h2><p><strong>STATE應該要是open，若按照上述流程但仍然是closed表示沒有program listen 80 port</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -v -Pn -p 80 你的伺服器IP</span><br></pre></td></tr></table></figure><h2 id="Server-檢查ufw是不是沒被關掉，沒被關掉就是成功了"><a href="#Server-檢查ufw是不是沒被關掉，沒被關掉就是成功了" class="headerlink" title="[Server]  檢查ufw是不是沒被關掉，沒被關掉就是成功了"></a>[Server]  檢查ufw是不是沒被關掉，沒被關掉就是成功了</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw status numbered</span><br></pre></td></tr></table></figure><h2 id="Server-安裝Docker"><a href="#Server-安裝Docker" class="headerlink" title="[Server] 安裝Docker"></a>[Server] 安裝Docker</h2><p><code>更新一下</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><p><code>安裝</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install docker.io</span><br></pre></td></tr></table></figure><p><code>啟動</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="Server-建立vpn設定檔案"><a href="#Server-建立vpn設定檔案" class="headerlink" title="[Server] 建立vpn設定檔案"></a>[Server] 建立vpn設定檔案</h2><p><strong>先複習一下vi</strong></p><ul><li>鍵入 i 進入編輯模式</li><li>esc退出編輯模式</li><li>:wq儲存該次編輯 (w前面有一個:)</li><li>:q!取消該次編輯</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/strongswan.conf</span><br></pre></td></tr></table></figure><ul><li>把下面的內容貼到 strongswan.conf</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">charon &#123;</span><br><span class="line">  load_modular = yes</span><br><span class="line">  plugins &#123;</span><br><span class="line">    include strongswan.d/charon/*.conf</span><br><span class="line">    attr &#123;</span><br><span class="line">    dns = 1.1.1.2, 8.8.8.8</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">include strongswan.d/*.conf</span><br></pre></td></tr></table></figure><h2 id="Server-利用Docker跑一個-vpn-Service"><a href="#Server-利用Docker跑一個-vpn-Service" class="headerlink" title="[Server] 利用Docker跑一個 vpn Service"></a>[Server] 利用Docker跑一個 vpn Service</h2><ul><li>查詢本機IP，方便複製</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl ifconfig.me</span><br></pre></td></tr></table></figure><ul><li>查詢本機hostname，一樣複製用</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><ul><li>替換下面的HOST、HOSTNAME欄位並且跑起來</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">cap</span>-add=NET_ADMIN -d --name vpn-server --restart=always \</span><br><span class="line">-p 500:500/udp -p 4500:4500/udp \</span><br><span class="line">-v ~/strongswan.conf:/etc/strongswan.conf \</span><br><span class="line">-e <span class="string">"HOST=127.0.0.1"</span> -e <span class="string">"HOSTNAME=name"</span> \</span><br><span class="line">billimek/ikev2-vpn-server</span><br></pre></td></tr></table></figure><h2 id="Server-最後一步，製作MacOS、iPhone可直接使用的描述檔案"><a href="#Server-最後一步，製作MacOS、iPhone可直接使用的描述檔案" class="headerlink" title="[Server] 最後一步，製作MacOS、iPhone可直接使用的描述檔案"></a>[Server] 最後一步，製作MacOS、iPhone可直接使用的描述檔案</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it vpn-server generate-mobileconfig &gt; ikev2-vpn.mobileconfig</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><a href="https://ios.league2eb.me/posts/e02a3e3e/">很簡單，看了就會</a></p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申請每月10T流量的免費伺服器</title>
      <link href="/posts/af9bcccd/"/>
      <url>/posts/af9bcccd/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>學習開發初期</strong>使用了老師推薦的AWS EC2<br>對於當時我的來說<strong>一年免費</strong>是一件見非常棒的事情<br>只不過對於一年就得申請一個新帳號搬一次家來說，很不方便<br>如果真的很窮，又蕭貪<br>你可以好好看這整篇教學，我盡量的不要有遺漏任何的細節<br>所以高手們若看到此篇也請不要雞雞歪歪在那邊說 <strong>「阿這麼簡單也要講」</strong></p><p><strong>不論對象的無私奉獻將會讓你感到富有</strong></p><h2 id="甲骨文帳號申請"><a href="#甲骨文帳號申請" class="headerlink" title="甲骨文帳號申請"></a>甲骨文帳號申請</h2><p><strong>甲骨文已經開放該免費伺服器有段時間</strong><br>若您已經有帳號，可以直接前往下一段</p><p><a href="https://tinyurl.com/ybrwvfgp" target="_blank" rel="noopener">Oracle Cloud 官方網站</a><br>若失效請 <a href="https://www.google.com/search?client=safari&rls=en&ei=ZsenXqrwJ4XqmAWxhzM&q=oraclecloud&oq=oraclecloud&gs_lcp=CgZwc3ktYWIQDFAAWABgsBdoAHAAeACAAQCIAQCSAQCYAQCqAQdnd3Mtd2l6&sclient=psy-ab&ved=0ahUKEwiqu_jSuYrpAhUFNaYKHbHDDAAQ4dUDCAs" target="_blank" rel="noopener">點這裡</a></p><h3 id="點擊開始免費試用"><a href="#點擊開始免費試用" class="headerlink" title="點擊開始免費試用"></a>點擊開始免費試用</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/oafRWpSPDmgY3b1.png" alt></fancybox></p><h3 id="選擇區域"><a href="#選擇區域" class="headerlink" title="選擇區域"></a>選擇區域</h3><pre><code>- 這裡不用特別注意是選擇哪個區域，我的話選擇台灣，選擇完畢後點擊Next</code></pre><p><fancybox><img src="https://i.loli.net/2020/04/28/hR9c8oxWuqmENij.png" alt></fancybox></p><ul><li>帳號預設為個人，我沒有特別選擇</li><li>帳號名稱就取個自己的好記的就行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意，HomeRegion要選擇後面有免費區域的，例如韓國</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">這邊的選擇非常重要，手別抖</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://i.loli.net/2020/04/28/KZOsfiXN73JD4TG.png" alt></fancybox><br><fancybox><img src="https://i.loli.net/2020/04/28/RbaJZtpzi15qx4w.png" alt></fancybox></p><h3 id="填寫帳號資訊"><a href="#填寫帳號資訊" class="headerlink" title="填寫帳號資訊"></a>填寫帳號資訊</h3><pre><code>- 唯一要注意的地方是手機號碼，一定要可以接簡訊驗證- 但是，甲骨文業務也可能會時不時打給你推銷？(聽某前輩說的)</code></pre><p><fancybox><img src="https://i.loli.net/2020/04/28/pt1UkZncrgqJ2eE.png" alt></fancybox></p><h3 id="輸入驗證號碼"><a href="#輸入驗證號碼" class="headerlink" title="輸入驗證號碼"></a>輸入驗證號碼</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/cMz2KPH6mpad5yf.png" alt></fancybox></p><h3 id="加入信用卡，作為驗證使用"><a href="#加入信用卡，作為驗證使用" class="headerlink" title="加入信用卡，作為驗證使用"></a>加入信用卡，作為驗證使用</h3><pre><code>- 會扣個零錢來當做驗證使用- 除非你升級帳戶等級，不然不用擔心收費問題</code></pre><p><fancybox><img src="https://i.loli.net/2020/04/28/EGoMrB5h2LbOmny.png" alt></fancybox></p><h3 id="點擊完成註冊"><a href="#點擊完成註冊" class="headerlink" title="點擊完成註冊"></a>點擊完成註冊</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/alypc1ebgXi6Mn9.png" alt></fancybox></p><h6 id="以上就是整個註冊帳號的過程，還算簡單"><a href="#以上就是整個註冊帳號的過程，還算簡單" class="headerlink" title="以上就是整個註冊帳號的過程，還算簡單"></a>以上就是整個註冊帳號的過程，還算簡單</h6><h2 id="啟動一台虛擬機器"><a href="#啟動一台虛擬機器" class="headerlink" title="啟動一台虛擬機器"></a>啟動一台虛擬機器</h2><h3 id="點擊左上角漢堡按鈕來新增一台機器"><a href="#點擊左上角漢堡按鈕來新增一台機器" class="headerlink" title="點擊左上角漢堡按鈕來新增一台機器"></a>點擊左上角漢堡按鈕來新增一台機器</h3><pre><code>- 運算 -&gt; 執行處理</code></pre><p><fancybox><img src="https://i.loli.net/2020/04/28/PzxeKYZRTQB4bfd.png" alt></fancybox></p><h3 id="點擊執行處理按鈕"><a href="#點擊執行處理按鈕" class="headerlink" title="點擊執行處理按鈕"></a>點擊執行處理按鈕</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/UAYp9ezOcEBNiVK.png" alt></fancybox></p><h3 id="變更映像檔，並選擇Ubuntu-20-04"><a href="#變更映像檔，並選擇Ubuntu-20-04" class="headerlink" title="變更映像檔，並選擇Ubuntu 20.04"></a>變更映像檔，並選擇Ubuntu 20.04</h3><p><strong>這個步驟不一定要使用這裡推薦的Ubuntu</strong><br><strong>只要是免費都可以</strong><br><strong>如果錢很多，送我</strong></p><p><fancybox><img src="https://i.loli.net/2020/04/28/voAWmEzOKUd21D5.png" alt></fancybox><br><fancybox><img src="https://i.loli.net/2020/04/28/tBARv3UiLNqY1wX.png" alt></fancybox></p><h3 id="貼上Mac電腦的鑰匙"><a href="#貼上Mac電腦的鑰匙" class="headerlink" title="貼上Mac電腦的鑰匙"></a>貼上Mac電腦的鑰匙</h3><p><a href="https://tinyurl.com/y6uxj6n9" target="_blank" rel="noopener">鑰匙製作</a></p><p><fancybox><img src="https://i.loli.net/2020/04/28/9DSbupkc4Jdhvxm.png" alt></fancybox></p><h3 id="往下捲動頁面並點擊建立"><a href="#往下捲動頁面並點擊建立" class="headerlink" title="往下捲動頁面並點擊建立"></a>往下捲動頁面並點擊建立</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">會發現根本無法建立，因為免費限量的</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://i.loli.net/2020/04/28/icSJBVbav5PnQ9O.png" alt></fancybox></p><h3 id="在這個建立機器的頁面點擊右鍵並選擇「檢查」"><a href="#在這個建立機器的頁面點擊右鍵並選擇「檢查」" class="headerlink" title="在這個建立機器的頁面點擊右鍵並選擇「檢查」"></a>在這個建立機器的頁面點擊右鍵並選擇「檢查」</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/ZgYwrvQNCXVakM9.png" alt></fancybox></p><h3 id="選擇Network標籤並再次點擊「建立」"><a href="#選擇Network標籤並再次點擊「建立」" class="headerlink" title="選擇Network標籤並再次點擊「建立」"></a>選擇Network標籤並再次點擊「建立」</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/9lMrtOPWwZQbSmy.png" alt></fancybox></p><h3 id="搜尋框輸入instances並點擊左側項目，點擊後在將右側欄位選到「Headers」"><a href="#搜尋框輸入instances並點擊左側項目，點擊後在將右側欄位選到「Headers」" class="headerlink" title="搜尋框輸入instances並點擊左側項目，點擊後在將右側欄位選到「Headers」"></a>搜尋框輸入instances並點擊左側項目，點擊後在將右側欄位選到「Headers」</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/bf2iNjlzKUDdyCI.png" alt></fancybox></p><h3 id="找到「Request-Payload」"><a href="#找到「Request-Payload」" class="headerlink" title="找到「Request Payload」"></a>找到「Request Payload」</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/FWfqCujxaeo7BYT.png" alt></fancybox></p><h3 id="用記事本、SublimeText把我列出來的欄位暫時記錄，等等會用"><a href="#用記事本、SublimeText把我列出來的欄位暫時記錄，等等會用" class="headerlink" title="用記事本、SublimeText把我列出來的欄位暫時記錄，等等會用"></a>用記事本、SublimeText把我列出來的欄位暫時記錄，等等會用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">availabilityDomain = dAKB:AP-SEOUL-1-AD-1</span><br><span class="line">compartmentId = ocid1.tenancy.oc1.. y28gNGS9qry8cybaF9dGXGWcaThRurPm</span><br><span class="line">subnetId = ocid1.subnet.oc1.ap-seoul-1. V49dCAUY6gkSB9SXAx4tTTBkZ8G8hv3Y</span><br><span class="line">shape = VM.Standard.E2.1.Micro</span><br><span class="line">ssh_authorized_keys = ...</span><br><span class="line">imageId = ocid1.image.oc1.ap-seoul-1. Hv8NtHAXvSyXhqWheSmAV3EpMCUGvWD4</span><br></pre></td></tr></table></figure><h3 id="取得-User-OCID，一樣記錄下來等等會用到"><a href="#取得-User-OCID，一樣記錄下來等等會用到" class="headerlink" title="取得 User OCID，一樣記錄下來等等會用到"></a>取得 User OCID，一樣記錄下來等等會用到</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/8QwucpYA9Wtl2k6.png" alt></fancybox></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User OCID = ocid1.user.oc1.. r33UG24QdSRaQ8B3guWxVCNYKrsCcUQf</span><br></pre></td></tr></table></figure><h3 id="獲取Tenancy-OCID-，一樣記錄下來等等會用到"><a href="#獲取Tenancy-OCID-，一樣記錄下來等等會用到" class="headerlink" title="獲取Tenancy OCID ，一樣記錄下來等等會用到"></a>獲取Tenancy OCID ，一樣記錄下來等等會用到</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/XkExyolrNqQnAsh.png" alt></fancybox></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tenancy_OCID = ocid1.tenancy.oc1.. fYZrqb7gqyYeMKNBfmrVSfdXsXERNrYB</span><br></pre></td></tr></table></figure><h3 id="打開終端機，並安裝oci命令管理工具"><a href="#打開終端機，並安裝oci命令管理工具" class="headerlink" title="打開終端機，並安裝oci命令管理工具"></a>打開終端機，並安裝oci命令管理工具</h3><ul><li>直接貼在終端機後按下Enter，中間會詢問你很多問題，都直接Enter就可</li><li>這邊可能要有sudo權限</li><li>會有幾個問題問你Y/n ，輸入Y後按下Enter</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c <span class="string">"<span class="variable">$(curl –L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><h3 id="在終端機裡頭確認是否安裝成功"><a href="#在終端機裡頭確認是否安裝成功" class="headerlink" title="在終端機裡頭確認是否安裝成功"></a>在終端機裡頭確認是否安裝成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/bin/oci -v</span><br><span class="line">2.10.0</span><br></pre></td></tr></table></figure><h3 id="在終端機裡頭設定帳號訊息、請求鑰匙"><a href="#在終端機裡頭設定帳號訊息、請求鑰匙" class="headerlink" title="在終端機裡頭設定帳號訊息、請求鑰匙"></a>在終端機裡頭設定帳號訊息、請求鑰匙</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/bin/oci setup config</span><br></pre></td></tr></table></figure><p>第一個問題直接按下Enter</p><p><code>Enter a location for your config [/Users/xxx/.oci/config]:</code></p><p>第二個問題請把剛剛記錄下來的User OCID給複製貼上後按下Enter</p><p><code>Enter a user OCID:</code></p><p>第三個問題請把剛剛記錄下來的Tenancy OCID給複製貼上後按下Enter</p><p><code>Enter a user OCID:</code></p><p>第四個問題請到<a href="https://docs.cloud.oracle.com/ja-jp/iaas/Content/General/Concepts/regions.htm" target="_blank" rel="noopener">這裡</a>查詢後輸入<br>舉例韓國：ap-seoul-1</p><p><code>Enter a region</code></p><p>後續的問題請直接點擊Enter或者輸入Y即可</p><p><strong>其中會有一個問題是請您設定伺服器證書的密碼，可以不要設定</strong></p><h3 id="設定完成畫面"><a href="#設定完成畫面" class="headerlink" title="設定完成畫面"></a>設定完成畫面</h3><p><fancybox><img src="https://i.loli.net/2020/04/28/YmtKbAMlwWVko16.png" alt></fancybox></p><h3 id="把鑰匙上傳到個人設定頁面中"><a href="#把鑰匙上傳到個人設定頁面中" class="headerlink" title="把鑰匙上傳到個人設定頁面中"></a>把鑰匙上傳到個人設定頁面中</h3><p><strong>鑰匙路徑，再說一次，這裡的xxx是你的使用者名稱1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.oci/oci_api_key_public.pem</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://i.loli.net/2020/04/28/2FoCN3cZ9uMbrIq.png" alt></fancybox></p><h3 id="終端機內查看金鑰是否可以成功Work"><a href="#終端機內查看金鑰是否可以成功Work" class="headerlink" title="終端機內查看金鑰是否可以成功Work"></a>終端機內查看金鑰是否可以成功Work</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/bin/oci iam availability-domain list</span><br></pre></td></tr></table></figure><h3 id="在終端機先測試一次看看是否戳到"><a href="#在終端機先測試一次看看是否戳到" class="headerlink" title="在終端機先測試一次看看是否戳到"></a>在終端機先測試一次看看是否戳到</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/bin/oci compute instance launch --availability-domain &lt;your_ availabilityDomain&gt; --image-id &lt;your_imageid&gt; --subnet-id &lt;your_subnetid&gt;  --shape VM.Standard.E2.1.Micro --assign-public-ip true --metadata &apos;&#123;&quot;ssh_authorized_keys&quot;: &quot;ssh-rsa your_ssh_key&quot;&#125;&apos; --compartment-id &lt;your_compartmentid&gt;</span><br></pre></td></tr></table></figure><p>下面是Response，若看到這段就表示戳api這個行為是成功的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ServiceError:</span><br><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: &quot;InternalError&quot;,</span><br><span class="line">    &quot;message&quot;: &quot;Out of host capacity.&quot;,</span><br><span class="line">    &quot;opc-request-id&quot;: &quot;xxxx----&quot;,</span><br><span class="line">    &quot;status&quot;: 500</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在終端機內間隔30秒戳一次api來搶伺服器空間"><a href="#在終端機內間隔30秒戳一次api來搶伺服器空間" class="headerlink" title="在終端機內間隔30秒戳一次api來搶伺服器空間"></a>在終端機內間隔30秒戳一次api來搶伺服器空間</h3><p><strong>這裡面包含了很多剛剛暫時記下來的Request Payload</strong><br><strong>請務必仔細更換</strong><br><strong>建議先把下面的指令貼到記事本，一個一個修改</strong><br><strong>注意&lt;&gt;不要帶入，這裡只是提示要在這裡替換</strong><br><strong>除非你一直盯著終端機看，不然大部分看到的時間都是回應500</strong><br><strong>你得定期回去甲骨文的Dashboard查看</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">while true; do ~/bin/oci compute instance launch --availability-domain &lt;your_ availabilityDomain&gt; --image-id &lt;your_imageid&gt; --subnet-id &lt;your_subnetid&gt;  --shape VM.Standard.E2.1.Micro --assign-public-ip true --metadata &apos;&#123;&quot;ssh_authorized_keys&quot;: &quot;ssh-rsa your_ssh_key&quot;&#125;&apos; --compartment-id &lt;your_compartmentid&gt; ;date; sleep 30; done</span><br></pre></td></tr></table></figure><h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p><strong>基本上</strong>GUI操作來開啟虛擬機的方式，幾乎可以說開不了<br>因為早就被搶光了，所以這裡使用的方法就是利用API的方式「建立虛擬機」！</p><h2 id="扣錢"><a href="#扣錢" class="headerlink" title="扣錢"></a>扣錢</h2><p>基本上註冊的時候甲骨文有送400SGD<br>請定期回來看一下是否有減少，若有<br>表示設定錯誤！</p><h2 id="下一步，設定vpn"><a href="#下一步，設定vpn" class="headerlink" title="下一步，設定vpn"></a>下一步，設定vpn</h2><p><a href="https://ios.league2eb.me/posts/5f22c5f9/">這個步驟難度稍高，請詳細閱讀</a></p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac上VPN描述檔案安裝方法</title>
      <link href="/posts/e02a3e3e/"/>
      <url>/posts/e02a3e3e/</url>
      
        <content type="html"><![CDATA[<h2 id="有時候會需要把當前的網路跳離台灣來做點事情"><a href="#有時候會需要把當前的網路跳離台灣來做點事情" class="headerlink" title="有時候會需要把當前的網路跳離台灣來做點事情"></a>有時候會需要把當前的網路跳離台灣來做點事情</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">做點壞事</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">看台灣沒有的影片</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">沒有，我就是不想要我的當前網路環境在台灣</span><br></pre></td></tr></table></figure><p>以上都可以是理由</p><h2 id="開一台10T-月-流量的伺服器，並且不花半毛錢"><a href="#開一台10T-月-流量的伺服器，並且不花半毛錢" class="headerlink" title="開一台10T/月 流量的伺服器，並且不花半毛錢"></a>開一台10T/月 流量的伺服器，並且不花半毛錢</h2><p><a href="https://ios.league2eb.me/posts/af9bcccd/">帳號申請，難度不算高</a></p><h2 id="製作VPN的描述檔"><a href="#製作VPN的描述檔" class="headerlink" title="製作VPN的描述檔"></a>製作VPN的描述檔</h2><p><a href="https://ios.league2eb.me/posts/5f22c5f9/">此篇有一定技術門檻與理解能力，請謹慎閱讀</a></p><h2 id="跳過前兩步驟跟我拿取描述檔，親朋好友適用"><a href="#跳過前兩步驟跟我拿取描述檔，親朋好友適用" class="headerlink" title="跳過前兩步驟跟我拿取描述檔，親朋好友適用"></a>跳過前兩步驟跟我拿取描述檔，親朋好友適用</h2><p>有幾個管道</p><ol><li>臉書</li><li>Line</li><li>面交</li></ol><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><ul><li>點擊兩下打開描述檔</li></ul><p><fancybox><img src="https://i.imgur.com/Yyz9l6O.png" alt></fancybox></p><ul><li>詢問是否安裝，點擊繼續</li></ul><p><fancybox><img src="https://i.imgur.com/pvBfMQt.png" alt></fancybox></p><ul><li>會有個警告，跟你說這描述檔案沒有說誰製作的，是不是真的要安裝，點擊繼續</li></ul><p><fancybox><img src="https://i.imgur.com/hrpula5.png" alt></fancybox></p><ul><li>使用者名稱、密碼全部不用輸入直接點擊右下角安裝</li></ul><p><strong>點擊安裝後會詢問電腦密碼，輸入</strong><br><strong>安裝完畢後會自動連上VPN</strong></p><p><fancybox><img src="https://i.imgur.com/cZnEIZP.png" alt></fancybox></p><ul><li>打開設定，並點擊「網路」</li></ul><p><fancybox><img src="https://i.imgur.com/C0rInGy.png" alt></fancybox></p><ul><li>選擇VPN並且把「按要求連線給取消選擇」</li></ul><p><fancybox><img src="https://i.imgur.com/3egWlni.png" alt></fancybox></p><ul><li>點擊右下角套用後，再點擊連線</li><li>這邊建議勾選「在選單列中顯示VPN狀態」，這樣可以快速關閉、打開</li></ul><p><fancybox><img src="https://i.imgur.com/8JGzcLP.png" alt></fancybox></p><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TweakDylib與ipa合併流程</title>
      <link href="/posts/337c9b10/"/>
      <url>/posts/337c9b10/</url>
      
        <content type="html"><![CDATA[<p><strong>本篇僅供學術使用</strong></p><p><strong>閱讀對象：不想要手機越獄，但又想要安裝帶有Tweak功能的應用</strong></p><h2 id="具備條件"><a href="#具備條件" class="headerlink" title="具備條件"></a>具備條件</h2><ul><li>一台Mac(PC我不熟🌚)</li><li>一台iOS設備，並且已經越獄</li><li>已經安裝<a href="https://apps.apple.com/app/xcode/id497799835?mt=12" target="_blank" rel="noopener">Xcode</a>，因為會使用到<code>otool</code>、<code>install_name_tool</code>指令</li><li>看過<a href="https://ios.league2eb.me/posts/26217a84/">這篇</a>文章，知道怎麼ssh連線到你的越獄設備</li><li>下載<a href="https://tinyurl.com/yx7jpqe2" target="_blank" rel="noopener">libsubstrate.dylib</a>先放在桌面</li><li>下載<a href="https://tinyurl.com/uvclcc8" target="_blank" rel="noopener">optool</a>，放到<code>/usr/local/bin</code></li></ul><p><strong>針對optool在終端機下指令，權限不夠無法執行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x optool</span><br></pre></td></tr></table></figure><h2 id="找一個別人寫好的deb，這邊用Facebook的Messenger作為例子"><a href="#找一個別人寫好的deb，這邊用Facebook的Messenger作為例子" class="headerlink" title="找一個別人寫好的deb，這邊用Facebook的Messenger作為例子"></a>找一個別人寫好的deb，這邊用Facebook的Messenger作為例子</h2><p>沒有使用之前，有一則廣告</p><p><fancybox><img src="https://i.loli.net/2020/04/09/SUaIBXlqrbRmno2.png" alt></fancybox></p><p>Tweak生效後，廣告消失了</p><p><fancybox><img src="https://i.loli.net/2020/04/09/lx6awbVet8GjJBW.png" alt></fancybox></p><h2 id="Cydia安裝"><a href="#Cydia安裝" class="headerlink" title="Cydia安裝"></a>Cydia安裝</h2><p><fancybox><img src="https://i.loli.net/2020/04/09/IEKw7SDPXdLxe6M.png" alt></fancybox></p><h2 id="攔截deb"><a href="#攔截deb" class="headerlink" title="攔截deb"></a>攔截deb</h2><p><strong>點擊「重新啟動SpringBoard」後，deb就會被刪除</strong></p><p><strong>所以請停止在這個畫面，然後操作攔截流程</strong></p><p><fancybox><img src="https://i.loli.net/2020/04/09/vEZl1jORzMsDUiA.png" alt></fancybox></p><ol><li>首先使用終端連線到越獄的設備</li><li>檢查該deb安裝檔案是否存在</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /private/var/mobile/Library/Caches/com.saurik.Cydia/archives/</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://i.loli.net/2020/04/09/TnQ9qfsvpOgW8BL.png" alt></fancybox></p><p><strong>由此，可以確認我們要的檔案存在於</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/private/var/mobile/Library/Caches/com.saurik.Cydia/archives/com.haoict.messengernoads_0.0.2_iphoneos-arm.deb</span><br></pre></td></tr></table></figure><h2 id="利用SCP把檔案傳送到Mac裡"><a href="#利用SCP把檔案傳送到Mac裡" class="headerlink" title="利用SCP把檔案傳送到Mac裡"></a>利用SCP把檔案傳送到Mac裡</h2><p><strong>建議先把終端機的路徑移動到桌面</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P2222 root@127.0.0.1:/private/var/mobile/Library/Caches/com.saurik.Cydia/archives/com.haoict.messengernoads_0.0.2_iphoneos-arm.deb ./</span><br></pre></td></tr></table></figure><h2 id="把deb裡面的dylib拆出來"><a href="#把deb裡面的dylib拆出來" class="headerlink" title="把deb裡面的dylib拆出來"></a>把deb裡面的dylib拆出來</h2><p><strong>使用betterzip把dylib拿出來</strong></p><ul><li>安裝betterzip</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install betterzip</span><br></pre></td></tr></table></figure><ul><li><p>Extract data<br><fancybox><img src="https://i.loli.net/2020/04/09/qO45Pg21JIWBUy8.png" alt></fancybox></p></li><li><p>持續解壓縮data並獲得Library<br><fancybox><img src="https://i.loli.net/2020/04/09/fCRkSTPpt516He8.png" alt></fancybox></p></li><li><p>獲得dylib<br><fancybox><img src="https://i.loli.net/2020/04/09/DfK7QPl4xAnIqNJ.png" alt></fancybox></p></li></ul><h2 id="把Messenger砸殼"><a href="#把Messenger砸殼" class="headerlink" title="把Messenger砸殼"></a>把Messenger砸殼</h2><p><a href="https://ios.league2eb.me/posts/b6771505/">frida砸殼</a><br><a href="https://ios.league2eb.me/posts/e0179831/">Clutch砸殼</a></p><h2 id="桌面建立一個資料夾，裡面要有這些東西"><a href="#桌面建立一個資料夾，裡面要有這些東西" class="headerlink" title="桌面建立一個資料夾，裡面要有這些東西"></a>桌面建立一個資料夾，裡面要有這些東西</h2><p><fancybox><img src="https://i.loli.net/2020/04/09/fkW14xDg8nXmVC6.png" alt></fancybox></p><ol><li>砸殼的應用</li><li>libsubstrate.dylib</li><li>插件的dylib</li></ol><h2 id="解壓縮砸殼應用"><a href="#解壓縮砸殼應用" class="headerlink" title="解壓縮砸殼應用"></a>解壓縮砸殼應用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip Messenger.ipa</span><br></pre></td></tr></table></figure><h2 id="把libsubstrate-dylib、messengernoads-dylib丟進去Payload-Messenger"><a href="#把libsubstrate-dylib、messengernoads-dylib丟進去Payload-Messenger" class="headerlink" title="把libsubstrate.dylib、messengernoads.dylib丟進去Payload/Messenger"></a>把libsubstrate.dylib、messengernoads.dylib丟進去Payload/Messenger</h2><p><strong>等等會用到</strong></p><h2 id="進入Payload-Messenger修改info-plist"><a href="#進入Payload-Messenger修改info-plist" class="headerlink" title="進入Payload/Messenger修改info.plist"></a>進入Payload/Messenger修改info.plist</h2><ul><li>把下圖內容刪除<br><fancybox><img src="https://i.loli.net/2020/04/09/Ju28bs6Slcw1TLi.png" alt></fancybox></li></ul><p><strong>這些是支援的設備，若要支援所有的設備這個KEY必須刪除</strong></p><h2 id="打開終端機並移動到Payload-Messenger底下"><a href="#打開終端機並移動到Payload-Messenger底下" class="headerlink" title="打開終端機並移動到Payload/Messenger底下"></a>打開終端機並移動到Payload/Messenger底下</h2><ul><li>查看messengernoads.dylib</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">otool -L messengernoads.dylib</span><br></pre></td></tr></table></figure><p><strong>會看到越獄手機才會用到的CydiaSubstrate</strong><br><fancybox><img src="https://i.loli.net/2020/04/09/2JmDqXQ5IlTrzvY.png" alt></fancybox></p><ul><li>利用install_name_tool替換CydiaSubstrate -&gt; libsubstrate.dylib</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install_name_tool -change /Library/Frameworks/CydiaSubstrate.framework/CydiaSubstrate @loader_path/libsubstrate.dylib messengernoads.dylib</span><br></pre></td></tr></table></figure><ul><li>再次查看messengernoads.dylib</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">otool -L messengernoads.dylib</span><br></pre></td></tr></table></figure><p><strong>會發現原來的文件路徑改為絕對路徑表示成功</strong><br><fancybox><img src="https://i.loli.net/2020/04/09/HRNa5BIMpYCF3fb.png" alt></fancybox></p><h2 id="利用optool把dylib注入到目標的二進文件"><a href="#利用optool把dylib注入到目標的二進文件" class="headerlink" title="利用optool把dylib注入到目標的二進文件"></a>利用optool把dylib注入到目標的二進文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">optool install -c load -p <span class="string">"@executable_path/messengernoads.dylib"</span> -t ./Messenger</span><br></pre></td></tr></table></figure><p><strong>結果如下，表示成功</strong><br><fancybox><img src="https://i.loli.net/2020/04/09/t5yxw4ubGALjfWX.png" alt></fancybox></p><h2 id="重新包裝iPA檔案"><a href="#重新包裝iPA檔案" class="headerlink" title="重新包裝iPA檔案"></a>重新包裝iPA檔案</h2><ol><li>將Payload壓縮</li></ol><p><fancybox><img src="https://i.loli.net/2020/04/09/IxHbdJ8BznRwuGh.png" alt></fancybox></p><ol start="2"><li>更改壓縮檔案附檔名為xxx.ipa</li></ol><p><fancybox><img src="https://i.loli.net/2020/04/09/ty2PC43sKezf8Mq.png" alt></fancybox></p><h2 id="重簽名"><a href="#重簽名" class="headerlink" title="重簽名"></a>重簽名</h2><p><a href="https://lmgtfy.com/?q=ios+ipa+resign" target="_blank" rel="noopener">絕對學的會的方法連結</a></p>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Mac </tag>
            
            <tag> Jailbreak </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CoronaTracker</title>
      <link href="/posts/a505ca0f/"/>
      <url>/posts/a505ca0f/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2020/03/17/ujCGwgsmZT1OrEk.png" alt></p><h2 id="我覺得很猛，不分享不行！"><a href="#我覺得很猛，不分享不行！" class="headerlink" title="我覺得很猛，不分享不行！"></a>我覺得很猛，不分享不行！</h2><p><a href="https://github.com/MhdHejazi" target="_blank" rel="noopener">作者</a></p><h2 id="條件"><a href="#條件" class="headerlink" title="條件"></a>條件</h2><ul><li>一台蘋果電腦</li><li>macOS Catalina以上</li><li>brew cask</li></ul><h2 id="如果你也是RD，這是Repositories"><a href="#如果你也是RD，這是Repositories" class="headerlink" title="如果你也是RD，這是Repositories"></a>如果你也是RD，這是Repositories</h2><p><a href="https://github.com/MhdHejazi/CoronaTracker" target="_blank" rel="noopener">CoronaTracker</a></p><h2 id="如果你已經有-brew-cask"><a href="#如果你已經有-brew-cask" class="headerlink" title="如果你已經有 brew cask"></a>如果你已經有 brew cask</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install corona-tracker</span><br></pre></td></tr></table></figure><h2 id="如果沒有，但你又想安裝"><a href="#如果沒有，但你又想安裝" class="headerlink" title="如果沒有，但你又想安裝"></a>如果沒有，但你又想安裝</h2><p>打開終端機，他長這樣<br><img src="https://i.loli.net/2020/03/17/yn1Y3kOclJHpKQz.png" alt></p><p>輸入下面的指令</p><h2 id="安裝Brew"><a href="#安裝Brew" class="headerlink" title="安裝Brew"></a>安裝Brew</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><p><strong>過程中如果有請你輸入電腦密碼請注意輸入的時候看不到密碼</strong></p><h2 id="安裝Brew-cask"><a href="#安裝Brew-cask" class="headerlink" title="安裝Brew cask"></a>安裝Brew cask</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install  caskroom/cask/brew-cask</span><br></pre></td></tr></table></figure><h2 id="安裝CoronaTracker"><a href="#安裝CoronaTracker" class="headerlink" title="安裝CoronaTracker"></a>安裝CoronaTracker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install corona-tracker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>移除ipa簽名</title>
      <link href="/posts/34109c5c/"/>
      <url>/posts/34109c5c/</url>
      
        <content type="html"><![CDATA[<h2 id="為什麼？"><a href="#為什麼？" class="headerlink" title="為什麼？"></a>為什麼？</h2><p>因為企業簽名的應用下載後看了很賭爛想要移除</p><p><img src="https://i.loli.net/2020/02/13/6Ee9yLpQk4aKFvh.png" alt></p><h2 id="先把ipa弄成APP"><a href="#先把ipa弄成APP" class="headerlink" title="先把ipa弄成APP"></a>先把ipa弄成APP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip xxx.ipa</span><br></pre></td></tr></table></figure><h2 id="進入Payload中的xxx-app"><a href="#進入Payload中的xxx-app" class="headerlink" title="進入Payload中的xxx.app"></a>進入Payload中的xxx.app</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign --remove-signature xxx</span><br></pre></td></tr></table></figure><h2 id="移除xxx-app中所有Frameworks簽名"><a href="#移除xxx-app中所有Frameworks簽名" class="headerlink" title="移除xxx.app中所有Frameworks簽名"></a>移除xxx.app中所有Frameworks簽名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign --remove-signature Alamofire.framework</span><br></pre></td></tr></table></figure><h2 id="每一個都要"><a href="#每一個都要" class="headerlink" title="每一個都要"></a>每一個都要</h2><p><img src="https://i.loli.net/2020/02/13/6uTFwtJfModqR5W.png" alt></p><h2 id="壓縮Payload後把壓縮檔改副檔名…"><a href="#壓縮Payload後把壓縮檔改副檔名…" class="headerlink" title="壓縮Payload後把壓縮檔改副檔名…"></a>壓縮Payload後把壓縮檔改副檔名…</h2>]]></content>
      
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>獲取ipa中的Schemes</title>
      <link href="/posts/bc44b46b/"/>
      <url>/posts/bc44b46b/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>有跳轉其他應用需求時可能會需要查找該應用的Schemes來達到目標</p><h2 id="取得ipa"><a href="#取得ipa" class="headerlink" title="取得ipa"></a>取得ipa</h2><p><a href="https://ios.league2eb.me/posts/b6771505/">APP砸殼正確姿勢</a></p><h2 id="執行腳本"><a href="#執行腳本" class="headerlink" title="執行腳本"></a>執行腳本</h2><p>取得ipa後，利用下面的腳本來dump出所有的Schemes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">#!/bin/sh   </span></span><br><span class="line"></span><br><span class="line">RESET=`tput sgr0`</span><br><span class="line">RED=`tput setaf 1`</span><br><span class="line">GREEN=`tput setaf 2`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ! [ -e <span class="string">"<span class="variable">$1</span>"</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"⛔️️️️️️️️⛔️⛔️ <span class="variable">$&#123;RED&#125;</span><span class="variable">$1</span> does not exist!"</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;RESET&#125;</span>Unzipping..."</span></span><br><span class="line">    <span class="keyword">if</span> ! [ -e <span class="string">"<span class="variable">$1</span>.zip"</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        mv <span class="string">"<span class="variable">$1</span>"</span> <span class="string">"<span class="variable">$1</span>.zip"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    mkdir <span class="string">"extractSchemeURLTemp"</span></span><br><span class="line">    unzip <span class="string">"<span class="variable">$1</span>.zip"</span> -d <span class="string">"extractSchemeURLTemp"</span> &amp;&gt;/dev/null</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"✅ URL Schemes:"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;GREEN&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">    files=(extractSchemeURLTemp/Payload/*.app)</span><br><span class="line">    APP_PATH=<span class="variable">$&#123;files[0]&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"cat /plist/dict/key[text()='CFBundleURLTypes']/following-sibling::array/dict/array/string/text()"</span> | xmllint --shell <span class="variable">$&#123;APP_PATH&#125;</span>/Info.plist | sed <span class="string">'/^\/ &gt;/d'</span> | sed <span class="string">'s/&lt;[^&gt;]*.//g'</span></span><br><span class="line"></span><br><span class="line">    mv <span class="string">"<span class="variable">$1</span>.zip"</span> <span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">    rm -rf <span class="string">"extractSchemeURLTemp"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;GREEN&#125;</span>⚙️  Installed extractSchemeURL!"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -e scripts/extract-scheme-url.sh ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    cp scripts/extract-scheme-url.sh ~/.extract-scheme-url.sh  </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">if</span> [ -e extract-scheme-url.sh ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        cp extract-scheme-url.sh ~/.extract-scheme-url.sh</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -e ~/.bashrc ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    string=$(&lt;~/.bashrc)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ! [[ <span class="variable">$string</span> == *<span class="string">"alias extractSchemeURL=\"bash ~/.extract-scheme-url.sh\""</span>* ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Setting extractSchemeURL..."</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"alias extractSchemeURL=\"bash ~/.extract-scheme-url.sh\""</span> &gt;&gt; ~/.bashrc</span><br><span class="line">        cat ~/.bashrc</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Setting extractSchemeURL..."</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"alias extractSchemeURL=\"bash ~/.extract-scheme-url.sh\""</span> &gt; ~/.bashrc</span><br><span class="line">    cat ~/.bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h2 id="出處"><a href="#出處" class="headerlink" title="出處"></a>出處</h2><p><a href="https://tinyurl.com/v56qesw" target="_blank" rel="noopener">該腳本來源</a></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Jailbreak </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Resize圖片大小</title>
      <link href="/posts/2da99f33/"/>
      <url>/posts/2da99f33/</url>
      
        <content type="html"><![CDATA[<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install imagemagick</span><br></pre></td></tr></table></figure><h2 id="不會指令？"><a href="#不會指令？" class="headerlink" title="不會指令？"></a>不會指令？</h2><p><a href="https://imagemagick.org/script/download.php" target="_blank" rel="noopener">官網下載</a></p><h2 id="終端指令"><a href="#終端指令" class="headerlink" title="終端指令"></a>終端指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">magick mogrify -format jpg -resize 50% ./demo.jpg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>修改image的Hash</title>
      <link href="/posts/662e9349/"/>
      <url>/posts/662e9349/</url>
      
        <content type="html"><![CDATA[<h3 id="發生錯誤產生條件"><a href="#發生錯誤產生條件" class="headerlink" title="發生錯誤產生條件"></a>發生錯誤產生條件</h3><ol><li>專案內有多的Target (不確定是不是因為這樣，但基本上不會需要多個Target)</li><li>共用到了相同的一些項目圖片也整個複製過去的混亂情況</li></ol><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>圖片檔案名稱不同，但使用fastlane打包時提示CompileAssetCatalog的錯誤問題<br>基本上從瞎掰的角度來說，Xcode應該是認知到「欸～你的專案底下有兩張一樣的圖片噢！」<br>但明明已經修改了檔案名稱為什麼還會被這樣認為呢？<br>因為Xcode認的是圖片背後的hash!<br>上述所說的都是我個人亂猜</p><h3 id="驗證"><a href="#驗證" class="headerlink" title="驗證"></a>驗證</h3><p>建立一個資料夾並且放一張圖片<br><fancybox><img src="https://i.loli.net/2020/01/16/kJwQOXdp9CltGSc.png" alt></fancybox></p><ul><li>使用指令查看該圖片的hash</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shasum 1.jpeg</span><br></pre></td></tr></table></figure><p>結果如圖<br><fancybox><img src="https://i.loli.net/2020/01/16/VcYsWoBbxIFHz8l.png" alt></fancybox></p><p>複製該張圖片到同一個資料夾，系統會替你加上「拷貝」兩個字</p><p><fancybox><img src="https://i.loli.net/2020/01/16/bWg7kZq4xjrME3N.png" alt></fancybox></p><ul><li>使用指令查看該拷貝圖片的hash</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shasum 1拷貝.jpeg</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://i.loli.net/2020/01/16/MuZrcyED6tvKFAY.png" alt></fancybox></p><p><strong>就算檔案名稱不同，兩個hash是一樣的，Xcode就會認為是同一張圖片？</strong></p><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><ul><li>安裝ImageMagick</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install imagemagick</span><br></pre></td></tr></table></figure><ul><li>修改hash(但我覺得這個指令背後做的事情是有壓縮的，但不影響)</li><li>修改拷貝圖片的hash</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -iname 1拷貝.jpeg -<span class="built_in">exec</span> <span class="built_in">echo</span> &#123;&#125; \; -<span class="built_in">exec</span> convert &#123;&#125; &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>再次驗證可以清楚的看到兩張圖片的hash確實已經不一樣了<br><fancybox><img src="https://i.loli.net/2020/01/16/xRh3t5CaVcP9b1f.png" alt></fancybox></p><ul><li>如果想要一次性修改當前目錄下的所有圖片</li><li>注意指令內的附檔名 ex *.png or *.jpeg</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -iname <span class="string">"*.png"</span> -<span class="built_in">exec</span> <span class="built_in">echo</span> &#123;&#125; \; -<span class="built_in">exec</span> convert &#123;&#125; &#123;&#125; \;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Xcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xcode編譯速度優化</title>
      <link href="/posts/ab0abac3/"/>
      <url>/posts/ab0abac3/</url>
      
        <content type="html"><![CDATA[<h1 id="Xcode有幾個隱藏的開關選項"><a href="#Xcode有幾個隱藏的開關選項" class="headerlink" title="Xcode有幾個隱藏的開關選項"></a>Xcode有幾個隱藏的開關選項</h1><h3 id="編譯結束後告訴你這次跑了多少時間"><a href="#編譯結束後告訴你這次跑了多少時間" class="headerlink" title="編譯結束後告訴你這次跑了多少時間"></a>編譯結束後告訴你這次跑了多少時間</h3><ul><li>打開終端機並輸入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dt.Xcode ShowBuildOperationDuration -bool YES</span><br></pre></td></tr></table></figure><p>結果會像是這樣子<br><img src="https://i.loli.net/2020/01/08/QHewTrzPNlmCI2Y.png" alt></p><h3 id="查看當前CPU數量"><a href="#查看當前CPU數量" class="headerlink" title="查看當前CPU數量"></a>查看當前CPU數量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -n hw.ncpu</span><br></pre></td></tr></table></figure><h3 id="催下去"><a href="#催下去" class="headerlink" title="催下去"></a>催下去</h3><p>把Xcode編譯時使用的核心數量拉到最大</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dt.Xcode IDEBuildOperationMaxNumberOfConcurrentCompileTasks `sysctl -n hw.ncpu`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xcode </tag>
            
            <tag> CPU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powerlevel9k换powerlevel10k</title>
      <link href="/posts/b85206ec/"/>
      <url>/posts/b85206ec/</url>
      
        <content type="html"><![CDATA[<h1 id="據前輩說：powerlevel10k的速度比powerlevel9k快？"><a href="#據前輩說：powerlevel10k的速度比powerlevel9k快？" class="headerlink" title="據前輩說：powerlevel10k的速度比powerlevel9k快？"></a>據前輩說：powerlevel10k的速度比powerlevel9k快？</h1><p><del>就算沒有比較快，但就是要用最新的東西，因為這就是潮</del></p><h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><p>打開iTerm，移動一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br></pre></td></tr></table></figure><p>安裝</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'source ~/powerlevel10k/powerlevel10k.zsh-theme'</span> &gt;&gt;! ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="編輯-zshrc"><a href="#編輯-zshrc" class="headerlink" title="編輯.zshrc"></a>編輯.zshrc</h3><ul><li>這個檔案會在 <code>~/</code>底下<br>修改ZSH_THEME=”powerlevel9k/powerlevel9k”<br>↓↓↓↓↓↓↓↓↓↓↓↓↓↓</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=<span class="string">"powerlevel10k/powerlevel10k"</span></span><br></pre></td></tr></table></figure><p><strong>儲存後關閉</strong></p><h3 id="檢查是否正確安裝"><a href="#檢查是否正確安裝" class="headerlink" title="檢查是否正確安裝"></a>檢查是否正確安裝</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls ~/.oh-my-zsh/custom/themes</span><br></pre></td></tr></table></figure><p>如果安裝成功會出現powerlevel10k<br><img src="https://i.loli.net/2020/01/06/8u43jdJGxOfAwlR.png" alt="screely-1578294038974.png"></p><p>如果沒有…那就再下一次指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="variable">$ZSH_CUSTOM</span>/themes/powerlevel10k</span><br></pre></td></tr></table></figure><h3 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p10k configure</span><br></pre></td></tr></table></figure><p>按照畫面上的提示選擇自己想要的就可以了</p><h3 id="結束"><a href="#結束" class="headerlink" title="結束"></a>結束</h3><p>如果想要設定更細節的東西</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.p10k.zsh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS_Cocoapods避坑製作流程</title>
      <link href="/posts/3ff540f7/"/>
      <url>/posts/3ff540f7/</url>
      
        <content type="html"><![CDATA[<h1 id="Set-By-Set"><a href="#Set-By-Set" class="headerlink" title="Set By Set"></a>Set By Set</h1><h3 id="新增框架專案"><a href="#新增框架專案" class="headerlink" title="新增框架專案"></a>新增框架專案</h3><p>開啟終端機並且移動到你想要創立框架的位置(這邊舉例桌面)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Desktop</span><br></pre></td></tr></table></figure><p>建立專案</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod lib create HelloMyFramwork</span><br></pre></td></tr></table></figure><h3 id="你將會碰到幾個問題"><a href="#你將會碰到幾個問題" class="headerlink" title="你將會碰到幾個問題"></a>你將會碰到幾個問題</h3><ul><li>What platform do you want to use?? (你是為了什麼平台？)<ul><li><code>[iOS / macOS]</code></li></ul></li><li>What language do you want to use?? (你想要使用什麼語言？)<ul><li><code>[Swift / ObjC]</code></li></ul></li><li>Would you like to include a demo application with your library? (你是否想要在你的核心框架中給一個範例？)<ul><li><code>[Yes / No]</code></li></ul></li><li>Which testing frameworks will you use? (你想使用哪種測試框架來進行測試？)<ul><li><code>[Quick / None]</code></li></ul></li><li>Would you like to do view based testing?<ul><li><code>[Yes / No]</code></li></ul></li></ul><h2 id="開啟專案後刪除測試相關檔案"><a href="#開啟專案後刪除測試相關檔案" class="headerlink" title="開啟專案後刪除測試相關檔案"></a>開啟專案後刪除測試相關檔案</h2><h3 id="Pods"><a href="#Pods" class="headerlink" title="Pods"></a>Pods</h3><ul><li><p>明明已經沒有選擇測試相關選項但仍然有出現測試檔案</p><ul><li>原因未知</li></ul></li><li><p>刪除框架專案中的「測試」目標與資料夾</p><p>  <fancybox><img src="https://i.loli.net/2020/01/03/uDyEPRqCnz39bwA.png" alt></fancybox></p></li></ul><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><ul><li>打開Example中的podfile</li><li>刪除測試的Target (圈起來的通通拿掉)</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/3CNRZf19KrHPtWI.png" alt></fancybox></p><ul><li>選擇Example專案並刪除測試Target</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/UpaVkrbjAx8542T.png" alt></fancybox></p><ul><li>刪除測試資料夾</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/Ag3Nxi5Q2PfrwEm.png" alt></fancybox></p><ul><li>刪除Example中Pods資料夾底下與測試相關的檔案</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/ZsxXofhqzSBniH7.png" alt></fancybox></p><ul><li>刪除Example中Frameworks資料夾底下的測試框架</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/2PQZ7Fqcg3Nmefw.png" alt></fancybox></p><p>好，終於刪除所有測試的檔案了可以去泡杯咖啡抽跟菸喘一下 (累.PNG)</p><h3 id="編輯podspec"><a href="#編輯podspec" class="headerlink" title="編輯podspec"></a>編輯podspec</h3><ul><li>修改框架支援OS版本</li><li>新增指令框架使用Swift語言</li></ul><p><fancybox><img src="https://i.loli.net/2020/01/03/TOVeJMus5ShCUco.png" alt></fancybox></p><h3 id="關閉Xcode-並且-pod-install"><a href="#關閉Xcode-並且-pod-install" class="headerlink" title="關閉Xcode 並且 pod install"></a>關閉Xcode 並且 pod install</h3><p><strong>每次有新增Flle或者XIB檔案等等操作都需要pod insasll</strong></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure><h3 id="文件介紹"><a href="#文件介紹" class="headerlink" title="文件介紹"></a>文件介紹</h3><p><code>_Pods.xcodeproj</code><br>這是cocoapods的專案檔，裡面包含自己定義的框架<br><fancybox><fancybox><img src="https://i.loli.net/2019/12/30/e1UVhBImSKcL2gx.png" alt></fancybox></fancybox></p><p><code>podspec</code><br>你可以把它想像成「描述框架文件」主要說明作者、版本、使用許可、倉庫地址甚至是支援版本<br><fancybox><fancybox><img src="https://i.loli.net/2019/12/30/CpbQPYqxT5FJwut.png" alt></fancybox></fancybox></p><p><code>Example</code><br>範例專案，這個就不用多解釋了<br><fancybox><fancybox><img src="https://i.loli.net/2019/12/30/6SbEakX9urJIKsx.png" alt></fancybox></fancybox></p><p><code>你建立的框架名稱資料夾</code><br>這個範例的名稱叫做「HelloMyCocoapods」<br><fancybox><fancybox><img src="https://i.loli.net/2019/12/30/ngMKCXblrHWPtEN.png" alt></fancybox></fancybox><br>這裡面基本上會包含兩個資料夾</p><ul><li>Assets<ul><li>用來放置圖片、XIB等等資源</li></ul></li><li>Classes<ul><li>用來放置File<br><fancybox><fancybox><img src="https://i.loli.net/2019/12/30/4EbmKJBts6xYhGa.png" alt></fancybox></fancybox></li></ul></li></ul><h3 id="File"><a href="#File" class="headerlink" title="File"></a>File</h3><h4 id="從專案左側的資料夾可以看見一個很顯眼的File名叫「ReplaceMe」"><a href="#從專案左側的資料夾可以看見一個很顯眼的File名叫「ReplaceMe」" class="headerlink" title="從專案左側的資料夾可以看見一個很顯眼的File名叫「ReplaceMe」"></a>從專案左側的資料夾可以看見一個很顯眼的File名叫「ReplaceMe」</h4><p>這個命名也挺有意思，就是請你取代他<br>點開該文件發會發現空白，沒有任何說明(也可能官網有放說明…我沒看)<br>這邊有幾個狀況要特別再三說明，這些狀況我覺得其實應該大多數的網路文章都沒有仔細說明這塊<br>以下是我個人的經驗總結</p><h4 id="新增資料夾"><a href="#新增資料夾" class="headerlink" title="新增資料夾"></a>新增資料夾</h4><p><strong>檔案很多，總該要有資料夾來做為分類管理</strong><br><strong>後面加入的Resopurce如果也需要資料夾分類管理，方法一樣</strong></p><ul><li>首先我們在我 Classes 底下建立兩個資料夾並命名為「Manager」與「Util」</li><li>回到框架的專案內並建立兩個File</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/x1zjlePtL5ouJVD.png" alt></fancybox></p><h4 id="新增File"><a href="#新增File" class="headerlink" title="新增File"></a>新增File</h4><p>在Pods底下直接cmd+N來新建立兩個.swift<br><strong>直接指定好File到剛剛建立的資料夾底下</strong></p><p><fancybox><fancybox><img src="https://i.loli.net/2020/01/03/NrbjDpviVTKCdGF.png" alt></fancybox></fancybox></p><h3 id="確認文件位置"><a href="#確認文件位置" class="headerlink" title="確認文件位置"></a>確認文件位置</h3><ol><li>確認好.swift的檔案有儲存到正確的位置</li><li>如果資料夾內沒有任何.swift的文件，後續pod install後該資料夾不會在Xcode中顯示</li></ol><p><fancybox><img src="https://i.loli.net/2019/12/31/s8jLcU1FTbJX5yP.png" alt></fancybox><br><fancybox><img src="https://i.loli.net/2019/12/31/xaHGyTizIbJnk7M.png" alt></fancybox></p><ol start="2"><li>終端機 cd 到 Example資料夾底下<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure></li></ol><h3 id="Podspec說明"><a href="#Podspec說明" class="headerlink" title="Podspec說明"></a>Podspec說明</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">Pod::Spec.new <span class="keyword">do</span> <span class="params">|s|</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#---框架外部資訊相關---#</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#框架名稱(required)</span></span><br><span class="line">  s.name             = <span class="string">'HelloMyCocoapods'</span></span><br><span class="line">  <span class="comment">#框架版本，每次更新都得來這邊修改(required)</span></span><br><span class="line">  s.version          = <span class="string">'0.1.0'</span></span><br><span class="line">  <span class="comment">#簡介</span></span><br><span class="line">  s.summary          = <span class="string">'沒有一堆幹話的精簡介紹'</span></span><br><span class="line">  <span class="comment">#長介</span></span><br><span class="line">  s.description = &lt;&lt;-DESC</span><br><span class="line">                     更詳細的介紹</span><br><span class="line">                   DESC</span><br><span class="line">  <span class="comment">#專案主頁面(required)</span></span><br><span class="line">  s.homepage         = <span class="string">'https://github.com/League2EB/HelloMyCocoapods'</span></span><br><span class="line">  <span class="comment">#如果是UI相關框架，可以放擷圖來展示</span></span><br><span class="line">  <span class="comment"># s.screenshots     = 'www.example.com/screenshots_1', 'www.example.com/screenshots_2'</span></span><br><span class="line">  <span class="comment">#使用許可證(required)</span></span><br><span class="line">  s.license          = &#123; <span class="symbol">:type</span> =&gt; <span class="string">'MIT'</span>, <span class="symbol">:file</span> =&gt; <span class="string">'LICENSE'</span> &#125;</span><br><span class="line">  <span class="comment">#維護人員資訊(required)</span></span><br><span class="line">  s.author           = &#123; <span class="string">'Lazy'</span> =&gt; <span class="string">'Lazy@Lazy.com'</span> &#125;</span><br><span class="line">  <span class="comment">#如果是多人維護</span></span><br><span class="line">  <span class="comment">#spec.authors = &#123; 'Lazy1' =&gt; 'Lazy1<span class="doctag">@Lazy</span>1.com','Lazy2' =&gt; 'Lazy2<span class="doctag">@Lazy</span>2.com' &#125;</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="comment">#---框架內部資源相關---#</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#目標語言版本</span></span><br><span class="line">  s.swift_version = <span class="string">'5.0'</span></span><br><span class="line">  <span class="comment">#框架位置(required)</span></span><br><span class="line">  s.source           = &#123; <span class="symbol">:git</span> =&gt; <span class="string">'https://github.com/League2EB/HelloMyCocoapods.git'</span>, <span class="symbol">:tag</span> =&gt; s.version.to_s &#125;</span><br><span class="line">  <span class="comment">#框架部屬目標版本</span></span><br><span class="line">  s.ios.deployment_target = <span class="string">'10.0'</span></span><br><span class="line">  <span class="comment">#框架文件目錄</span></span><br><span class="line">  s.source_files = <span class="string">'HelloMyCocoapods/Classes/**/*'</span></span><br><span class="line">  <span class="comment">#框架圖片資源目錄</span></span><br><span class="line">  s.resource_bundles = &#123;</span><br><span class="line">    <span class="string">'HelloMyCocoapodsresource'</span> =&gt; [<span class="string">'HelloMyCocoapods/Assets/**/*.&#123;png,xib,xcassets&#125;'</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">#依賴的第三方框架</span></span><br><span class="line">  s.dependency <span class="string">"RxSwift"</span></span><br><span class="line">  <span class="comment">#依賴的系統框架</span></span><br><span class="line">  <span class="comment">#s.frameworks = 'UIKit', 'MapKit'</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="依賴"><a href="#依賴" class="headerlink" title="依賴"></a>依賴</h3><p>如果自己開發的框架中有依賴另外一個第三方框架，可以在podspec中設定</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s.dependency <span class="string">"RxSwift"</span></span><br><span class="line">s.dependency <span class="string">"Moya"</span></span><br><span class="line">s.dependency <span class="string">"ObjectMapper"</span></span><br></pre></td></tr></table></figure><h3 id="Resource"><a href="#Resource" class="headerlink" title="Resource"></a>Resource</h3><h6 id="加入圖片資源檔案或者XIB"><a href="#加入圖片資源檔案或者XIB" class="headerlink" title="加入圖片資源檔案或者XIB"></a>加入圖片資源檔案或者XIB</h6><ul><li>首先，選擇框架專案檔案</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/TSKRulaZ7bDmvhU.png" alt></fancybox></p><ul><li>新增Target</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/6K2tlZbn4HvJEu7.png" alt></fancybox></p><ul><li>選擇macOS後 右邊輸入<code>Bundle</code>並選擇 Bundle</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/hlpn631gzGQA4XE.png" alt></fancybox></p><ul><li><p>Product Name 千萬不要與框架名稱相同</p></li><li><p>建議命名 框架名稱+Resource</p><ul><li>例如：HelloMyCocoapodsresource</li></ul></li><li><p>新增一個XIB作為測試，這邊命名為CocoaViewController</p></li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/2v8YHETGLFCxA5h.png" alt></fancybox></p><ul><li><p>打開<code>HelloMyCocoapods.podspec</code></p><ul><li><p>解開註解並編輯</p></li><li><p>替換Bundles的名字為剛才取的Product Name</p></li><li><p>並且宣告將要讀取的資源檔案<code>png,xib,xcassets</code></p></li><li><p>附檔名的前後要加入一個波浪括號<code>{}</code>(很多Blog就死不講，害新手打錯找半天)</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s.resource_bundles = &#123;</span><br><span class="line">  <span class="string">'HelloMyCocoapodsresource'</span> =&gt; [<span class="string">'HelloMyCocoapods/Assets/*.&#123;png,xib,xcassets&#125;'</span>]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>設定Base SDK</p><ul><li><p>選擇「框架」專案中的Build Settings</p></li><li><p>項目Architectures裡頭的Base SDK改為「iOS」</p><p><fancybox><img src="https://i.loli.net/2020/01/03/BKHb59JLGdluhSO.png" alt></fancybox></p></li></ul></li></ul><h3 id="在Assets底下建立兩個資料夾"><a href="#在Assets底下建立兩個資料夾" class="headerlink" title="在Assets底下建立兩個資料夾"></a>在<code>Assets</code>底下建立兩個資料夾</h3><ul><li>一個叫XIB一個叫IMG(名字隨便你取這邊只是範例)</li></ul><p><fancybox><img src="https://i.loli.net/2020/01/03/VvhZXElKNuoxOWS.png" alt></fancybox></p><ul><li>點選你的框架底下的同名資料夾後 <code>cmd + n</code></li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/yhbcnpskdARe7j3.png" alt></fancybox></p><ul><li>新增一個XIB，並且命名為CocoapodsViewController<ul><li>新增時直接指定.xib放置的位置為剛剛建立的XIB資料夾</li></ul></li><li>新增一個Asset Catalog 建議使用預設的<code>Media.xcassets</code><ul><li>新增時直接指定.xcassets放置的位置為剛剛建立的IMG資料夾</li></ul></li></ul><p><strong>把這兩個檔案「各別」放置到剛剛建立的XIB、IMG資料夾去</strong><br><fancybox><img src="https://i.loli.net/2020/01/03/ZEHyUqBfdX1csVG.png" alt></fancybox></p><p><strong>關閉Xcode 再次pod install</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure><ul><li>打開專案，應該要自動出現<code>Resources</code>這個資料夾，若有便是成功</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/lxE9Lrf5FiKUcwp.png" alt></fancybox></p><h3 id="新增圖片資源資料夾"><a href="#新增圖片資源資料夾" class="headerlink" title="新增圖片資源資料夾"></a>新增圖片資源資料夾</h3><ul><li><p><strong>作法一樣但要特別注意名稱，不要命名與Example一樣為<code>Images.xcassets</code></strong></p></li><li><p><strong>建議使用預設的<code>Media.xcassets</code></strong><br><del>- 原因除了Xcode會替我們優化圖片的載入速度之外還有避免被逆向工程之後導出圖片的可能<br>~</del><br><del><strong>如圖，圖片都被壓縮在Assets.car裡面了，可能是我逆向的能力不足但我自己本身拆解不開….</strong></del></p><ul><li>載入速度確實會比較快，但我還是找到破解Assets.car的方法了….</li></ul><p><fancybox><img src="https://i.loli.net/2019/12/31/eVjp9yMU1hnBraS.png" alt></fancybox></p></li></ul><h3 id="結束"><a href="#結束" class="headerlink" title="結束"></a>結束</h3><p>基本上執行到這裡就算是完成了，Example的專案理當也可以使用框架中有開放的類別或者Resource的資源了</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xcode </tag>
            
            <tag> Framework </tag>
            
            <tag> Pods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完整清除pod</title>
      <link href="/posts/9a4a4d19/"/>
      <url>/posts/9a4a4d19/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有時候，常常會碰到pod導致Xcode專案Run不起來的怪異問題<br>以前的作法是</p><ul><li>手動砍podfile.lock</li><li>手動砍xcworkspace</li><li>手動砍pods</li></ul><h1 id="幹"><a href="#幹" class="headerlink" title="幹"></a>幹</h1><p> 結果，還是跑不起來</p><h1 id="解決-不囉嗦直上代碼"><a href="#解決-不囉嗦直上代碼" class="headerlink" title="解決 - 不囉嗦直上代碼"></a>解決 - 不囉嗦直上代碼</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod deintegrate</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapods-clean</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod clean</span><br></pre></td></tr></table></figure><p><code>執行下面一個指令之前，去專案內搜尋只要有Pods名稱的通通砍掉</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod setup</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xcode </tag>
            
            <tag> Pods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xcode 11 Application Loader 找回</title>
      <link href="/posts/55188126/"/>
      <url>/posts/55188126/</url>
      
        <content type="html"><![CDATA[<h4 id="Xcode11-，蘋果把Application-Loader給刪除了，怎麼辦？"><a href="#Xcode11-，蘋果把Application-Loader給刪除了，怎麼辦？" class="headerlink" title="Xcode11 ，蘋果把Application Loader給刪除了，怎麼辦？"></a>Xcode11 ，蘋果把Application Loader給刪除了，怎麼辦？</h4><p><a href="https://a.cl.ly/P8uYe816" target="_blank" rel="noopener">下載到爆</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Xcode、iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fastlane + Shell 打包ipa(包含憑證設定)</title>
      <link href="/posts/4611262f/"/>
      <url>/posts/4611262f/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><h6 id="更新Xcode11-macOS-Catalina後原本的腳本就失效覺得很賭爛，光是解決該問題就花了我六小時所以果斷寫成一篇流程，跟著走絕對可以OneKeyToBuild"><a href="#更新Xcode11-macOS-Catalina後原本的腳本就失效覺得很賭爛，光是解決該問題就花了我六小時所以果斷寫成一篇流程，跟著走絕對可以OneKeyToBuild" class="headerlink" title="更新Xcode11 + macOS Catalina後原本的腳本就失效覺得很賭爛，光是解決該問題就花了我六小時所以果斷寫成一篇流程，跟著走絕對可以OneKeyToBuild !"></a>更新Xcode11 + macOS Catalina後原本的腳本就失效覺得很賭爛，光是解決該問題就花了我六小時所以果斷寫成一篇流程，跟著走絕對可以OneKeyToBuild !</h6><h6 id="備註：OneKeyToBuild源自於OneKeyToWin外掛，有興趣自己Google"><a href="#備註：OneKeyToBuild源自於OneKeyToWin外掛，有興趣自己Google" class="headerlink" title="備註：OneKeyToBuild源自於OneKeyToWin外掛，有興趣自己Google"></a>備註：<code>OneKeyToBuild</code>源自於<code>OneKeyToWin</code>外掛，有興趣自己Google</h6><hr><h3 id="安裝Fastlane"><a href="#安裝Fastlane" class="headerlink" title="安裝Fastlane"></a>安裝Fastlane</h3><ul><li>先打開終端機(別覺得我說廢話，我曾經就是不知道網路上這些指令要在哪裡下)</li><li>安裝xcode-select</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure><ul><li>使用homebrew，安裝Fastlane<ul><li>沒有homebrew？<a href="https://brew.sh/index_zh-tw" target="_blank" rel="noopener">安裝</a></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install fastlane</span><br></pre></td></tr></table></figure><hr><h3 id="先產生Certificate-Signing-Request"><a href="#先產生Certificate-Signing-Request" class="headerlink" title="先產生Certificate Signing Request"></a>先產生Certificate Signing Request</h3><ul><li>打開mac裡面的鑰匙圈</li></ul><p><fancybox><img src="https://i.imgur.com/lbGYHBs.png" alt></fancybox></p><ul><li>選擇製作本地要求憑證</li></ul><p><fancybox><img src="https://i.imgur.com/nTrCvpq.png" alt></fancybox></p><ul><li>選擇儲存到磁碟，並且輸入email與名稱，認真可以隨便打</li></ul><p><fancybox><img src="https://i.imgur.com/t5saJ4S.png" alt></fancybox></p><ul><li>儲存到桌面或者任何地方，用完可以刪除不刪除也可以(未來搞不好又用到，例如申請推播)</li><li>長這樣</li></ul><p><fancybox><img src="https://i.imgur.com/88ou18u.png" alt></fancybox></p><h3 id="憑證設定-這邊以正式發佈證書來做為範例"><a href="#憑證設定-這邊以正式發佈證書來做為範例" class="headerlink" title="憑證設定(這邊以正式發佈證書來做為範例)"></a>憑證設定(這邊以正式發佈證書來做為範例)</h3><ul><li>去開發者帳號後台選擇<code>Certificates, Identifiers &amp; Profile</code></li></ul><p><fancybox><img src="https://i.imgur.com/yg5LKdK.png" alt></fancybox></p><ul><li>點選加號來新增開發者證書</li></ul><p><fancybox><img src="https://i.imgur.com/m2uNIl6.png" alt></fancybox></p><ul><li>選擇Apple Distribution後點選右上角Continue<ul><li>這邊特別說明一下從Xcode11之後只需要下載Apple Distribution or Apple Development就可以簽署所有平台應用包刮MacOS iPadOS</li></ul></li></ul><p><fancybox><img src="https://i.imgur.com/OciyTqt.png" alt></fancybox></p><ul><li>點擊Choose File後找到已經製作好的<code>Certificate Signing Request</code></li></ul><p><fancybox><img src="https://i.imgur.com/ui1gJOM.png" alt></fancybox></p><ul><li>好，我就當做你現在不知道要選擇哪個檔案那就看圖，有沒有覺得剛剛才看過？</li></ul><p><fancybox><img src="https://i.imgur.com/88ou18u.png" alt></fancybox></p><ul><li>選完之後點擊點選右上角Continue後會出現這個畫面，再點擊下載</li></ul><p><fancybox><img src="https://i.imgur.com/kmBDrNa.png" alt></fancybox></p><ul><li>點兩下加入到Mac的鑰匙圈</li></ul><p><fancybox><img src="https://i.imgur.com/xtYCtqR.png" alt></fancybox></p><h3 id="新增一個App-Identifiers"><a href="#新增一個App-Identifiers" class="headerlink" title="新增一個App Identifiers"></a>新增一個App Identifiers</h3><ul><li>點擊藍色 + 新增一個應用ID</li></ul><p><fancybox><img src="https://i.imgur.com/xAWDYaD.png" alt></fancybox></p><ul><li>選擇 App IDs</li></ul><p><fancybox><img src="https://i.imgur.com/V9B6L8V.png" alt></fancybox></p><ul><li>填寫應用資訊</li></ul><p><fancybox><img src="https://i.imgur.com/zaAlcC2.png" alt></fancybox></p><h3 id="設定發佈憑證"><a href="#設定發佈憑證" class="headerlink" title="設定發佈憑證"></a>設定發佈憑證</h3><ul><li><p>點擊左邊Profile並點擊藍色＋進行憑證新增</p><p><fancybox><img src="https://i.imgur.com/2YCRV3n.png" alt></fancybox></p></li><li><p>選擇App Store 後點擊右上角Continue</p></li></ul><p><fancybox><img src="https://i.imgur.com/itJxMJf.png" alt></fancybox></p><ul><li>選擇上一個環節所建立好的App Identifiers，並點擊右上角Continue</li></ul><p><fancybox><img src="https://i.imgur.com/vy0rbIh.png" alt></fancybox></p><ul><li>如果沒有意外你應該只有一個選項</li></ul><p><fancybox><img src="https://i.imgur.com/E3ankrt.png" alt></fancybox></p><ul><li>設定描述檔的名稱<ul><li>我會這樣寫HelloMyDemo_Release</li></ul></li></ul><p><fancybox><img src="https://i.imgur.com/dE0DE6e.png" alt></fancybox></p><ul><li><p>下載描述檔，然後建議把該描述檔放到你的專案資料夾裡面</p><ul><li><p>為什麼？好管理阿不然你一百個應用一百個描述檔你檔案會很難找</p></li><li><p>懂得分類的是身為工程師的基本技能</p><p><fancybox><img src="https://i.imgur.com/OOAOZI6.png" alt></fancybox></p></li></ul></li></ul><h3 id="Xcode內設定"><a href="#Xcode內設定" class="headerlink" title="Xcode內設定"></a>Xcode內設定</h3><ul><li><p>選擇Signing &amp; Capabilities</p><ul><li>選擇Release(看箭頭)</li><li>取消自動簽署(不要問為什麼，你會怕)<br><fancybox><img src="https://i.imgur.com/bk2BxNe.png" alt></fancybox></li></ul></li><li><p>import上一個環節建立的描述檔案</p></li></ul><p><fancybox><img src="https://i.imgur.com/lGspZrQ.png" alt></fancybox></p><h3 id="新增打包ReleaseExportOptions-plist"><a href="#新增打包ReleaseExportOptions-plist" class="headerlink" title="新增打包ReleaseExportOptions.plist"></a>新增打包ReleaseExportOptions.plist</h3><ul><li>打開文字編輯器或者Sublime然後把下面的Code貼上<ul><li>修完畢後把該檔案儲存在專案資料夾內</li><li>命名為<code>ReleaseExportOptions.plist</code></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>compileBitcode<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>destination<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>export<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>method<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>Release<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>provisioningProfiles<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>應用BundleID ex: com.xx.sample<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>描述檔名稱就好，後面的mobileprovision不用<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>signingCertificate<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>看鑰匙圈裡面憑證的名稱，整個複製上來 ex: Apple Distribution: 你的名稱 (1234567890)<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>signingStyle<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>manual<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>stripSwiftSymbols<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>teamID<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>跟上面的1234567890一樣<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>thinning<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>&amp;lt;none&amp;gt;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="新增打包腳本"><a href="#新增打包腳本" class="headerlink" title="新增打包腳本"></a>新增打包腳本</h3><ul><li>打開文字編輯器或者Sublime然後把下面的Code貼上<ul><li><a href="https://tinyurl.com/y3o6q7wj" target="_blank" rel="noopener">申請專用密碼</a></li><li>修改下面內容<ul><li>帳號</li><li>專用密碼</li><li>scheme</li></ul></li><li>修完畢後把該檔案儲存在專案資料夾內</li><li>命名為<code>Release.sh</code></li><li>打開終端機cd到專案資料夾</li><li>指令 <code>chmod +x Release.sh</code> (打開檔案權限)</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">設置超時</span></span><br><span class="line">export FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT=120</span><br><span class="line"><span class="meta">#</span><span class="bash">APP Store帳號</span></span><br><span class="line">A="example@gmail.com"</span><br><span class="line"><span class="meta">#</span><span class="bash">專用密碼密碼</span></span><br><span class="line">P="這個密碼是專用密碼，不是開發者帳號的密碼"</span><br><span class="line"><span class="meta">#</span><span class="bash">計時</span></span><br><span class="line">SECONDS=0</span><br><span class="line"><span class="meta">#</span><span class="bash">假設腳本放置在與項目相同的路徑下</span></span><br><span class="line">project_path=$(pwd)</span><br><span class="line"><span class="meta">#</span><span class="bash">取當前時間字符串添加到文件結尾</span></span><br><span class="line">now=$(date +"%Y_%m_%d_%H_%M_%S")</span><br><span class="line"><span class="meta">#</span><span class="bash">指定項目的scheme名稱</span></span><br><span class="line">scheme="scheme名稱 ex : HelloMyDemo"</span><br><span class="line"><span class="meta">#</span><span class="bash">指定要打包的配置名</span></span><br><span class="line"><span class="meta">#</span><span class="bash">測試環境測試包 configuration=<span class="string">"Debug"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">正式環境測試包 configuration=<span class="string">"Release"</span></span></span><br><span class="line">configuration="Release"</span><br><span class="line"><span class="meta">#</span><span class="bash">指定打包所使用的輸出方式，目前支持app-store, package, ad-hoc, enterprise, development, 和developer-id，即xcodebuild的method參數</span></span><br><span class="line">export_method='app-store'</span><br><span class="line"><span class="meta">#</span><span class="bash">指定項目地址</span></span><br><span class="line">workspace_path="$project_path/$&#123;scheme&#125;.xcworkspace"</span><br><span class="line"><span class="meta">#</span><span class="bash">指定輸出路徑</span></span><br><span class="line">output_path="$project_path/build/"</span><br><span class="line"><span class="meta">#</span><span class="bash">指定輸出歸檔文件地址</span></span><br><span class="line">archive_path="$output_path/$&#123;scheme&#125;_$&#123;now&#125;.xcarchive"</span><br><span class="line"><span class="meta">#</span><span class="bash">指定輸出ipa地址</span></span><br><span class="line">ipa_path="$output_path/$&#123;scheme&#125;_$&#123;now&#125;.ipa"</span><br><span class="line"><span class="meta">#</span><span class="bash">指定輸出ipa名稱</span></span><br><span class="line">ipa_name="$&#123;scheme&#125;_$&#123;now&#125;.ipa"</span><br><span class="line"><span class="meta">#</span><span class="bash">獲取執行命令時的commit message</span></span><br><span class="line">commit_msg="$1"</span><br><span class="line"><span class="meta">#</span><span class="bash">同意訪問鑰匙圈</span></span><br><span class="line">allowPV="-allowProvisioningUpdates"</span><br><span class="line"><span class="meta">#</span><span class="bash">ApplicationLoader路徑</span></span><br><span class="line">altoolPath="/Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool"</span><br><span class="line"><span class="meta">#</span><span class="bash">打包的plist設定</span></span><br><span class="line">exoplist="$project_path/ReleaseExportOptions.plist"</span><br><span class="line"><span class="meta">#</span><span class="bash">輸出設定的變量值</span></span><br><span class="line">echo "===workspace path: $&#123;workspace_path&#125;==="</span><br><span class="line">echo "===archive path: $&#123;archive_path&#125;==="</span><br><span class="line">echo "===ipa path: $&#123;ipa_path&#125;==="</span><br><span class="line">echo "===export method: $&#123;export_method&#125;==="</span><br><span class="line">echo "===commit msg: $1==="</span><br><span class="line"><span class="meta">#</span><span class="bash">先清空前一次build</span></span><br><span class="line">fastlane gym --silent true --workspace $&#123;workspace_path&#125; --scheme $&#123;scheme&#125; --clean --configuration $&#123;configuration&#125; --archive_path $&#123;archive_path&#125; --export_method $&#123;export_method&#125; --output_directory $&#123;output_path &#125; --output_name $&#123;ipa_name&#125; --export_xcargs $&#123;allowPV&#125; --export_options $&#123;exoplist&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">上傳到iTunes Connect</span></span><br><span class="line">"$altoolPath" --upload-app -f $&#123;ipa_path&#125; -t ios -u "$A" -p "$P"</span><br><span class="line">osascript -e 'display notification "上傳完成"'</span><br><span class="line"><span class="meta">#</span><span class="bash">輸出總用時</span></span><br><span class="line">echo "===Finished. Total time: $&#123;SECONDS&#125;s==="</span><br></pre></td></tr></table></figure><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><ul><li>cd 到專案目錄底下</li><li>指令 <code>./Release.sh</code></li><li>這個腳本有替您自動上傳到開發者帳號裡面的App Store Connect，但前提是你要先創好應用…(廢話)</li></ul>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用記憶體位置進行FunctionHook</title>
      <link href="/posts/7eacf7f7/"/>
      <url>/posts/7eacf7f7/</url>
      
        <content type="html"><![CDATA[<h1 id="注意：這招只可以運行在越獄環境的手機中"><a href="#注意：這招只可以運行在越獄環境的手機中" class="headerlink" title="注意：這招只可以運行在越獄環境的手機中"></a>注意：這招只可以運行在越獄環境的手機中</h1><p><strong>該需求的產生是因為某個Swift的方法Hook很麻煩，所以硬幹出來的</strong></p><p>這次的目標是「手機音樂電台」</p><p><img src="https://i.imgur.com/10agm6r.jpg" alt></p><ol><li><p>首先我從Appdelegate中發現了很可疑的關鍵字<br> <code>disableAD</code><br> <img src="https://i.imgur.com/Hno8HqR.png" alt></p></li><li><p>進去看了之後確定這個disableAD是一個由Swift類別封裝起來的方法<br> <img src="https://i.imgur.com/aPIPS85.png" alt></p></li><li><p>搜尋了一下該方法後看到他的記憶體位置<br> <img src="https://i.imgur.com/R5bKtef.png" alt>   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">這邊要特別說一下關於，這個記憶體位置</span><br><span class="line">由於我是使用ARM64設備砸殼出來，所以記憶體位置會如我們所看到的是0x1002cdbe8</span><br><span class="line">但如果今天砸殼的設備晶片是ARMv7或者其他型號，那該記憶體位置就會不同</span><br><span class="line">後面的程式碼就必須要針對其他型號做Hook，相當麻煩...</span><br></pre></td></tr></table></figure></li><li><p>寫Code</p></li></ol><ul><li>import必要框架</li></ul><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;substrate.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;dlfcn.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;mach-o/dyld.h&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>寫一個獲取記憶體位置的方法</li></ul><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uint64_t getRealOffset(uint64_t offset) &#123;</span><br><span class="line">    <span class="keyword">return</span> _dyld_get_image_vmaddr_slide(<span class="number">0</span>) + offset;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>拿出舊的方法返回值</li></ul><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">BOOL</span> (*orig_disableAd)();</span><br></pre></td></tr></table></figure><ul><li>宣告新的值</li></ul><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">BOOL</span> new_disableAd() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>最後在ctor把新的值，利用我們已知道的記憶體位置(0x1002cdbe8)直接串改</li></ul><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%ctor &#123;</span><br><span class="line">MSHookFunction((<span class="keyword">void</span>*)getRealOffset(<span class="number">0x1002cdbe8</span>),(<span class="keyword">void</span>*)new_disableAd,(<span class="keyword">void</span>**)&amp;orig_disableAd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="結論：這個方法很硬派，自用倒是無所謂若是要開放到Cydia上面要三思"><a href="#結論：這個方法很硬派，自用倒是無所謂若是要開放到Cydia上面要三思" class="headerlink" title="結論：這個方法很硬派，自用倒是無所謂若是要開放到Cydia上面要三思"></a>結論：這個方法很硬派，自用倒是無所謂若是要開放到Cydia上面要三思</h5>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BinaryHack</title>
      <link href="/posts/508802c9/"/>
      <url>/posts/508802c9/</url>
      
        <content type="html"><![CDATA[<p>TODO://</p>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>利用imagemagick將HEIC轉PNG</title>
      <link href="/posts/83fe1b07/"/>
      <url>/posts/83fe1b07/</url>
      
        <content type="html"><![CDATA[<h4 id="安裝imagemagick"><a href="#安裝imagemagick" class="headerlink" title="安裝imagemagick"></a>安裝imagemagick</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install imagemagick</span><br></pre></td></tr></table></figure><h4 id="轉檔"><a href="#轉檔" class="headerlink" title="轉檔"></a>轉檔</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">magick convert demo.HEIC demo.png</span><br></pre></td></tr></table></figure><h4 id="如果你要一次轉很多個檔案"><a href="#如果你要一次轉很多個檔案" class="headerlink" title="如果你要一次轉很多個檔案"></a>如果你要一次轉很多個檔案</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">magick mogrify -monitor -format png *.HEIC</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Clutch砸殼流程</title>
      <link href="/posts/e0179831/"/>
      <url>/posts/e0179831/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由於在iOS9設備上一直搞不定frida的砸殼所以進而研究Clutch的砸殼</p><ul><li>首先這邊下載Clutch-2.0.4檔案<br><a href="https://cl.ly/32bed300c1c5" target="_blank" rel="noopener">下載</a></li></ul><ul><li><p>將下載的檔案放到越獄手機中<code>/usr/bin</code> (可以利用iMazing或者scp)</p></li><li><p>開啟檔案權限 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x Clutch-2.0.4</span><br></pre></td></tr></table></figure></li><li><p>列出已經安裝在手機中的軟體</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Clutch-2.0.4 -i</span><br></pre></td></tr></table></figure></li><li><p>砸 ! (後面可以填寫數字或者BundleID)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Clutch-2.0.4 com.one.goodnight</span><br></pre></td></tr></table></figure></li><li><p>移動到砸殼後的ipa路徑</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /private/var/mobile/Documents/Dumped/</span><br></pre></td></tr></table></figure></li><li><p>將砸殼後的ipa改個名稱，你也可以不改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv com.xxx.xxx-iOS9.0-\(Clutch-2.0.4\).ipa 隨便.ipa</span><br></pre></td></tr></table></figure></li></ul><h3 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h3><p>為什麼這時代還要特別用iOS9來砸殼取出ipa ?<br>因為手邊的iPhone5 (ARMv7) 剛好是iOS9<br>而ARMv7的二進制檔案在hopper disassembler中的偽代碼<br>會比ARM64的好看懂！</p>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>越獄開發常用指與路徑</title>
      <link href="/posts/95bff353/"/>
      <url>/posts/95bff353/</url>
      
        <content type="html"><![CDATA[<p>因為智商不算是足夠，所以必須寫一篇來記錄一下常用指令還有一些路徑直到記起來為止<br>反正有打一次記不起來指令，那就打兩次。</p><hr><h2 id="指令相關"><a href="#指令相關" class="headerlink" title="指令相關"></a>指令相關</h2><p>從越獄手機傳送檔案到Mac </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P2222 root@localhost:目標路徑 ./</span><br></pre></td></tr></table></figure><p>從Mac傳送檔案到越獄手機</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P 2222 (mac文件路徑) root@localhost:(移動設備路徑)</span><br></pre></td></tr></table></figure><p>建立新的Tweak </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$THEOS/bin/nic.pl</span><br></pre></td></tr></table></figure><p>安裝Tweak到手機</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make clean &amp;&amp; make package &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>打包正式版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make clean &amp;&amp; make package FINALPACKAGE=1</span><br></pre></td></tr></table></figure><p>查看該二進制文件是否已經砸殼</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">otool -l xxx | grep crypt</span><br></pre></td></tr></table></figure><p>在越獄手機ReSpringBoard</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall -9 SpringBoard</span><br></pre></td></tr></table></figure><p>使用sshpass指定密碼</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshpass -p alpine</span><br></pre></td></tr></table></figure><p>進入安全模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall -SEGV SpringBoard</span><br></pre></td></tr></table></figure><p>tvOS ReSpringBoard</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall -9 PineBoard</span><br></pre></td></tr></table></figure><h2 id="Sublime相關"><a href="#Sublime相關" class="headerlink" title="Sublime相關"></a>Sublime相關</h2><p>開啟左側樹狀</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmd + k</span><br><span class="line">cmd + b</span><br></pre></td></tr></table></figure><p>搜尋所有檔案中有包含的內容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd+shift+F</span><br></pre></td></tr></table></figure><p>直接跳到某個檔案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd+p</span><br></pre></td></tr></table></figure><h2 id="路徑相關"><a href="#路徑相關" class="headerlink" title="路徑相關"></a>路徑相關</h2><p>UIKit(iOS 10)</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 10.3.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks</span><br></pre></td></tr></table></figure><p>UIKitCore(iOS 12)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 12.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks</span><br></pre></td></tr></table></figure><p>獲取安裝的deb (安裝完畢第一時間有效，但如果點擊Respring該deb就會被刪除)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/private/var/mobile/Library/Caches/com.saurik.Cydia/archives/</span><br></pre></td></tr></table></figure><p>CydiaSubstrate.h檔案位置 (你要有安裝Thoes才有…)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/theos/vendor/lib/CydiaSubstrate.framework/Headers/</span><br></pre></td></tr></table></figure><p>dylib在越獄設備底下的Path</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/MobileSubstrate/DynmicLibraries</span><br></pre></td></tr></table></figure><h2 id="文獻相關網站"><a href="#文獻相關網站" class="headerlink" title="文獻相關網站"></a>文獻相關網站</h2><p><a href="http://iphonedevwiki.net/index.php/Preferences_specifier_plist" target="_blank" rel="noopener">Preferences Specifier</a></p>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>關於Entitlement</title>
      <link href="/posts/4c5cd99b/"/>
      <url>/posts/4c5cd99b/</url>
      
        <content type="html"><![CDATA[<p>Entitlement是iOS系統功能權限的聲明<br>通常像是iCloud、推播等等<br>但其實蘋果有隱藏很多的entitlement是給系統APP使用<br>在JB後可以通過簽名手段來開啟一些原本無法使用的服務。</p><p>但如果想破解的應用裡面有使用到需要Entitlement來啟動的功能<br>那在逆向的時候必須要把該功能的Server驗證給取消<br>至於該怎麼取消？</p><h4 id="自己找！"><a href="#自己找！" class="headerlink" title="自己找！"></a>自己找！</h4><p>這邊說的自己找，是指你要從核心Framework裡面的方法去找</p>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Tweak與砸殼ipa做合併流程筆記</title>
      <link href="/posts/6c15d72f/"/>
      <url>/posts/6c15d72f/</url>
      
        <content type="html"><![CDATA[<p>Tweak與砸殼ipa做合併流程講解</p><p>1.先把砸殼後的ipa複製到已經建立的Tweak資料夾底下<br>下面是確認是否ipa已經砸殼成功方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">otool -l xxx | grep crypt</span><br></pre></td></tr></table></figure><p>2.把packages裡面的deb檔案全部刪除</p><p>3.安裝theos-jailed -&gt; <a href="https://tinyurl.com/y69vwoal" target="_blank" rel="noopener">https://tinyurl.com/y69vwoal</a><br>這是一個模版，可以說是擴充Thoes的套件</p><p>4.安裝 ios-deploy -&gt; <a href="https://tinyurl.com/y3f77a7k" target="_blank" rel="noopener">https://tinyurl.com/y3f77a7k</a><br>協助安裝打包ipa的工具</p><p>5.編輯Makefile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make clean &amp;&amp; make package</span><br></pre></td></tr></table></figure><p>5.登入開發者帳號建立一個APPID並且BundleID選擇Wildcard<br>內容輸入com.name.* (name自己取)     </p><p>6.建立Profile並且選擇第五步驟建立的ID，並選擇設備<br>建立完畢後下載(建議放到tweak底下的資料夾，好找)</p><p>7.cd 到Tweak資料夾</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make package PROFILE=xxxxxx.mobileprovision</span><br></pre></td></tr></table></figure><p>完成後packages裡面應該要出現砸殼APP與Tweak合併後的ipa</p><p>8.移除手機內相同的應用，不然會出現Error 0xe8000022錯誤問題</p><p>9.手機插電腦在Tweak資料夾下指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><p>若依然出現Error 0xe8000022，手機重新開機電腦重新開機</p><p>10.cd 到.thoes/Payload/xxx.app<br>下指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">otool xxx的binary -l</span><br></pre></td></tr></table></figure><p>可以檢查Tweak是否被inject到應用裡面</p>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>越獄筆記</title>
      <link href="/posts/ed5a19cc/"/>
      <url>/posts/ed5a19cc/</url>
      
        <content type="html"><![CDATA[<h2 id="快速砸殼"><a href="#快速砸殼" class="headerlink" title="快速砸殼"></a>快速砸殼</h2><p>之前有發過一篇關於砸殼的文章，我認為那是最佳也最好的方法<br>後來就發現了CrackerXI +這個靠北的東西(白忙一場)<br>這裡下載v1.1.6版本的deb，如果覺得有毒那就自己去找一下Repo吧<br><a href="https://cl.ly/9a0e11b1b8cf" target="_blank" rel="noopener">下載</a><br>利用CrackerXI + 砸殼之後需要把已被砸殼的ipa傳送到Mac，這邊使用SCP來完成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P2222 root@localhost:/var/mobile/Documents/CrackerXI/FHMBookCity_2.9.80_CrackerXI.ipa ./</span><br></pre></td></tr></table></figure><h2 id="MSHookIvar訪問私有變數"><a href="#MSHookIvar訪問私有變數" class="headerlink" title="MSHookIvar訪問私有變數"></a>MSHookIvar訪問私有變數</h2><p>在Logos上方導入substrate.h</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;substrate.h&gt;</span><br></pre></td></tr></table></figure><p>寫下你從Hopper看到的類別，下面是舉例</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">SampleObject</span>: <span class="title">NSObject</span>  </span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> m_visibleRows;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>在你想要的地方訪問</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//後面的 = 1 是改變這個變數的值</span></span><br><span class="line">    MSHookIvar&lt;<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>&gt;(<span class="keyword">self</span>, <span class="string">"m_visibleRows"</span>) = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>◎ iOS 系統原生所有的操作都不會動到系統任何檔案</p><p>◎ %ctor tweak載入時會進入的第一點，這可以用來DEBUG</p><h2 id="Layout內檔案說明"><a href="#Layout內檔案說明" class="headerlink" title="Layout內檔案說明"></a>Layout內檔案說明</h2><p>分別有五種</p><ul><li>安裝前 <code>preinst</code></li><li>安裝後 <code>postinst</code></li><li>移除前 <code>prerm</code></li><li>移除後 <code>postrm</code></li><li>最後一種叫 <code>extrainst</code> <a href="https://github.com/Cannathea/afc2d-arm64/blob/master/extrainst.mm" target="_blank" rel="noopener">參考</a></li></ul><p>這些是告訴系統，在這些狀態之後要做Respring這件事情<br>有趣的事情是，雖然我們是安裝後才需要respring，照理說應該是寫在 postinst<br>但是寫在 preinst 也是會通<br>然後如果因為某些原因你必須用很複雜的安裝前安裝後指令的話，你可以寫一個程式，然後把它叫做這四個名稱的其中一個，他也會在該時間點執行<br>不一定只能寫 script</p><p><a href="http://iphonedevwiki.net/index.php/Preferences_specifier_plist" target="_blank" rel="noopener">http://iphonedevwiki.net/index.php/Preferences_specifier_plist</a></p>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>APP砸殼正確姿勢</title>
      <link href="/posts/b6771505/"/>
      <url>/posts/b6771505/</url>
      
        <content type="html"><![CDATA[<h3 id="前言：從App-Store下載下來的APP，經過了一層蘋果的加密需要先砸殼後才可以進行分析"><a href="#前言：從App-Store下載下來的APP，經過了一層蘋果的加密需要先砸殼後才可以進行分析" class="headerlink" title="前言：從App Store下載下來的APP，經過了一層蘋果的加密需要先砸殼後才可以進行分析"></a>前言：從App Store下載下來的APP，經過了一層蘋果的加密需要先砸殼後才可以進行分析</h3><h6 id="加入軟體源"><a href="#加入軟體源" class="headerlink" title="加入軟體源"></a>加入軟體源</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://build.frida.re</span><br></pre></td></tr></table></figure><h6 id="安裝frida"><a href="#安裝frida" class="headerlink" title="安裝frida"></a>安裝frida</h6><p><img src="https://i.imgur.com/Vt4CWLB.png" alt></p><h6 id="在Mac上安裝pip"><a href="#在Mac上安裝pip" class="headerlink" title="在Mac上安裝pip"></a>在Mac上安裝pip</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo easy_install pip</span><br></pre></td></tr></table></figure><h6 id="安裝與升級frida"><a href="#安裝與升級frida" class="headerlink" title="安裝與升級frida"></a>安裝與升級frida</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --user frida</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo easy_install --upgrade frida</span><br></pre></td></tr></table></figure><h6 id="安裝frida-cli"><a href="#安裝frida-cli" class="headerlink" title="安裝frida cli"></a>安裝frida cli</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install frida-tools</span><br></pre></td></tr></table></figure><h6 id="在你想要的地方建立一個frida的資料夾"><a href="#在你想要的地方建立一個frida的資料夾" class="headerlink" title="在你想要的地方建立一個frida的資料夾"></a>在你想要的地方建立一個frida的資料夾</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir Frida</span><br></pre></td></tr></table></figure><h6 id="把frida-ios-dump-clone到你剛剛創的資料夾"><a href="#把frida-ios-dump-clone到你剛剛創的資料夾" class="headerlink" title="把frida-ios-dump clone到你剛剛創的資料夾"></a>把frida-ios-dump clone到你剛剛創的資料夾</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/AloneMonkey/frida-ios-dump Frida/</span><br></pre></td></tr></table></figure><h6 id="cd到frida-ios-dump資料夾裡面，並安裝依賴套件"><a href="#cd到frida-ios-dump資料夾裡面，並安裝依賴套件" class="headerlink" title="cd到frida-ios-dump資料夾裡面，並安裝依賴套件"></a>cd到frida-ios-dump資料夾裡面，並安裝依賴套件</h6><p>cd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p>安裝</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h6 id="修改dump-py"><a href="#修改dump-py" class="headerlink" title="修改dump.py"></a>修改dump.py</h6><p>其實好像不用改…預設就這樣子<br>除非你的越獄手機密碼有改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">User = &apos;root&apos;</span><br><span class="line">Password = ‘alpine’</span><br><span class="line">Host = &apos;localhost&apos;</span><br><span class="line">Port = 2222</span><br></pre></td></tr></table></figure><h6 id="開啟你想砸殼的APP在前景，然後下指令來確認"><a href="#開啟你想砸殼的APP在前景，然後下指令來確認" class="headerlink" title="開啟你想砸殼的APP在前景，然後下指令來確認"></a>開啟你想砸殼的APP在前景，然後下指令來確認</h6><p>我是說先去手機開啟你要砸殼的APP<br>然後</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frida-ps -Ua</span><br></pre></td></tr></table></figure><p>看起來會像是這樣子(圖)<br><img src="https://i.imgur.com/60MhFpe.png" alt><br>這邊就是要你確認想要砸殼的應用是不是有被偵測到以及複製好你要砸殼的BundleID(名稱也可以，但建議用BundleID比較穩)</p><h6 id="砸殼"><a href="#砸殼" class="headerlink" title="砸殼"></a>砸殼</h6><p>終端機位置仍然是frida-ios-dump底下<br>然後</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./dump.py com.google.Maps</span><br><span class="line">後面的com.google.Maps是你要砸殼的APPBundleId，這裡只是舉例</span><br></pre></td></tr></table></figure><p>最後你會在frida-ios-dump底下看到一個「目標.ipa」就是已經被砸殼的APP了</p>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用FFmpeg合併影片</title>
      <link href="/posts/aff04168/"/>
      <url>/posts/aff04168/</url>
      
        <content type="html"><![CDATA[<ul><li><p>指令 (安裝ffmpeg)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ffmpeg</span><br></pre></td></tr></table></figure></li><li><p>把終端機的目錄移動到你放置影片的資料夾中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ex: cd Desktop</span><br></pre></td></tr></table></figure></li><li><p>指令 (把第一段影片轉成.ts檔案)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i 第一段影片.MP4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb 1.ts</span><br></pre></td></tr></table></figure></li><li><p>指令 (把第二段影片轉成.ts檔案)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i 第二段影片.MP4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb 2.ts</span><br></pre></td></tr></table></figure></li><li><p>指令 (合併兩個.ts檔案，並且輸出成mp4)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i &quot;concat:1.ts|2.ts&quot; -acodec copy -vcodec copy -absf aac_adtstoasc output.mp4</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用SSH連接越獄手機，並且不要再打密碼</title>
      <link href="/posts/26217a84/"/>
      <url>/posts/26217a84/</url>
      
        <content type="html"><![CDATA[<h1 id="2019-09-24更新"><a href="#2019-09-24更新" class="headerlink" title="2019-09-24更新"></a>2019-09-24更新</h1><p>安裝usbmuxd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install usbmuxd</span><br></pre></td></tr></table></figure><p>安裝usbmuxd後會自動安裝iproxy，開Port吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iproxy 2222 22</span><br></pre></td></tr></table></figure><p>以上命令就是把當前連接設備的22端口(SSH端口)映射到電腦的2222端口，那麼想和設備22端口連接，就直接連線2222就可以啦</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">指令：iproxy 2222 22</span><br><span class="line">結果：waiting for connection</span><br></pre></td></tr></table></figure><p>把手機用線插上電腦<br>新建一個終端窗口執行Mac端命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2222 root@127.0.0.1</span><br></pre></td></tr></table></figure><p>此時則已經連接上了iPhone|iPad設備<br>越獄設備的默認密碼是 alpine</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 4567 root@127.0.0.1</span><br><span class="line">root@127.0.0.1&apos;s password: 輸入密碼</span><br><span class="line">你的越獄手機:~ root#</span><br></pre></td></tr></table></figure><h2 id="免密碼"><a href="#免密碼" class="headerlink" title="免密碼"></a>免密碼</h2><p>同常看到這裡你電腦裡面應該都已經有rsa鑰匙了<br>鑰匙會在這裡</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /Users/你是誰/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>把id_rsa.pub複製到桌面並且改名字為</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">authorized_keys</span><br></pre></td></tr></table></figure><p>先ssh進去越獄手機確認一下/var/root底下是否已經存在.ssh這個資料夾<br>如果沒有就在var/root底下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir .ssh</span><br></pre></td></tr></table></figure><p>從桌面把鑰匙丟進去這個資料夾(這裡用scp)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P 2222 ./Desktop/authorized_keys root@127.0.0.1:/var/root/.ssh</span><br></pre></td></tr></table></figure><p>我被這個問題困擾很久，因為我都使用root@localhost來連線<br>只要替換設備連線就會需要去刪除known_hosts裡面的紀錄<br>後來改用<a href="mailto:root@127.0.0.1" target="_blank" rel="noopener">root@127.0.0.1</a><br>再每次連線之後都去known_hosts把127.0.0.1改成 127.0.0.2<br>連線完畢之後再改回來就好<br>我是低能理解很慢，但如果你有很多支越獄手機想連線，但是看到這篇之後還是不懂，你可以留言我一定會回你。</p>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>獲取LaunchImage名稱</title>
      <link href="/posts/81bcc84/"/>
      <url>/posts/81bcc84/</url>
      
        <content type="html"><![CDATA[<p>如果你不想要用LaunchScreen.storyboard<br>而是使用Launch Image Source<br>然後第一個畫面你想要拿到跟Launch Image Source的同一張圖片</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getCurrentLaunchImage</span><span class="params">()</span></span> -&gt; <span class="type">UIImage?</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> launchImages = <span class="type">Bundle</span>.main.infoDictionary?[<span class="string">"UILaunchImages"</span>] <span class="keyword">as</span>? [[<span class="type">String</span>: <span class="type">Any</span>]] <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> screenSize = <span class="type">UIScreen</span>.main.bounds.size</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> interfaceOrientation: <span class="type">String</span></span><br><span class="line">    <span class="keyword">switch</span> <span class="type">UIApplication</span>.shared.statusBarOrientation &#123;</span><br><span class="line">    <span class="keyword">case</span> .portrait,</span><br><span class="line">         .portraitUpsideDown:</span><br><span class="line">        interfaceOrientation = <span class="string">"Portrait"</span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        interfaceOrientation = <span class="string">"Landscape"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> launchImage <span class="keyword">in</span> launchImages &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> imageSize = launchImage[<span class="string">"UILaunchImageSize"</span>] <span class="keyword">as</span>? <span class="type">String</span> <span class="keyword">else</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> launchImageSize = <span class="type">CGSizeFromString</span>(imageSize)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> launchImageOrientation = launchImage[<span class="string">"UILaunchImageOrientation"</span>] <span class="keyword">as</span>? <span class="type">String</span> <span class="keyword">else</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span></span><br><span class="line">            launchImageSize.equalTo(screenSize),</span><br><span class="line">            launchImageOrientation == interfaceOrientation,</span><br><span class="line">            <span class="keyword">let</span> launchImageName = launchImage[<span class="string">"UILaunchImageName"</span>] <span class="keyword">as</span>? <span class="type">String</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">UIImage</span>(named: launchImageName)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> UIApplication </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆時針旋轉動畫</title>
      <link href="/posts/2a188618/"/>
      <url>/posts/2a188618/</url>
      
        <content type="html"><![CDATA[<p>宣告CGAffineTransform</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">let</span> transformIdentity = <span class="type">CGAffineTransform</span>.identity</span><br></pre></td></tr></table></figure><p>你要旋轉的物件</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.view.transform = <span class="keyword">self</span>.transformIdentity.rotated(by: <span class="number">180</span> * <span class="type">CGFloat</span>(<span class="type">Double</span>.pi))</span><br><span class="line"><span class="keyword">self</span>.view.transform = <span class="keyword">self</span>.transformIdentity.rotated(by: -<span class="number">1</span> * <span class="type">CGFloat</span>(<span class="type">Double</span>.pi))</span><br></pre></td></tr></table></figure><p>轉回來</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">self</span>.view.transform = <span class="type">CGAffineTransform</span>.identity</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> UIView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>開啟EC2檔案上傳修改新增權限</title>
      <link href="/posts/6897ff7c/"/>
      <url>/posts/6897ff7c/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 755 /var/www/html</span><br><span class="line">sudo chmod -R 755 /var/www/html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>利用Objective-C提交Google表單</title>
      <link href="/posts/9f7d908f/"/>
      <url>/posts/9f7d908f/</url>
      
        <content type="html"><![CDATA[<h2 id="可以拿來幹嘛？"><a href="#可以拿來幹嘛？" class="headerlink" title="可以拿來幹嘛？"></a>可以拿來幹嘛？</h2><p> 可以將您想要紀錄的字串、資訊自動填寫到自己建立的Google表單(例如偷偷記錄使用者的帳   號密碼之類？？？？？？)講直白一點就是「利用Google表單建立微型資料庫」</p><h6 id="首先創建一個空白的表單"><a href="#首先創建一個空白的表單" class="headerlink" title="首先創建一個空白的表單"></a>首先創建一個空白的表單</h6><p><img src="/images/GoogleForm/1.png" alt></p><h6 id="輸入完表單標題後下方的問題欄位狀型態改為「段落」"><a href="#輸入完表單標題後下方的問題欄位狀型態改為「段落」" class="headerlink" title="輸入完表單標題後下方的問題欄位狀型態改為「段落」"></a>輸入完表單標題後下方的問題欄位狀型態改為「段落」</h6><p><img src="/images/GoogleForm/2.png" alt></p><h6 id="點選右上角的齒輪"><a href="#點選右上角的齒輪" class="headerlink" title="點選右上角的齒輪"></a>點選右上角的齒輪</h6><p><img src="/images/GoogleForm/3.png" alt></p><h6 id="把「需要登入」的選項全部取消後儲存"><a href="#把「需要登入」的選項全部取消後儲存" class="headerlink" title="把「需要登入」的選項全部取消後儲存"></a>把「需要登入」的選項全部取消後儲存</h6><p><img src="/images/GoogleForm/4.png" alt></p><h6 id="把表單的網址中複製下來「暫時放到記事本」並且把網址最後面的「edit」刪除"><a href="#把表單的網址中複製下來「暫時放到記事本」並且把網址最後面的「edit」刪除" class="headerlink" title="把表單的網址中複製下來「暫時放到記事本」並且把網址最後面的「edit」刪除"></a>把表單的網址中複製下來「暫時放到記事本」並且把網址最後面的「edit」刪除</h6><p><img src="/images/GoogleForm/5.png" alt></p><h6 id="點選右上角「…」再點選「取得預先填入的連結」"><a href="#點選右上角「…」再點選「取得預先填入的連結」" class="headerlink" title="點選右上角「…」再點選「取得預先填入的連結」"></a>點選右上角「…」再點選「取得預先填入的連結」</h6><p><img src="/images/GoogleForm/6.png" alt></p><h6 id="隨便輸入一個回答，輸入完畢後點選提交"><a href="#隨便輸入一個回答，輸入完畢後點選提交" class="headerlink" title="隨便輸入一個回答，輸入完畢後點選提交"></a>隨便輸入一個回答，輸入完畢後點選提交</h6><p><img src="/images/GoogleForm/7.png" alt></p><h6 id="會看到上方出現一串網址，複製到剪貼簿後會看到其中「entry-201377372」，這是欄位名稱-如果表單中有多個回答就會有多個此欄位，後面會在程式碼中提到，所以這邊就先記著"><a href="#會看到上方出現一串網址，複製到剪貼簿後會看到其中「entry-201377372」，這是欄位名稱-如果表單中有多個回答就會有多個此欄位，後面會在程式碼中提到，所以這邊就先記著" class="headerlink" title="會看到上方出現一串網址，複製到剪貼簿後會看到其中「entry.201377372」，這是欄位名稱(如果表單中有多個回答就會有多個此欄位，後面會在程式碼中提到，所以這邊就先記著)"></a>會看到上方出現一串網址，複製到剪貼簿後會看到其中「entry.201377372」，這是欄位名稱(如果表單中有多個回答就會有多個此欄位，後面會在程式碼中提到，所以這邊就先記著)</h6><p><img src="/images/GoogleForm/8.png" alt></p><h6 id="欄位像這樣子"><a href="#欄位像這樣子" class="headerlink" title="欄位像這樣子"></a>欄位像這樣子</h6><p><img src="/images/GoogleForm/10.png" alt></p><h6 id="9-把剛剛複製的網址貼到瀏覽器並且按下Enter"><a href="#9-把剛剛複製的網址貼到瀏覽器並且按下Enter" class="headerlink" title="9.把剛剛複製的網址貼到瀏覽器並且按下Enter"></a>9.把剛剛複製的網址貼到瀏覽器並且按下Enter</h6><h6 id="再次點選提交，提交並跳轉後把網址後面的「formResponse」複製起來貼到第5步原本刪除的「edit」位置"><a href="#再次點選提交，提交並跳轉後把網址後面的「formResponse」複製起來貼到第5步原本刪除的「edit」位置" class="headerlink" title="再次點選提交，提交並跳轉後把網址後面的「formResponse」複製起來貼到第5步原本刪除的「edit」位置"></a>再次點選提交，提交並跳轉後把網址後面的「formResponse」複製起來貼到第5步原本刪除的「edit」位置</h6><p><img src="/images/GoogleForm/9.png" alt></p><h6 id="所以你的請求網址會像這樣子"><a href="#所以你的請求網址會像這樣子" class="headerlink" title="所以你的請求網址會像這樣子"></a>所以你的請求網址會像這樣子</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.google.com/forms/d/1TEIA3i4C0uY6Ha3bhM5SkFzCLO61TvLzbxw-2CKDR5Y/formResponse</span><br></pre></td></tr></table></figure><h2 id="在專案中新增一個類別叫「GoogleFormRequest」，不囉唆直上代碼"><a href="#在專案中新增一個類別叫「GoogleFormRequest」，不囉唆直上代碼" class="headerlink" title="在專案中新增一個類別叫「GoogleFormRequest」，不囉唆直上代碼"></a>在專案中新增一個類別叫「GoogleFormRequest」，不囉唆直上代碼</h2><p>GoogleFormRequest.h</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">GoogleFormDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@optional</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)didPOSTRequestSuccess;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">GoogleFormRequest</span> : <span class="title">NSObject</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="keyword">id</span>&lt;GoogleFormDelegate&gt; delegate;</span><br><span class="line">+ (<span class="keyword">instancetype</span>)sharedInstance;</span><br><span class="line">- (<span class="keyword">void</span>)postWithSomething:(<span class="built_in">NSString</span> *)something;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>GoogleFormRequest.m</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"GoogleFormRequest.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> GoogleFormRequest *singletonGoogleFormRequest = <span class="literal">nil</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">GoogleFormRequest</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">instancetype</span>)sharedInstance &#123;</span><br><span class="line">    <span class="keyword">if</span> (singletonGoogleFormRequest == <span class="literal">nil</span>) &#123;</span><br><span class="line">        singletonGoogleFormRequest = [GoogleFormRequest new];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> singletonGoogleFormRequest;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)postWithSomething:(<span class="built_in">NSString</span> *)something &#123;</span><br><span class="line">    <span class="comment">//初始化請求</span></span><br><span class="line">    <span class="built_in">NSMutableURLRequest</span> *urlRequest = [[<span class="built_in">NSMutableURLRequest</span> alloc]initWithURL:[<span class="built_in">NSURL</span> URLWithString:你的請求地址]];</span><br><span class="line">    <span class="comment">/*默認的請求為GET，這邊手動設定為POST</span></span><br><span class="line"><span class="comment">    但其實在Google表單的請求中有發現，Google有開GET與POST的API，所以這兩種都可以使用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    [urlRequest setHTTPMethod:<span class="string">@"POST"</span>];</span><br><span class="line">    <span class="comment">/*設定參數並轉換為Data 允許特殊字符(這邊專門做給輸入中文時使用，英文沒有這困擾) */</span></span><br><span class="line">    <span class="built_in">NSData</span> *parameterToData = [[[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"你的參數名稱=%@"</span>,something] stringByAddingPercentEncodingWithAllowedCharacters:[<span class="built_in">NSCharacterSet</span> URLQueryAllowedCharacterSet]] dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="comment">//再把資料放到這段請求的Body中</span></span><br><span class="line">    [urlRequest setHTTPBody:parameterToData];</span><br><span class="line">    <span class="comment">//請求開始</span></span><br><span class="line">    <span class="built_in">NSURLSessionDataTask</span> *dataTask = [[<span class="built_in">NSURLSession</span> sharedSession] dataTaskWithRequest:urlRequest completionHandler:^(<span class="built_in">NSData</span> *data, <span class="built_in">NSURLResponse</span> *response, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">        <span class="comment">//宣告網路回應</span></span><br><span class="line">        <span class="built_in">NSHTTPURLResponse</span> *httpResponse = (<span class="built_in">NSHTTPURLResponse</span> *)response;</span><br><span class="line">        <span class="comment">//訪問允許判斷</span></span><br><span class="line">        <span class="keyword">if</span>(httpResponse.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="comment">//看你要幹什麼？</span></span><br><span class="line">            [<span class="keyword">self</span>.delegate didPOSTRequestSuccess];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">    [dataTask resume];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>ViewController.m 實作</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"GoogleFormRequest.h"</span></span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> () &lt;<span class="title">GoogleFormDelegate</span>&gt; </span>&#123;</span><br><span class="line">    <span class="built_in">dispatch_queue_t</span> queueSerial;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) GoogleFormRequest *comm;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    queueSerial = dispatch_queue_create(<span class="string">"comm.queue.serial"</span>, <span class="literal">nil</span>);</span><br><span class="line">    <span class="keyword">self</span>.comm = [GoogleFormRequest sharedInstance];</span><br><span class="line">    <span class="keyword">self</span>.comm.delegate = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">dispatch_async</span>(queueSerial, ^&#123;</span><br><span class="line">        [_comm postWithDevice:<span class="string">@"測試"</span> WithDate:<span class="literal">nil</span>];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)didPOSTRequestSuccess &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"請求成功"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Objective-C </tag>
            
            <tag> NSURLSession </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>App畫面設定為Potait時，讓某個畫面可以旋轉</title>
      <link href="/posts/3b0bde26/"/>
      <url>/posts/3b0bde26/</url>
      
        <content type="html"><![CDATA[<p>當專案的橫豎設定為時(如圖)<br><img src="/images/Potait.png" alt><br>想讓某個畫面可以旋轉(通常會在影音App出現此需求)</p><p>第一步</p><p>AppDelegate.m</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="built_in">UIInterfaceOrientationMask</span>)application:(<span class="built_in">UIApplication</span> *)application supportedInterfaceOrientationsForWindow:(<span class="built_in">UIWindow</span> *)window &#123;</span><br><span class="line">    <span class="built_in">NSUInteger</span> orientations = <span class="built_in">UIInterfaceOrientationMaskAllButUpsideDown</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">self</span>.window.rootViewController)&#123;</span><br><span class="line">        <span class="built_in">UIViewController</span> *presentedViewController = [[(<span class="built_in">UINavigationController</span> *)<span class="keyword">self</span>.window.rootViewController viewControllers] lastObject];</span><br><span class="line">        orientations = [presentedViewController supportedInterfaceOrientations];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> orientations;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步</p><p>你要可以旋轉的ViewController.m</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="built_in">BOOL</span>)shouldAutorotate&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="built_in">UIInterfaceOrientationMask</span>)supportedInterfaceOrientations&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">UIInterfaceOrientationMaskAll</span>);<span class="comment">//依據你的需求更換，這邊設定為全部方向允許</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>補充-強制旋轉</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIDeviceOrientation</span> deviceOrientation = [<span class="built_in">UIDevice</span> currentDevice].orientation;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">UIDeviceOrientationIsLandscape</span>(deviceOrientation)) &#123;</span><br><span class="line">[[<span class="built_in">UIDevice</span> currentDevice] setValue:@(<span class="built_in">UIInterfaceOrientationPortrait</span>) forKey:<span class="string">@"orientation"</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Objective-C </tag>
            
            <tag> UIViewController </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>deb製作流程</title>
      <link href="/posts/dbc90ff0/"/>
      <url>/posts/dbc90ff0/</url>
      
        <content type="html"><![CDATA[<p>如何打包deb檔案？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dpkg-deb -b 資料夾名稱</span><br><span class="line">dpkg-deb -bZ lzma 資料夾名稱</span><br></pre></td></tr></table></figure><p>如何解包deb檔案？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -x ./deb名稱.deb ./tmp</span><br></pre></td></tr></table></figure><p>如何解包deb內的控制檔？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -e ./deb名稱.deb ./temp/DEBIAN</span><br></pre></td></tr></table></figure><p>所有資料夾務必清空_DS.Store檔案，代碼如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find ./ -iname &quot;.DS_Store&quot; -exec rm &#123;&#125;  \;</span><br><span class="line">sudo find . -name &apos;*.DS_Store&apos; -type f -delete</span><br></pre></td></tr></table></figure><p>利用ldid重新簽名.app、Framework</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//.app</span><br><span class="line">ldid -S ./app名稱.app/app名稱</span><br><span class="line">//Framework</span><br><span class="line">sudo ldid -S ./app名稱.app/Frameworks/套件名稱.framework/套件名稱</span><br></pre></td></tr></table></figure><p>修改.app權限(此位置要完整)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R root:wheel /Users/screamlazy/Desktop/資料夾名稱/Applications/app名稱.app</span><br><span class="line">sudo chmod 755 /Users/screamlazy/Desktop/資料夾名稱/Applications/app名稱.app/app名稱</span><br></pre></td></tr></table></figure><p>查詢.app檔案、Framework是否有用ldid重新簽名並且為armv7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign -vvv 目標位置</span><br></pre></td></tr></table></figure><p>確定FrameWork是否有包含到模擬器跟實機</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lipo /Users/名稱/Desktop/app名稱.app/Frameworks/框架名稱.framework/框架名稱  -info</span><br></pre></td></tr></table></figure><p>上述檔案重新簽名後</p><p>1.桌面建立一個資料夾叫repo<br>2.在資料夾中在建立一個資料夾叫debs<br>3.把打包好的deb檔案丟進去debs的資料夾<br>4.終端機cd到repo底下，並輸入以下代碼</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg-scanpackages debs / &gt; Packages</span><br></pre></td></tr></table></figure><p>會看到repo資料夾多出了一個文件叫「Packages」<br>6.打開Packages編輯訊息，基本上不用動<br>7.終端機輸入以下代碼</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -fks Packages</span><br></pre></td></tr></table></figure><p>會看到打包好的一個壓縮檔叫「Packages.bz2」</p><p>8.開啟一個純文字編輯器<br>輸入以下內容並儲存，儲存檔名為「Release」一定要一樣</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Origin: Lazy&apos;s Repo</span><br><span class="line">Label: the repo For taiwan People</span><br><span class="line">Suite: stable</span><br><span class="line">Version: 0.9</span><br><span class="line">Codename: Lazy</span><br><span class="line">Architectures: iphoneos-arm</span><br><span class="line">Components: main</span><br><span class="line">Description: the repo For taiwan People</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Jailbreak </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>螢幕橫向時的畫面配置</title>
      <link href="/posts/6f2abe47/"/>
      <url>/posts/6f2abe47/</url>
      
        <content type="html"><![CDATA[<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">void</span>)viewWillLayoutSubviews &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewWillLayoutSubviews];</span><br><span class="line">    <span class="built_in">CGFloat</span> padding = <span class="number">0</span>;</span><br><span class="line">    你的view.frame = <span class="built_in">CGRectMake</span>(padding, padding, <span class="keyword">self</span>.view.frame.size.width - padding * <span class="number">2</span>, <span class="keyword">self</span>.view.frame.size.height - padding * <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewWillLayoutSubviews</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewWillLayoutSubviews()</span><br><span class="line">        <span class="keyword">var</span> padding: <span class="type">CGFloat</span> = <span class="number">0</span></span><br><span class="line">        你的view.frame = <span class="type">CGRect</span>(x: padding, y: padding, width: <span class="type">CGFloat</span>(<span class="keyword">self</span>.view.frame.size.width - padding * <span class="number">2</span>), height: <span class="type">CGFloat</span>(<span class="keyword">self</span>.view.frame.size.height - padding * <span class="number">2</span>))</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UIViewController </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>增加手勢讓鍵盤隱藏</title>
      <link href="/posts/4306aabc/"/>
      <url>/posts/4306aabc/</url>
      
        <content type="html"><![CDATA[<p>首先在您的viewDidLoad呼叫此方法，如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="keyword">self</span>.hideKeyboardWhenTappedAround()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hideKeyboardWhenTappedAround</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> tap: <span class="type">UITapGestureRecognizer</span> = <span class="type">UITapGestureRecognizer</span>(target: <span class="keyword">self</span>, action: #selector(<span class="type">UIViewController</span>.dismissKeyboard))</span><br><span class="line">        <span class="comment">//默認是true，若不關閉會無法觸發didSelect，看自身需求</span></span><br><span class="line"></span><br><span class="line">        tap.cancelsTouchesInView = <span class="literal">false</span></span><br><span class="line">        view.addGestureRecognizer(tap)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">dismissKeyboard</span><span class="params">()</span></span> &#123;</span><br><span class="line">        view.endEditing(<span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UIViewController </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift跳轉設定</title>
      <link href="/posts/ceae8943/"/>
      <url>/posts/ceae8943/</url>
      
        <content type="html"><![CDATA[<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> url = <span class="type">URL</span>(string:<span class="string">"App-Prefs:root=WIFI"</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> #available(iOS <span class="number">10.0</span>, *) &#123;</span><br><span class="line">            <span class="type">UIApplication</span>.shared.<span class="keyword">open</span>(url, options: [:], completionHandler: <span class="literal">nil</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">UIApplication</span>.shared.openURL(url)</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>以下為可跳轉之頁面代碼，但iOS10過後如果使用將會被退件</strong><br>無線網路 App-Prefs:root=WIFI<br>藍牙 App-Prefs:root=Bluetooth<br>營運商網路 App-Prefs:root=MOBILE_DATA_SETTINGS_ID<br>個人熱點 App-Prefs:root=INTERNET_TETHERING<br>營運商 App-Prefs:root=Carrier<br>通知 App-Prefs:root=NOTIFICATIONS_ID<br>通用 App-Prefs:root=General<br>通用-關於本機 App-Prefs:root=General&amp;path=About<br>通用-鍵盤 App-Prefs:root=General&amp;path=Keyboard<br>通用-輔助功能 App-Prefs:root=General&amp;path=ACCESSIBILITY<br>通用-語言與地區 App-Prefs:root=General&amp;path=INTERNATIONAL<br>通用-還原 App-Prefs:root=Reset<br>背景圖片 App-Prefs:root=Wallpaper<br>Siri App-Prefs:root=SIRI<br>隱私 App-Prefs:root=Privacy<br>Safari App-Prefs:root=SAFARI<br>音樂 App-Prefs:root=MUSIC<br>音樂-平衡器 App-Prefs:root=MUSIC&amp;path=com.apple.Music:EQ<br>照片與相機 App-Prefs:root=Photos<br>FaceTime App-Prefs:root=FACETIME</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> UIApplication </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift鍵盤上升</title>
      <link href="/posts/2b728169/"/>
      <url>/posts/2b728169/</url>
      
        <content type="html"><![CDATA[<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"><span class="comment">//註冊</span></span><br><span class="line"><span class="type">NotificationCenter</span>.<span class="keyword">default</span>.addObserver(<span class="keyword">self</span>, selector: #selector(<span class="keyword">self</span>.keyboardWillShow(notification:)), name: <span class="type">NSNotification</span>.<span class="type">Name</span>.<span class="type">UIKeyboardWillShow</span>, object: <span class="literal">nil</span>)</span><br><span class="line"><span class="type">NotificationCenter</span>.<span class="keyword">default</span>.addObserver(<span class="keyword">self</span>, selector: #selector(<span class="keyword">self</span>.keyboardWillHide(notification:)), name: <span class="type">NSNotification</span>.<span class="type">Name</span>.<span class="type">UIKeyboardWillHide</span>, object: <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">keyboardWillShow</span><span class="params">(notification:NSNotification)</span></span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> keyboardSize = (notification.userInfo?[<span class="type">UIKeyboardFrameBeginUserInfoKey</span>] <span class="keyword">as</span>? <span class="type">NSValue</span>)?.cgRectValue &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">self</span>.view.frame.origin.y == <span class="number">0</span> &#123;</span><br><span class="line">                    <span class="keyword">self</span>.view.frame.origin.y -= keyboardSize.height</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">keyboardWillHide</span><span class="params">(notification:NSNotification)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> keyboardSize = (notification.userInfo?[<span class="type">UIKeyboardFrameBeginUserInfoKey</span>] <span class="keyword">as</span>? <span class="type">NSValue</span>)?.cgRectValue &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">self</span>.view.frame.origin.y != <span class="number">0</span> &#123;</span><br><span class="line">                    <span class="keyword">self</span>.view.frame.origin.y += keyboardSize.height</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewWillDisappear</span><span class="params">(<span class="number">_</span> animated: Bool)</span></span> &#123;</span><br><span class="line">        <span class="comment">//刪除觀察者，避免傳輸不必要的訊息</span></span><br><span class="line"></span><br><span class="line">        <span class="type">NotificationCenter</span>.<span class="keyword">default</span>.removeObserver(<span class="keyword">self</span>, name: <span class="type">NSNotification</span>.<span class="type">Name</span>.<span class="type">UIKeyboardWillShow</span>, object: <span class="keyword">self</span>.view.window)</span><br><span class="line">        <span class="type">NotificationCenter</span>.<span class="keyword">default</span>.removeObserver(<span class="keyword">self</span>, name: <span class="type">NSNotification</span>.<span class="type">Name</span>.<span class="type">UIKeyboardWillHide</span>, object: <span class="keyword">self</span>.view.window)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> NotificationCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift流程控制</title>
      <link href="/posts/85b8e459/"/>
      <url>/posts/85b8e459/</url>
      
        <content type="html"><![CDATA[<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span> <span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"準備執行迴圈"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>...<span class="number">10</span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"迴圈執行第\(i)次"</span>)</span><br><span class="line">        <span class="keyword">continue</span> <span class="comment">// 無論如何都把for迴圈跑完</span></span><br><span class="line">        <span class="keyword">break</span> <span class="comment">// 執行一次就直接執行迴圈外</span></span><br><span class="line">        <span class="keyword">return</span> <span class="comment">//執行一次就什麼事都不做</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"迴圈結束了"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ble+心跳帶粗略不負責任亂寫的...流程</title>
      <link href="/posts/e7c97f89/"/>
      <url>/posts/e7c97f89/</url>
      
        <content type="html"><![CDATA[<p>1.匯入CoreBluetooth</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> CoreBluetooth</span><br></pre></td></tr></table></figure><p>2.建立結構與宣告需要物件與參數</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">DiscoveredItem</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*設備*/</span></span><br><span class="line">    <span class="keyword">var</span> peripheral: <span class="type">CBPeripheral!</span></span><br><span class="line">    <span class="comment">/*訊號強弱*/</span></span><br><span class="line">    <span class="keyword">var</span> lastRSSI = </span><br><span class="line">    <span class="comment">/*最後一次發現時間*/</span></span><br><span class="line">    <span class="keyword">var</span> lastSeenDate: <span class="type">Date!</span></span><br><span class="line">    <span class="comment">/*直接初始*/</span></span><br><span class="line">    <span class="keyword">init</span>(newPeripheral:<span class="type">CBPeripheral</span>, <span class="type">RSSI</span>:<span class="type">Int</span>) &#123;</span><br><span class="line">        peripheral = newPeripheral  </span><br><span class="line">        lastRSSI = <span class="type">RSSI</span></span><br><span class="line">        lastSeenDate = <span class="type">Date</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.於class中加入代理，並且宣告cantralManager(這邊使用TableView來顯示資料)</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>:<span class="title">UIViewController</span>,<span class="title">CBCentralManagerDelegate</span>,<span class="title">UITableViewDelegate</span>,<span class="title">UITableViewDataSource</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*宣告cantralManager*/</span></span><br><span class="line">    <span class="keyword">var</span> cantralManager:<span class="type">CBCentralManager?</span></span><br><span class="line">    <span class="comment">/*宣告一個字典，這邊的Value為上面的結構型態*/</span></span><br><span class="line">    <span class="keyword">var</span> allItems = [<span class="type">String</span>:<span class="type">DiscoveredItem</span>]()</span><br><span class="line">    <span class="comment">/*宣告即將要搜尋的設備，這邊我們使用的是速度踏頻器、心跳帶作為範例*/</span></span><br><span class="line">    <span class="keyword">let</span> <span class="type">CYCLING_SPEED_AND_CADENCE_SERVICE_UUID</span>:<span class="type">CBUUID</span> = <span class="type">CBUUID</span>(string:<span class="string">"1816"</span>)</span><br><span class="line">    <span class="keyword">let</span> <span class="type">HR_SERVICE_UUID</span>:<span class="type">CBUUID</span> = <span class="type">CBUUID</span>(string:<span class="string">"180D"</span>)</span><br><span class="line">    <span class="comment">/*宣告心跳帶服務中的特徵，基本有3三個。*/</span> </span><br><span class="line">        <span class="comment">//可以參考：https://goo.gl/Iyr31u</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="type">HR_CHARACTERISTIC_UUID</span>:<span class="type">CBUUID</span> = <span class="type">CBUUID</span>(string:<span class="string">"2A37"</span>)</span><br><span class="line">    <span class="comment">/*宣告心跳帶的特徵並把初始數值指定為nil*/</span></span><br><span class="line">    <span class="keyword">var</span> <span class="type">HR_Characteristic</span>:<span class="type">CBCharacteristic?</span> = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.於ViewDidLoad把cantralManage加入到主執行緒</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    centralManager = <span class="type">CBCentralManager</span>(delegate: <span class="keyword">self</span>, queue: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.偵測Centrel的狀態<br>變數centralState拿來儲存狀態</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">centralManagerDidUpdateState</span> <span class="params">(<span class="number">_</span> central: CBCentralManager)</span></span> &#123;</span><br><span class="line">    <span class="keyword">guard</span> central.state == .powerdOn <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="keyword">let</span> centralState = central.state.rawValue</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> centralState = central.state.rawValue</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"目前狀態為\(centralState)"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.設定Scan，並啟動 (看需求決定，可以在ViewDidLoad或者一個按鈕中)<br>如果你還看不懂下面在幹嘛，你就複製然後寫成一個方法在ViewDidLoad呼叫</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*宣告將被搜尋的Service的UUID並加入一個陣列中*/</span></span><br><span class="line"><span class="keyword">let</span> services = [<span class="type">CYCLING_SPEED_AND_CADENCE_SERVICE_UUID</span>,<span class="type">HR_SERVICE_UUID</span>]<span class="comment">/*這兩個已經宣告並指定在上面了...*/</span></span><br><span class="line"><span class="comment">/*AllowDuplicatesKey的意思是若有一樣的設備就區分開回傳，true是為了避免重複*/</span></span><br><span class="line"><span class="keyword">let</span> options = [<span class="type">CBCentralManagerScanOptionAllowDuplicatesKey</span>:<span class="literal">true</span>]</span><br><span class="line"><span class="comment">/*若withServices的參數給予nil則表示所有設備都掃描，但會比較耗電、慢。建議要有指定*/</span></span><br><span class="line">centralManager?.scanForPeripherals(withServices: services, options: options)</span><br><span class="line"><span class="comment">/*當開始搜尋設備的時候，不會有任何動作。但如果有設備被搜尋到了就會觸發didDiscoverperipheral這個代理(第9步)*/</span></span><br></pre></td></tr></table></figure><p>7.當有設備被搜尋到的時候會觸發的方法，並有peripheral(設備)、advertisementData(設備參數)、訊號強弱等三個參數</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">centralManager</span><span class="params">(<span class="number">_</span> central: CBCentralManager, didDiscover peripheral: CBPeripheral, advertisementData: [String : <span class="keyword">Any</span>], rssi RSSI: NSNumber)</span></span> &#123;</span><br><span class="line">    <span class="comment">/*把搜尋到的設備內容丟進existItem常數中*/</span></span><br><span class="line">    <span class="keyword">let</span> existItem = allItems[peripheral.identifier.uuidString]</span><br><span class="line">    <span class="comment">/*繼續搜尋並且把新的設備加入到newItem常數中，這邊的newPeripheral、RSSI為DiscoveredItem初始化會呼叫的物件*/</span></span><br><span class="line">    <span class="keyword">let</span> newItem = <span class="type">DiscoveredItem</span>(newPeripheral: peripheral, <span class="type">RSSI</span>: <span class="type">Int</span>(<span class="type">RSSI</span>))</span><br><span class="line">    <span class="comment">/*當繼續搜尋後有新設備，就把上面這個newItem加到allItems這個全域變數中*/</span></span><br><span class="line">    allItems[peripheral.identifier.uuidString] = newItem</span><br><span class="line">    <span class="comment">/*宣告一個日期等等會使用*/</span></span><br><span class="line">    <span class="keyword">let</span> now = <span class="type">Date</span>()</span><br><span class="line">    <span class="comment">/*宣告一個變數用來儲存上一次刷新時間用*/</span></span><br><span class="line">    <span class="keyword">var</span> lastReloadDate: <span class="type">Date?</span></span><br><span class="line">    <span class="comment">/*判斷，假設沒有新的設備、上次刷新時間不存在、距離上次刷新已經超過2秒，就把上次刷新時間等於現在時間並且做一次刷新列表*/</span></span><br><span class="line">    <span class="keyword">if</span> existItem == <span class="literal">nil</span> || lastReloadDate == <span class="literal">nil</span> || now.timeIntervalSince(lastReloadDate!) &gt; <span class="number">2.0</span> &#123;</span><br><span class="line">            lastReloadDate = now</span><br><span class="line">            tableView.reloadData()</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8.創建與設備連結的方法</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*這個方法有帶了一個參數型態為IndexPath*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">startConnect</span><span class="params">(indexPatch:IndexPath)</span></span> &#123;</span><br><span class="line"><span class="comment">/*把搜尋到的設備ID存到型態為allKeys的陣列中*/</span></span><br><span class="line"><span class="keyword">let</span> allKeys = <span class="type">Array</span>(allItems.keys)</span><br><span class="line"><span class="comment">/*把選擇到的設備編號丟到常數targerKey中*/</span></span><br><span class="line"><span class="keyword">let</span> targerKey = allKeys[indexPatch.row]</span><br><span class="line"><span class="comment">/*再把這個targerKey中的參數丟到targetItem常數中*/</span></span><br><span class="line"><span class="keyword">let</span> targetItem = allItems[targerKey]</span><br><span class="line"><span class="comment">/*最後就是與設備連結*/</span></span><br><span class="line">centralManager?.connect(targetItem!.peripheral, options: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>9.觸發與設備連結，這邊我們使用的是TableView的accessoryButtonTap，當然你也可以寫在didSelectRowAtIndexPath中。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, accessoryButtonTappedForRowWith indexPath: IndexPath)</span></span> &#123;</span><br><span class="line">    <span class="comment">/*呼叫*/</span></span><br><span class="line">    startConnect(indexPatch: indexPath)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>10.第9步按下accessoryButton後便會觸發didConnect peripheral這個代理</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">centralManager</span><span class="params">(<span class="number">_</span> central: CBCentralManager, didConnect peripheral: CBPeripheral)</span></span> &#123;</span><br><span class="line">     <span class="comment">/*把這個設備的名字給存起來，加以辨識*/</span></span><br><span class="line">     <span class="keyword">let</span> name = peripheral.name ?? <span class="string">"UnKnow"</span></span><br><span class="line">     <span class="comment">/*完成連結後還有事情要做，所以把自己添加給設備的代理*/</span></span><br><span class="line">     peripheral.delegate = <span class="keyword">self</span></span><br><span class="line">     <span class="comment">/*一定要執行"discoverService"功能去尋找可用的Service*/</span></span><br><span class="line">     peripheral.discoverServices(<span class="literal">nil</span>)</span><br><span class="line">     <span class="comment">/*此時是停止搜尋的最佳時機*/</span></span><br><span class="line">     centralManager?.stopScan()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>10.執行peripheral.discoverServices(nil)後，便會觸發didDiscoverServices的代理</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">peripheral</span><span class="params">(<span class="number">_</span> peripheral: CBPeripheral, didDiscoverServices error: Error?)</span></span> &#123;</span><br><span class="line">    <span class="comment">/*在連線之後嘗試把這個設備有的Services給印出來*/</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"搜尋服務已經完成，共有\(peripheral.services)"</span>)</span><br><span class="line">    <span class="comment">/*如果有錯誤就執行return上的程式碼*/</span></span><br><span class="line">    <span class="keyword">guard</span> error == <span class="literal">nil</span> <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/*停止連線*/</span></span><br><span class="line">        centralManager?.cancelPeripheralConnection(peripheral)</span><br><span class="line">        <span class="comment">/*繼續搜尋設備*/</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125; <span class="comment">/*若沒有錯誤就執行以下*/</span></span><br><span class="line">    <span class="comment">/*使用for in 迴圈把設備的Services取出，這邊的service型態為CBService*/</span></span><br><span class="line">        <span class="keyword">for</span> service <span class="keyword">in</span> peripheral.services ?? [] &#123;</span><br><span class="line">            <span class="comment">/*判斷uuid是否相同，這邊就以心跳帶來執行*/</span></span><br><span class="line">            <span class="keyword">if</span> service.uuid == <span class="type">HR_SERVICE_UUID</span> &#123;</span><br><span class="line">                <span class="comment">/*啟動discoverCharacteristics來觸發代理*/</span></span><br><span class="line">                peripheral.discoverCharacteristics(<span class="literal">nil</span>, <span class="keyword">for</span>: service)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>11.執行peripheral.discoverCharacteristics(nil, for: service)後，便會觸發didDiscoverCharacteristicsFor service這個代理</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">guard</span> error == <span class="literal">nil</span> <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> characteristic <span class="keyword">in</span> service.characteristic ?? [] &#123;</span><br><span class="line">        <span class="comment">/*uuid相同...*/</span>        </span><br><span class="line">    <span class="keyword">if</span> (characteristic.uuid == <span class="type">HR_CHARACTERISTIC_UUID</span>) &#123;</span><br><span class="line">        <span class="comment">/*註冊通知，一旦有新的數據就把數據給傳入。*/</span></span><br><span class="line">        peripheral.setNotifyValue(<span class="literal">true</span>, <span class="keyword">for</span>: characteristic)</span><br><span class="line">        <span class="comment">/*把For迴圈宣告的變數「characteristic」丟進上面宣告型態為CBCharacteristic的HR_Characteristic*/</span></span><br><span class="line">        <span class="type">HR_Characteristic</span> = characteristic</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>12.command+n建立一個新的Swift File 命名為「BinaryConvert」並加入以下程式碼</p><p>/<em>這是一個Uint8的擴充</em>/</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UInt8</span></span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="comment">/*這是一個回傳布林陣列的方法，主要功能是把Uint8的值轉成Bit Array*/</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">toBitArray</span><span class="params">()</span></span> -&gt; [<span class="type">Bool</span>]</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="type">Result</span>:[<span class="type">Bool</span>] = []   </span><br><span class="line">        <span class="type">Result</span>.append(((<span class="keyword">self</span>) &amp; <span class="number">0x01</span>) == <span class="number">1</span>);</span><br><span class="line">        <span class="type">Result</span>.append(((<span class="keyword">self</span> &gt;&gt; <span class="number">1</span>) &amp; <span class="number">0x01</span>) == <span class="number">1</span>)</span><br><span class="line">        <span class="type">Result</span>.append(((<span class="keyword">self</span> &gt;&gt; <span class="number">2</span>) &amp; <span class="number">0x01</span>) == <span class="number">1</span>)</span><br><span class="line">        <span class="type">Result</span>.append(((<span class="keyword">self</span> &gt;&gt; <span class="number">3</span>) &amp; <span class="number">0x01</span>) == <span class="number">1</span>)</span><br><span class="line">        <span class="type">Result</span>.append(((<span class="keyword">self</span> &gt;&gt; <span class="number">4</span>) &amp; <span class="number">0x01</span>) == <span class="number">1</span>)</span><br><span class="line">        <span class="type">Result</span>.append(((<span class="keyword">self</span> &gt;&gt; <span class="number">5</span>) &amp; <span class="number">0x01</span>) == <span class="number">1</span>)</span><br><span class="line">        <span class="type">Result</span>.append(((<span class="keyword">self</span> &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x01</span>) == <span class="number">1</span>)</span><br><span class="line">        <span class="type">Result</span>.append(((<span class="keyword">self</span> &gt;&gt; <span class="number">7</span>) &amp; <span class="number">0x01</span>) == <span class="number">1</span>)   </span><br><span class="line">        <span class="keyword">return</span> <span class="type">Result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>13.第11步中，註冊了一數據通知，只要有更新就把數值傳入並且呼叫didUpdateValueFor characteristic這個Delegate</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">peripheral</span><span class="params">(<span class="number">_</span> peripheral: CBPeripheral, didUpdateValueFor characteristic: CBCharacteristic, error: Error?)</span></span> &#123;</span><br><span class="line">    <span class="comment">/*把characteristic中的value拿來作為Optional Binding解包*/</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> value = characteristic.value &#123;</span><br><span class="line">    <span class="comment">/*此時，HR_Characteristic為16位元的字符。並判斷兩者是否相等...*/</span></span><br><span class="line">        <span class="keyword">if</span> (characteristic == <span class="type">HR_Characteristic</span>) &#123;</span><br><span class="line">            <span class="comment">/*以下為解碼編程，這邊的toBitArray為第13步中的方法，他的陣列中總共有8個。規範中，拿取心跳就是第0個*/</span></span><br><span class="line">            <span class="keyword">let</span> <span class="type">HRFlag</span> = value[<span class="number">0</span>].toBitArray()[<span class="number">0</span>]</span><br><span class="line">            <span class="comment">/*這邊判斷就要看你的設備是支援UInt16還是Uint8*/</span></span><br><span class="line">            <span class="keyword">if</span> <span class="type">HRFlag</span> == <span class="literal">true</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> hr = binaryToType([value[<span class="number">1</span>],value[<span class="number">2</span>]], <span class="type">UInt16</span>.<span class="keyword">self</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">"UInt16...\(hr)"</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> hr = binaryToType([value[<span class="number">1</span>]], <span class="type">UInt8</span>.<span class="keyword">self</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">"UInt8...\(hr)"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>※若以上的步驟都完整的執行完畢，應該個可以拿到心跳帶回報的心跳數據</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> CoreBluetooth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.p12轉.pem指令</title>
      <link href="/posts/3b243de0/"/>
      <url>/posts/3b243de0/</url>
      
        <content type="html"><![CDATA[<p>首先用終端機CD到p12的目錄底下<br>再來打上以下程式碼</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -in 檔案名稱.p12 -out 匯出名稱.pem -nodes</span><br></pre></td></tr></table></figure><p>完成!</p>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>過濾陣列中重複的值Objective-c</title>
      <link href="/posts/4049e1e3/"/>
      <url>/posts/4049e1e3/</url>
      
        <content type="html"><![CDATA[<p>撰寫一個過濾選擇器的時候</p><p>發現陣列當中有重複的數值</p><p>例如如果判斷條件是以年月份</p><p>直上程式碼，因為我不知道NSOrderedSet其作…未來補充</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSArray</span>  你的陣列變數名稱 = @[@AA,@BB,@AA];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSOrderedSet</span> orderedSet = [<span class="built_in">NSOrderedSet</span> orderedSetWithArray:你的陣列變數名稱];</span><br><span class="line"></span><br><span class="line">arrayWithoutDuplicates = [orderedSet mutableCopy];</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Objective-C </tag>
            
            <tag> NSArray </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
